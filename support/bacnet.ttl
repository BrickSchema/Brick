@prefix bacnet: <http://data.ashrae.org/bacnet/2020#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix quantitykind: <http://qudt.org/vocab/quantitykind/> .
@prefix qudt: <http://qudt.org/schema/qudt/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix unit: <http://qudt.org/vocab/unit/> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

bacnet:ARCNETNetwork a rdfs:Class,
        sh:NodeShape ;
    rdfs:subClassOf bacnet:Network ;
    sh:property [ sh:class bacnet:ARCNETNode ;
            sh:path bacnet:hasNode ] ;
    sh:targetClass bacnet:ARCNETNetwork .

bacnet:ARCNETNode a rdfs:Class,
        sh:NodeShape ;
    rdfs:subClassOf bacnet:Node ;
    sh:property [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:hasAddress ] ;
    sh:targetClass bacnet:ARCNETNode .

bacnet:ARCNETRepeater a rdfs:Class ;
    rdfs:comment "A device that connects two or more ARCNET physical segments at the physical layer." ;
    rdfs:subClassOf bacnet:Repeater .

bacnet:AccessCredentialObject a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Access Credential Object" ;
    bacnet:hasProperty bacnet:Absentee_Limit,
        bacnet:Activation_Time,
        bacnet:Assigned_Access_Rights,
        bacnet:Authentication_Factors,
        bacnet:Authorization_Exemptions,
        bacnet:Belongs_To,
        bacnet:Credential_Disable,
        bacnet:Credential_Status,
        bacnet:Days_Remaining,
        bacnet:Expiration_Time,
        bacnet:Extended_Time_Enable,
        bacnet:Global_Identifier,
        bacnet:Last_Access_Event,
        bacnet:Last_Access_Point,
        bacnet:Last_Use_Time,
        bacnet:Reason_For_Disable,
        bacnet:Reliability,
        bacnet:Reliability_Evaluation_Inhibit,
        bacnet:Status_Flags,
        bacnet:Threat_Authority,
        bacnet:Trace_Flag,
        bacnet:Uses_Remaining ;
    rdfs:subClassOf bacnet:StandardObject ;
    sh:property [ sh:hasValue "access-credential" ;
            sh:path bacnet:object-type ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:credential-disable ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:trace-flag ],
        [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:node bacnet:ArrayOfAssignedAccessRights ;
            sh:path bacnet:assigned-access-rights ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:credential-status ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:maxInclusive "100"^^xsd:nonNegativeInteger ;
            sh:minCount 0 ;
            sh:path bacnet:threat-authority ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:reliability ],
        [ sh:datatype xsd:integer ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:days-remaining ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:DeviceObjectReference ;
            sh:path bacnet:last-access-point ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:last-access-event ],
        [ sh:datatype xsd:integer ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:uses-remaining ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:global-identifier ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:extended-time-enable ],
        [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:node bacnet:ArrayOfCredentialAuthenticationFactor ;
            sh:path bacnet:authentication-factors ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ListOfAuthorizationException ;
            sh:path bacnet:authorization-exemptions ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:absentee-limit ],
        [ sh:datatype xsd:dateTime ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:activation-time ],
        [ sh:datatype xsd:dateTime ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:last-use-time ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:DeviceObjectReference ;
            sh:path bacnet:belongs-to ],
        [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:node bacnet:ListOfAccessCredentialDisableReason ;
            sh:path bacnet:reason-for-disable ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:status-flags ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability-evaluation-inhibit ],
        [ sh:datatype xsd:dateTime ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:expiration-time ] ;
    sh:targetClass bacnet:AccessCredentialObject .

bacnet:AccessDoorObject a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Access Door Object" ;
    bacnet:hasProperty bacnet:Acked_Transitions,
        bacnet:Alarm_Values,
        bacnet:Auditable_Priority_Filter,
        bacnet:Command_Time_Array,
        bacnet:Current_Command_Priority,
        bacnet:Door_Alarm_State,
        bacnet:Door_Extended_Pulse_Time,
        bacnet:Door_Members,
        bacnet:Door_Open_Too_Long_Time,
        bacnet:Door_Pulse_Time,
        bacnet:Door_Status,
        bacnet:Door_Unlock_Delay_Time,
        bacnet:Event_Algorithm_Inhibit,
        bacnet:Event_Algorithm_Inhibit_Ref,
        bacnet:Event_Detection_Enable,
        bacnet:Event_Enable,
        bacnet:Event_Message_Texts,
        bacnet:Event_Message_Texts_Config,
        bacnet:Event_State,
        bacnet:Event_Time_Stamps,
        bacnet:Fault_Values,
        bacnet:Last_Command_Time,
        bacnet:Lock_Status,
        bacnet:Maintenance_Required,
        bacnet:Masked_Alarm_Values,
        bacnet:Notification_Class,
        bacnet:Notify_Type,
        bacnet:Out_Of_Service,
        bacnet:Present_Value,
        bacnet:Priority_Array,
        bacnet:Reliability,
        bacnet:Reliability_Evaluation_Inhibit,
        bacnet:Relinquish_Default,
        bacnet:Secured_Status,
        bacnet:Status_Flags,
        bacnet:Time_Delay,
        bacnet:Time_Delay_Normal,
        bacnet:Value_Source,
        bacnet:Value_Source_Array ;
    rdfs:subClassOf bacnet:StandardObject ;
    sh:property [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ListOfDoorAlarmState ;
            sh:path bacnet:fault-values ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability-evaluation-inhibit ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfCharacterString ;
            sh:path bacnet:event-message-texts ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:event-state ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfTimeStamp ;
            sh:path bacnet:command-time-array ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:out-of-service ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:door-unlock-delay-time ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:door-open-too-long-time ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:lock-status ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:door-pulse-time ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfCharacterString ;
            sh:path bacnet:event-message-texts-config ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:door-extended-pulse-time ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ListOfDoorAlarmState ;
            sh:path bacnet:masked-alarm-values ],
        [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:node bacnet:PriorityArray ;
            sh:path bacnet:priority-array ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfDeviceObjectReference ;
            sh:path bacnet:door-members ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:door-alarm-state ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:time-delay-normal ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:time-delay ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notification-class ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:present-value ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:reliability ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:secured-status ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notify-type ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ValueSource ;
            sh:path bacnet:value-source ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfTimeStamp ;
            sh:path bacnet:event-time-stamps ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ListOfDoorAlarmState ;
            sh:path bacnet:alarm-values ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:TimeStamp ;
            sh:path bacnet:last-command-time ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-detection-enable ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:OptionalPriorityFilter ;
            sh:path bacnet:auditable-priority-filter ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:door-status ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfValueSource ;
            sh:path bacnet:value-source-array ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:relinquish-default ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-algorithm-inhibit ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:status-flags ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-enable ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:maintenance-required ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:acked-transitions ],
        [ sh:hasValue "access-door" ;
            sh:path bacnet:object-type ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ObjectPropertyReference ;
            sh:path bacnet:event-algorithm-inhibit-ref ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:OptionalUnsigned ;
            sh:path bacnet:current-command-priority ] ;
    sh:targetClass bacnet:AccessDoorObject .

bacnet:AccessPointObject a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Access Point Object" ;
    bacnet:hasProperty bacnet:Access_Alarm_Events,
        bacnet:Access_Doors,
        bacnet:Access_Event,
        bacnet:Access_Event_Authentication_Factor,
        bacnet:Access_Event_Credential,
        bacnet:Access_Event_Tag,
        bacnet:Access_Event_Time,
        bacnet:Access_Transaction_Events,
        bacnet:Accompaniment_Time,
        bacnet:Acked_Transitions,
        bacnet:Active_Authentication_Policy,
        bacnet:Authentication_Policy_List,
        bacnet:Authentication_Policy_Names,
        bacnet:Authentication_Status,
        bacnet:Authorization_Mode,
        bacnet:Event_Algorithm_Inhibit,
        bacnet:Event_Algorithm_Inhibit_Ref,
        bacnet:Event_Detection_Enable,
        bacnet:Event_Enable,
        bacnet:Event_Message_Texts,
        bacnet:Event_Message_Texts_Config,
        bacnet:Event_State,
        bacnet:Event_Time_Stamps,
        bacnet:Failed_Attempt_Events,
        bacnet:Failed_Attempts,
        bacnet:Failed_Attempts_Time,
        bacnet:Lockout,
        bacnet:Lockout_Relinquish_Time,
        bacnet:Max_Failed_Attempts,
        bacnet:Muster_Point,
        bacnet:Notification_Class,
        bacnet:Notify_Type,
        bacnet:Number_Of_Authentication_Policies,
        bacnet:Occupancy_Count_Adjust,
        bacnet:Occupancy_Lower_Limit_Enforced,
        bacnet:Occupancy_Upper_Limit_Enforced,
        bacnet:Out_Of_Service,
        bacnet:Priority_For_Writing,
        bacnet:Reliability,
        bacnet:Reliability_Evaluation_Inhibit,
        bacnet:Status_Flags,
        bacnet:Threat_Level,
        bacnet:Transaction_Notification_Class,
        bacnet:Verification_Time,
        bacnet:Zone_From,
        bacnet:Zone_To ;
    rdfs:subClassOf bacnet:StandardObject ;
    sh:property [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ListOfAccessEvent ;
            sh:path bacnet:access-transaction-events ],
        [ sh:hasValue "access-point" ;
            sh:path bacnet:object-type ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ListOfAccessEvent ;
            sh:path bacnet:access-alarm-events ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:DeviceObjectReference ;
            sh:path bacnet:zone-to ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:authentication-status ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notification-class ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ObjectPropertyReference ;
            sh:path bacnet:event-algorithm-inhibit-ref ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:reliability ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:muster-point ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:number-of-authentication-policies ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:access-event-tag ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:transaction-notification-class ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfCharacterString ;
            sh:path bacnet:event-message-texts-config ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfAuthenticationPolicy ;
            sh:path bacnet:authentication-policy-list ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:priority-for-writing ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-algorithm-inhibit ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ListOfAccessEvent ;
            sh:path bacnet:failed-attempt-events ],
        [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:node bacnet:ArrayOfDeviceObjectReference ;
            sh:path bacnet:access-doors ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:out-of-service ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:occupancy-lower-limit-enforced ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfCharacterString ;
            sh:path bacnet:event-message-texts ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:maxInclusive "100"^^xsd:nonNegativeInteger ;
            sh:minCount 0 ;
            sh:path bacnet:threat-level ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:accompaniment-time ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:AuthenticationFactor ;
            sh:path bacnet:access-event-authentication-factor ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:failed-attempts ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:occupancy-count-adjust ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-enable ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:DeviceObjectReference ;
            sh:path bacnet:zone-from ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfTimeStamp ;
            sh:path bacnet:event-time-stamps ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:lockout-relinquish-time ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:status-flags ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:lockout ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability-evaluation-inhibit ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:verification-time ],
        [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:node bacnet:DeviceObjectReference ;
            sh:path bacnet:access-event-credential ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:acked-transitions ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfCharacterString ;
            sh:path bacnet:authentication-policy-names ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:occupancy-upper-limit-enforced ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:access-event ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-detection-enable ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notify-type ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:failed-attempts-time ],
        [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:node bacnet:TimeStamp ;
            sh:path bacnet:access-event-time ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:active-authentication-policy ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:authorization-mode ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:max-failed-attempts ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:event-state ] ;
    sh:targetClass bacnet:AccessPointObject .

bacnet:AccessRightsObject a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Access Rights Object" ;
    bacnet:hasProperty bacnet:Accompaniment,
        bacnet:Enable,
        bacnet:Global_Identifier,
        bacnet:Negative_Access_Rules,
        bacnet:Positive_Access_Rules,
        bacnet:Reliability,
        bacnet:Reliability_Evaluation_Inhibit,
        bacnet:Status_Flags ;
    rdfs:subClassOf bacnet:StandardObject ;
    sh:property [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:reliability ],
        [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:node bacnet:ArrayOfAccessRule ;
            sh:path bacnet:negative-access-rules ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability-evaluation-inhibit ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:status-flags ],
        [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:node bacnet:ArrayOfAccessRule ;
            sh:path bacnet:positive-access-rules ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:DeviceObjectReference ;
            sh:path bacnet:accompaniment ],
        [ sh:hasValue "access-rights" ;
            sh:path bacnet:object-type ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:global-identifier ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:enable ] ;
    sh:targetClass bacnet:AccessRightsObject .

bacnet:AccessRule a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Access Rule" ;
    sh:property [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:location-specifier ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:DeviceObjectReference ;
            sh:path bacnet:location ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:DeviceObjectPropertyReference ;
            sh:path bacnet:time-range ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:time-range-specifier ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:enable ] ;
    sh:targetClass bacnet:AccessRule .

bacnet:AccessUserObject a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Access User Object" ;
    bacnet:hasProperty bacnet:Credentials,
        bacnet:Global_Identifier,
        bacnet:Member_Of,
        bacnet:Members,
        bacnet:Reliability,
        bacnet:Reliability_Evaluation_Inhibit,
        bacnet:Status_Flags,
        bacnet:User_External_Identifier,
        bacnet:User_Information_Reference,
        bacnet:User_Name,
        bacnet:User_Type ;
    rdfs:subClassOf bacnet:StandardObject ;
    sh:property [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ListOfDeviceObjectReference ;
            sh:path bacnet:members ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:user-type ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:status-flags ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:user-external-identifier ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:user-information-reference ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ListOfDeviceObjectReference ;
            sh:path bacnet:member-of ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:user-name ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability-evaluation-inhibit ],
        [ sh:hasValue "access-user" ;
            sh:path bacnet:object-type ],
        [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:node bacnet:ListOfDeviceObjectReference ;
            sh:path bacnet:credentials ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:reliability ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:global-identifier ] ;
    sh:targetClass bacnet:AccessUserObject .

bacnet:AccessZoneObject a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Access Zone Object" ;
    bacnet:hasProperty bacnet:Acked_Transitions,
        bacnet:Adjust_Value,
        bacnet:Alarm_Values,
        bacnet:Credentials_In_Zone,
        bacnet:Entry_Points,
        bacnet:Event_Algorithm_Inhibit,
        bacnet:Event_Algorithm_Inhibit_Ref,
        bacnet:Event_Detection_Enable,
        bacnet:Event_Enable,
        bacnet:Event_Message_Texts,
        bacnet:Event_Message_Texts_Config,
        bacnet:Event_State,
        bacnet:Event_Time_Stamps,
        bacnet:Exit_Points,
        bacnet:Global_Identifier,
        bacnet:Last_Credential_Added,
        bacnet:Last_Credential_Added_Time,
        bacnet:Last_Credential_Removed,
        bacnet:Last_Credential_Removed_Time,
        bacnet:Notification_Class,
        bacnet:Notify_Type,
        bacnet:Occupancy_Count,
        bacnet:Occupancy_Count_Enable,
        bacnet:Occupancy_Lower_Limit,
        bacnet:Occupancy_State,
        bacnet:Occupancy_Upper_Limit,
        bacnet:Out_Of_Service,
        bacnet:Passback_Mode,
        bacnet:Passback_Timeout,
        bacnet:Reliability,
        bacnet:Reliability_Evaluation_Inhibit,
        bacnet:Status_Flags,
        bacnet:Time_Delay,
        bacnet:Time_Delay_Normal ;
    rdfs:subClassOf bacnet:StandardObject ;
    sh:property [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:time-delay-normal ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ListOfDeviceObjectReference ;
            sh:path bacnet:credentials-in-zone ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:DeviceObjectReference ;
            sh:path bacnet:last-credential-added ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:out-of-service ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ObjectPropertyReference ;
            sh:path bacnet:event-algorithm-inhibit-ref ],
        [ sh:datatype xsd:dateTime ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:last-credential-added-time ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:global-identifier ],
        [ sh:datatype xsd:integer ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:adjust-value ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:acked-transitions ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:occupancy-count-enable ],
        [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:node bacnet:ListOfDeviceObjectReference ;
            sh:path bacnet:entry-points ],
        [ sh:hasValue "access-zone" ;
            sh:path bacnet:object-type ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notify-type ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-algorithm-inhibit ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ListOfAccessZoneOccupancyState ;
            sh:path bacnet:alarm-values ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfCharacterString ;
            sh:path bacnet:event-message-texts ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:time-delay ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:passback-timeout ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:occupancy-lower-limit ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:occupancy-count ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:occupancy-upper-limit ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfCharacterString ;
            sh:path bacnet:event-message-texts-config ],
        [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:node bacnet:ListOfDeviceObjectReference ;
            sh:path bacnet:exit-points ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:event-state ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:reliability ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability-evaluation-inhibit ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notification-class ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfTimeStamp ;
            sh:path bacnet:event-time-stamps ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:occupancy-state ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-enable ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:status-flags ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:passback-mode ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:DeviceObjectReference ;
            sh:path bacnet:last-credential-removed ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-detection-enable ],
        [ sh:datatype xsd:dateTime ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:last-credential-removed-time ] ;
    sh:targetClass bacnet:AccessZoneObject .

bacnet:AccumulatorObject a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Accumulator Object" ;
    bacnet:hasProperty bacnet:Acked_Transitions,
        bacnet:Device_Type,
        bacnet:Event_Algorithm_Inhibit,
        bacnet:Event_Algorithm_Inhibit_Ref,
        bacnet:Event_Detection_Enable,
        bacnet:Event_Enable,
        bacnet:Event_Message_Texts,
        bacnet:Event_Message_Texts_Config,
        bacnet:Event_State,
        bacnet:Event_Time_Stamps,
        bacnet:Fault_High_Limit,
        bacnet:Fault_Low_Limit,
        bacnet:High_Limit,
        bacnet:Limit_Enable,
        bacnet:Limit_Monitoring_Interval,
        bacnet:Logging_Object,
        bacnet:Logging_Record,
        bacnet:Low_Limit,
        bacnet:Max_Pres_Value,
        bacnet:Notification_Class,
        bacnet:Notify_Type,
        bacnet:Out_Of_Service,
        bacnet:Prescale,
        bacnet:Present_Value,
        bacnet:Pulse_Rate,
        bacnet:Reliability,
        bacnet:Reliability_Evaluation_Inhibit,
        bacnet:Scale,
        bacnet:Status_Flags,
        bacnet:Time_Delay,
        bacnet:Time_Delay_Normal,
        bacnet:Units,
        bacnet:Value_Before_Change,
        bacnet:Value_Change_Time,
        bacnet:Value_Set ;
    rdfs:subClassOf bacnet:StandardObject ;
    sh:property [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:time-delay-normal ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:high-limit ],
        [ sh:hasValue "accumulator" ;
            sh:path bacnet:object-type ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfCharacterString ;
            sh:path bacnet:event-message-texts ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability ],
        [ sh:datatype xsd:dateTime ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:value-change-time ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfTimeStamp ;
            sh:path bacnet:event-time-stamps ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability-evaluation-inhibit ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:max-pres-value ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:value-set ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:fault-high-limit ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notify-type ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:value-before-change ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:device-type ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ObjectPropertyReference ;
            sh:path bacnet:event-algorithm-inhibit-ref ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:logging-object ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:units ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:status-flags ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-detection-enable ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:fault-low-limit ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:out-of-service ],
        [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:node bacnet:Scale ;
            sh:path bacnet:scale ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:limit-enable ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:acked-transitions ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-algorithm-inhibit ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:limit-monitoring-interval ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notification-class ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:Prescale ;
            sh:path bacnet:prescale ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:low-limit ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:pulse-rate ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-enable ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:present-value ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:AccumulatorRecord ;
            sh:path bacnet:logging-record ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfCharacterString ;
            sh:path bacnet:event-message-texts-config ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:event-state ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:time-delay ] ;
    sh:targetClass bacnet:AccumulatorObject .

bacnet:AccumulatorRecord a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Accumulator Record" ;
    sh:property [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:present-value ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:accumulated-value ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:accumulator-status ],
        [ sh:datatype xsd:dateTime ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:timestamp ] ;
    sh:targetClass bacnet:AccumulatorRecord .

bacnet:ActionCommand a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Action Command" ;
    sh:property [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:property-array-index ],
        [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:property-value ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:device-identifier ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:write-success-ful ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-identifier ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:property-identifier ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:post-delay ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:quite-on-failure ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:priority ] ;
    sh:targetClass bacnet:ActionCommand .

bacnet:ActionList a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Action List" ;
    sh:property [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:node bacnet:SequenceOfActionCommand ;
            sh:path bacnet:action ] ;
    sh:targetClass bacnet:ActionList .

bacnet:Address a rdf:Property,
        rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Address",
        "address" ;
    sh:property [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:maxInclusive "65535"^^xsd:nonNegativeInteger ;
            sh:minCount 1 ;
            sh:path bacnet:network-number ],
        [ sh:datatype xsd:hexBinary ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:mac-address ] ;
    sh:targetClass bacnet:Address .

bacnet:AddressBinding a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Address Binding" ;
    sh:property [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:device-object-identifier ],
        [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:node bacnet:DeviceAddress ;
            sh:path bacnet:device-address ] ;
    sh:targetClass bacnet:AddressBinding .

bacnet:AlertEnrollmentObject a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Alert Enrollment Object" ;
    bacnet:hasProperty bacnet:Acked_Transitions,
        bacnet:Event_Algorithm_Inhibit,
        bacnet:Event_Algorithm_Inhibit_Ref,
        bacnet:Event_Detection_Enable,
        bacnet:Event_Enable,
        bacnet:Event_Message_Texts,
        bacnet:Event_Message_Texts_Config,
        bacnet:Event_State,
        bacnet:Event_Time_Stamps,
        bacnet:Notification_Class,
        bacnet:Notify_Type,
        bacnet:Present_Value ;
    rdfs:subClassOf bacnet:StandardObject ;
    sh:property [ sh:hasValue "alert-enrollment" ;
            sh:path bacnet:object-type ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notify-type ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-enable ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:acked-transitions ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:event-detection-enable ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ObjectPropertyReference ;
            sh:path bacnet:event-algorithm-inhibit-ref ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:present-value ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfCharacterString ;
            sh:path bacnet:event-message-texts-config ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfTimeStamp ;
            sh:path bacnet:event-time-stamps ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfCharacterString ;
            sh:path bacnet:event-message-texts ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-algorithm-inhibit ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:notification-class ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:event-state ] ;
    sh:targetClass bacnet:AlertEnrollmentObject .

bacnet:AnalogInputObject a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Analog Input Object" ;
    bacnet:hasProperty bacnet:Acked_Transitions,
        bacnet:COV_Increment,
        bacnet:Deadband,
        bacnet:Device_Type,
        bacnet:Event_Algorithm_Inhibit,
        bacnet:Event_Algorithm_Inhibit_Ref,
        bacnet:Event_Detection_Enable,
        bacnet:Event_Enable,
        bacnet:Event_Message_Texts,
        bacnet:Event_Message_Texts_Config,
        bacnet:Event_State,
        bacnet:Event_Time_Stamps,
        bacnet:Fault_High_Limit,
        bacnet:Fault_Low_Limit,
        bacnet:High_Limit,
        bacnet:Interface_Value,
        bacnet:Limit_Enable,
        bacnet:Low_Limit,
        bacnet:Max_Pres_Value,
        bacnet:Min_Pres_Value,
        bacnet:Notification_Class,
        bacnet:Notify_Type,
        bacnet:Out_Of_Service,
        bacnet:Present_Value,
        bacnet:Reliability,
        bacnet:Reliability_Evaluation_Inhibit,
        bacnet:Resolution,
        bacnet:Status_Flags,
        bacnet:Time_Delay,
        bacnet:Time_Delay_Normal,
        bacnet:Units,
        bacnet:Update_Interval ;
    rdfs:subClassOf bacnet:StandardObject ;
    sh:property [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:device-type ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-detection-enable ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ObjectPropertyReference ;
            sh:path bacnet:event-algorithm-inhibit-ref ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability-evaluation-inhibit ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:out-of-service ],
        [ sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:resolution ],
        [ sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:low-limit ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:update-interval ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfCharacterString ;
            sh:path bacnet:event-message-texts ],
        [ sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:fault-high-limit ],
        [ sh:hasValue "analog-input" ;
            sh:path bacnet:object-type ],
        [ sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:deadband ],
        [ sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:present-value ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:time-delay-normal ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:acked-transitions ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:event-state ],
        [ sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:max-pres-value ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:limit-enable ],
        [ sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:high-limit ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfTimeStamp ;
            sh:path bacnet:event-time-stamps ],
        [ sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:fault-low-limit ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:OptionalReal ;
            sh:path bacnet:interface-value ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:time-delay ],
        [ sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:cov-increment ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-algorithm-inhibit ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfCharacterString ;
            sh:path bacnet:event-message-texts-config ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-enable ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:units ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notify-type ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:status-flags ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notification-class ],
        [ sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:min-pres-value ] ;
    sh:targetClass bacnet:AnalogInputObject .

bacnet:AnalogOutputObject a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Analog Output Object" ;
    bacnet:hasProperty bacnet:Acked_Transitions,
        bacnet:Auditable_Priority_Filter,
        bacnet:COV_Increment,
        bacnet:Command_Time_Array,
        bacnet:Current_Command_Priority,
        bacnet:Deadband,
        bacnet:Device_Type,
        bacnet:Event_Algorithm_Inhibit,
        bacnet:Event_Algorithm_Inhibit_Ref,
        bacnet:Event_Detection_Enable,
        bacnet:Event_Enable,
        bacnet:Event_Message_Texts,
        bacnet:Event_Message_Texts_Config,
        bacnet:Event_State,
        bacnet:Event_Time_Stamps,
        bacnet:High_Limit,
        bacnet:Interface_Value,
        bacnet:Last_Command_Time,
        bacnet:Limit_Enable,
        bacnet:Low_Limit,
        bacnet:Max_Pres_Value,
        bacnet:Min_Pres_Value,
        bacnet:Notification_Class,
        bacnet:Notify_Type,
        bacnet:Out_Of_Service,
        bacnet:Present_Value,
        bacnet:Priority_Array,
        bacnet:Reliability,
        bacnet:Reliability_Evaluation_Inhibit,
        bacnet:Relinquish_Default,
        bacnet:Resolution,
        bacnet:Status_Flags,
        bacnet:Time_Delay,
        bacnet:Time_Delay_Normal,
        bacnet:Units,
        bacnet:Value_Source,
        bacnet:Value_Source_Array ;
    rdfs:subClassOf bacnet:StandardObject ;
    sh:property [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notification-class ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ValueSource ;
            sh:path bacnet:value-source ],
        [ sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:low-limit ],
        [ sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:deadband ],
        [ sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:resolution ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:OptionalPriorityFilter ;
            sh:path bacnet:auditable-priority-filter ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfCharacterString ;
            sh:path bacnet:event-message-texts-config ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:time-delay-normal ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability ],
        [ sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:high-limit ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfCharacterString ;
            sh:path bacnet:event-message-texts ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfTimeStamp ;
            sh:path bacnet:event-time-stamps ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:time-delay ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-enable ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-detection-enable ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notify-type ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ObjectPropertyReference ;
            sh:path bacnet:event-algorithm-inhibit-ref ],
        [ sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:max-pres-value ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:device-type ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:acked-transitions ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:out-of-service ],
        [ sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:relinquish-default ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:OptionalReal ;
            sh:path bacnet:interface-value ],
        [ sh:hasValue "analog-output" ;
            sh:path bacnet:object-type ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfValueSource ;
            sh:path bacnet:value-source-array ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfTimeStamp ;
            sh:path bacnet:command-time-array ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:limit-enable ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:units ],
        [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:node bacnet:PriorityArray ;
            sh:path bacnet:priority-array ],
        [ sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:cov-increment ],
        [ sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:min-pres-value ],
        [ sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:present-value ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:OptionalUnsigned ;
            sh:path bacnet:current-command-priority ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:status-flags ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:event-state ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:TimeStamp ;
            sh:path bacnet:last-command-time ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability-evaluation-inhibit ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-algorithm-inhibit ] ;
    sh:targetClass bacnet:AnalogOutputObject .

bacnet:AnalogValueObject a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Analog Value Object" ;
    bacnet:hasProperty bacnet:Acked_Transitions,
        bacnet:Auditable_Priority_Filter,
        bacnet:COV_Increment,
        bacnet:Command_Time_Array,
        bacnet:Current_Command_Priority,
        bacnet:Deadband,
        bacnet:Event_Algorithm_Inhibit,
        bacnet:Event_Algorithm_Inhibit_Ref,
        bacnet:Event_Detection_Enable,
        bacnet:Event_Enable,
        bacnet:Event_Message_Texts,
        bacnet:Event_Message_Texts_Config,
        bacnet:Event_State,
        bacnet:Event_Time_Stamps,
        bacnet:Fault_High_Limit,
        bacnet:Fault_Low_Limit,
        bacnet:High_Limit,
        bacnet:Last_Command_Time,
        bacnet:Limit_Enable,
        bacnet:Low_Limit,
        bacnet:Max_Pres_Value,
        bacnet:Min_Pres_Value,
        bacnet:Notification_Class,
        bacnet:Notify_Type,
        bacnet:Out_Of_Service,
        bacnet:Present_Value,
        bacnet:Priority_Array,
        bacnet:Reliability,
        bacnet:Reliability_Evaluation_Inhibit,
        bacnet:Relinquish_Default,
        bacnet:Resolution,
        bacnet:Status_Flags,
        bacnet:Time_Delay,
        bacnet:Time_Delay_Normal,
        bacnet:Units,
        bacnet:Value_Source,
        bacnet:Value_Source_Array ;
    rdfs:subClassOf bacnet:StandardObject ;
    sh:property [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:TimeStamp ;
            sh:path bacnet:last-command-time ],
        [ sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:fault-high-limit ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfTimeStamp ;
            sh:path bacnet:event-time-stamps ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfTimeStamp ;
            sh:path bacnet:command-time-array ],
        [ sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:fault-low-limit ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notify-type ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-detection-enable ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-enable ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:units ],
        [ sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:resolution ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:out-of-service ],
        [ sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:relinquish-default ],
        [ sh:hasValue "analog-value" ;
            sh:path bacnet:object-type ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:acked-transitions ],
        [ sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:cov-increment ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfCharacterString ;
            sh:path bacnet:event-message-texts ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:time-delay-normal ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:status-flags ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-algorithm-inhibit ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:PriorityArray ;
            sh:path bacnet:priority-array ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfValueSource ;
            sh:path bacnet:value-source-array ],
        [ sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:high-limit ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notification-class ],
        [ sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:resolution ],
        [ sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:min-pres-value ],
        [ sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:deadband ],
        [ sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:max-pres-value ],
        [ sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:present-value ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:event-state ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ObjectPropertyReference ;
            sh:path bacnet:event-algorithm-inhibit-ref ],
        [ sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:min-pres-value ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:OptionalPriorityFilter ;
            sh:path bacnet:auditable-priority-filter ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:OptionalUnsigned ;
            sh:path bacnet:current-command-priority ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:limit-enable ],
        [ sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:low-limit ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ValueSource ;
            sh:path bacnet:value-source ],
        [ sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:max-pres-value ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability-evaluation-inhibit ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfCharacterString ;
            sh:path bacnet:event-message-texts-config ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:time-delay ] ;
    sh:targetClass bacnet:AnalogValueObject .

bacnet:Array a rdfs:Class ;
    rdfs:comment "The superclass of datatypes with BACnet array semantics." .

bacnet:AssignedAccessRights a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Assigned Access Rights" ;
    sh:property [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:enable ],
        [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:node bacnet:DeviceObjectReference ;
            sh:path bacnet:assigned-access-rights ] ;
    sh:targetClass bacnet:AssignedAccessRights .

bacnet:AssignedLandingCalls a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Assigned Landing Calls" ;
    sh:property [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:node bacnet:SequenceOfAssignedLandingCallsLandingCalls ;
            sh:path bacnet:landing-calls ] ;
    sh:targetClass bacnet:AssignedLandingCalls .

bacnet:AssignedLandingCallsLandingCalls a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Assigned Landing Calls Landing Calls" ;
    sh:property [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:direction ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:maxInclusive "255"^^xsd:nonNegativeInteger ;
            sh:minCount 1 ;
            sh:path bacnet:floor-number ] ;
    sh:targetClass bacnet:AssignedLandingCallsLandingCalls .

bacnet:AuditLogObject a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Audit Log Object" ;
    bacnet:hasProperty bacnet:Acked_Transitions,
        bacnet:Buffer_Size,
        bacnet:Delete_On_Forward,
        bacnet:Enable,
        bacnet:Event_Detection_Enable,
        bacnet:Event_Enable,
        bacnet:Event_Message_Texts,
        bacnet:Event_Message_Texts_Config,
        bacnet:Event_State,
        bacnet:Event_Time_Stamps,
        bacnet:Issue_Confirmed_Notifications,
        bacnet:Log_Buffer,
        bacnet:Member_Of,
        bacnet:Notification_Class,
        bacnet:Notify_Type,
        bacnet:Record_Count,
        bacnet:Reliability,
        bacnet:Reliability_Evaluation_Inhibit,
        bacnet:Status_Flags,
        bacnet:Total_Record_Count ;
    rdfs:subClassOf bacnet:StandardObject ;
    sh:property [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfCharacterString ;
            sh:path bacnet:event-message-texts ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:DeviceObjectReference ;
            sh:path bacnet:member-of ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability-evaluation-inhibit ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:event-state ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:status-flags ],
        [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:node bacnet:ListOfAuditLogRecord ;
            sh:path bacnet:log-buffer ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:acked-transitions ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:enable ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notification-class ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:delete-on-forward ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-detection-enable ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-enable ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfCharacterString ;
            sh:path bacnet:event-message-texts-config ],
        [ sh:hasValue "analog-log" ;
            sh:path bacnet:object-type ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:issue-confirmed-notifications ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:record-count ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:total-record-count ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notify-type ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfTimeStamp ;
            sh:path bacnet:event-time-stamps ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:buffer-size ] ;
    sh:targetClass bacnet:AuditLogObject .

bacnet:AuditLogRecord a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Audit Log Record" ;
    sh:property [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:node bacnet:AuditLogRecordLogDatum ;
            sh:path bacnet:log-datum ],
        [ sh:datatype xsd:dateTime ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:timestamp ] ;
    sh:targetClass bacnet:AuditLogRecord .

bacnet:AuditLogRecordLogDatum a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Audit Log Record Log Datum" ;
    sh:targetClass bacnet:AuditLogRecordLogDatum ;
    sh:xone ( [ sh:datatype xsd:string ;
                sh:path bacnet:log-status ] [ sh:node bacnet:AuditNotification ;
                sh:path bacnet:audit-notification ] [ sh:datatype xsd:float ;
                sh:path bacnet:time-change ] ) .

bacnet:AuditNotification a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Audit Notification" ;
    sh:property [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:PropertyReference ;
            sh:path bacnet:target-property ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:maxInclusive "65535"^^xsd:nonNegativeInteger ;
            sh:minCount 0 ;
            sh:path bacnet:source-user-iD ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:TimeStamp ;
            sh:path bacnet:target-timestamp ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:current-value ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:target-value ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:target-comment ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:operation ],
        [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:node bacnet:Recipient ;
            sh:path bacnet:source-device ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:target-priority ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:target-object ],
        [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:node bacnet:Recipient ;
            sh:path bacnet:target-device ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:TimeStamp ;
            sh:path bacnet:source-timestamp ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:source-object ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:source-comment ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:maxInclusive "255"^^xsd:nonNegativeInteger ;
            sh:minCount 0 ;
            sh:path bacnet:source-user-role ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:maxInclusive "255"^^xsd:nonNegativeInteger ;
            sh:minCount 0 ;
            sh:path bacnet:invoke-iD ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ErrorType ;
            sh:path bacnet:result ] ;
    sh:targetClass bacnet:AuditNotification .

bacnet:AuditReporterObject a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Audit Reporter Object" ;
    bacnet:hasProperty bacnet:Acked_Transitions,
        bacnet:Audit_Level,
        bacnet:Audit_Source_Reporter,
        bacnet:Auditable_Operations,
        bacnet:Auditable_Priority_Filter,
        bacnet:Event_Detection_Enable,
        bacnet:Event_Enable,
        bacnet:Event_Message_Texts,
        bacnet:Event_Message_Texts_Config,
        bacnet:Event_State,
        bacnet:Event_Time_Stamps,
        bacnet:Issue_Confirmed_Notifications,
        bacnet:Maximum_Send_Delay,
        bacnet:Monitored_Objects,
        bacnet:Notification_Class,
        bacnet:Notify_Type,
        bacnet:Reliability,
        bacnet:Reliability_Evaluation_Inhibit,
        bacnet:Send_Now,
        bacnet:Status_Flags ;
    rdfs:subClassOf bacnet:StandardObject ;
    sh:property [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:maximum-send-delay ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfCharacterString ;
            sh:path bacnet:event-message-texts ],
        [ sh:hasValue "audit-reporter" ;
            sh:path bacnet:object-type ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:audit-source-reporter ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notification-class ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:audit-level ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-enable ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:event-state ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-detection-enable ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:auditable-priority-filter ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability-evaluation-inhibit ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:auditable-operations ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfObjectSelector ;
            sh:path bacnet:monitored-objects ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:status-flags ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfTimeStamp ;
            sh:path bacnet:event-time-stamps ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:issue-confirmed-notifications ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notify-type ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:send-now ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:acked-transitions ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfCharacterString ;
            sh:path bacnet:event-message-texts-config ] ;
    sh:targetClass bacnet:AuditReporterObject .

bacnet:AuthenticationFactor a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Authentication Factor" ;
    sh:property [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:format-class ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:format-type ],
        [ sh:datatype xsd:hexBinary ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:value ] ;
    sh:targetClass bacnet:AuthenticationFactor .

bacnet:AuthenticationFactorFormat a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Authentication Factor Format" ;
    sh:property [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:vendor-id ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:vendor-format ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:format-type ] ;
    sh:targetClass bacnet:AuthenticationFactorFormat .

bacnet:AuthenticationPolicy a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Authentication Policy" ;
    sh:property [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:timeout ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:order-enforced ],
        [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:node bacnet:SequenceOfAuthenticationPolicyPolicy ;
            sh:path bacnet:policy ] ;
    sh:targetClass bacnet:AuthenticationPolicy .

bacnet:AuthenticationPolicyPolicy a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Authentication Policy Policy" ;
    sh:property [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:node bacnet:DeviceObjectReference ;
            sh:path bacnet:credential-data-input ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:index ] ;
    sh:targetClass bacnet:AuthenticationPolicyPolicy .

bacnet:AveragingObject a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Averaging Object" ;
    bacnet:hasProperty bacnet:Attempted_Samples,
        bacnet:Average_Value,
        bacnet:Maximum_Value,
        bacnet:Maximum_Value_Timestamp,
        bacnet:Minimum_Value,
        bacnet:Minimum_Value_Timestamp,
        bacnet:Object_Property_Reference,
        bacnet:Valid_Samples,
        bacnet:Variance_Value,
        bacnet:Window_Interval,
        bacnet:Window_Samples ;
    rdfs:subClassOf bacnet:StandardObject ;
    sh:property [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:window-samples ],
        [ sh:datatype xsd:dateTime ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:minimum-value-timestamp ],
        [ sh:datatype xsd:dateTime ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:maximum-value-timestamp ],
        [ sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:maximum-value ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:window-interval ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:valid-samples ],
        [ sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:variance-value ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:attempted-samples ],
        [ sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:average-value ],
        [ sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:minimum-value ],
        [ sh:hasValue "averaging" ;
            sh:path bacnet:object-type ],
        [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:node bacnet:DeviceObjectPropertyReference ;
            sh:path bacnet:object-property-reference ] ;
    sh:targetClass bacnet:AveragingObject .

bacnet:BACnetDevice a rdfs:Class,
        sh:NodeShape ;
    rdfs:comment "Any device, real or virtual, that supports digital communication using the BACnet protocol." ;
    rdfs:subClassOf bacnet:Device ;
    sh:property [ sh:class bacnet:Port ;
            sh:minCount 1 ;
            sh:path bacnet:hasPort ],
        [ sh:datatype xsd:integer ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:device-instance ] ;
    sh:targetClass bacnet:BACnetDeviceDevice .

bacnet:BACnetNetwork a rdfs:Class,
        sh:NodeShape ;
    rdfs:comment "The class of BACnet networks, each network is a collection of BACnet devices." ;
    rdfs:subClassOf bacnet:Network ;
    sh:property [ sh:class bacnet:BACnetNode ;
            sh:description "Relationship between a network and one of its member nodes." ;
            sh:path bacnet:hasNode ] ;
    sh:targetClass bacnet:BACnetNetwork .

bacnet:BACnetNode a rdfs:Class,
        sh:NodeShape ;
    rdfs:comment "A node is a member of a network with an address." ;
    rdfs:subClassOf bacnet:Node ;
    sh:property [ sh:class bacnet:BACnetAddress ;
            sh:description "Every node has a BACnet address that distinguishes it from the other nodes that are members of the same network." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:hasAddress ] ;
    sh:targetClass bacnet:BACnetNode .

bacnet:BDTEntry a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "BDTEntry" ;
    sh:property [ sh:datatype xsd:hexBinary ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:broadcast-mask ],
        [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:node bacnet:HostNPort ;
            sh:path bacnet:bbmd-address ] ;
    sh:targetClass bacnet:BDTEntry .

bacnet:BinaryInputObject a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Binary Input Object" ;
    bacnet:hasProperty bacnet:Acked_Transitions,
        bacnet:Active_Text,
        bacnet:Alarm_Value,
        bacnet:Change_Of_State_Count,
        bacnet:Change_Of_State_Time,
        bacnet:Device_Type,
        bacnet:Elapsed_Active_Time,
        bacnet:Event_Algorithm_Inhibit,
        bacnet:Event_Algorithm_Inhibit_Ref,
        bacnet:Event_Detection_Enable,
        bacnet:Event_Enable,
        bacnet:Event_Message_Texts,
        bacnet:Event_Message_Texts_Config,
        bacnet:Event_State,
        bacnet:Event_Time_Stamps,
        bacnet:Inactive_Text,
        bacnet:Interface_Value,
        bacnet:Notification_Class,
        bacnet:Notify_Type,
        bacnet:Out_Of_Service,
        bacnet:Polarity,
        bacnet:Present_Value,
        bacnet:Reliability,
        bacnet:Reliability_Evaluation_Inhibit,
        bacnet:Status_Flags,
        bacnet:Time_Delay,
        bacnet:Time_Delay_Normal,
        bacnet:Time_Of_Active_Time_Reset,
        bacnet:Time_Of_State_Count_Reset ;
    rdfs:subClassOf bacnet:StandardObject ;
    sh:property [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:OptionalBinaryPV ;
            sh:path bacnet:interface-value ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notification-class ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:change-of-state-count ],
        [ sh:datatype xsd:dateTime ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:change-of-state-time ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:elapsed-active-time ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfCharacterString ;
            sh:path bacnet:event-message-texts-config ],
        [ sh:datatype xsd:dateTime ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:time-of-active-time-reset ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:status-flags ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfTimeStamp ;
            sh:path bacnet:event-time-stamps ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-detection-enable ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:active-text ],
        [ sh:datatype xsd:dateTime ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:time-of-state-count-reset ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:polarity ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-algorithm-inhibit ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:time-delay ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfCharacterString ;
            sh:path bacnet:event-message-texts ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:inactive-text ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:acked-transitions ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:alarm-value ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:out-of-service ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability-evaluation-inhibit ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:time-delay-normal ],
        [ sh:hasValue "binary-input" ;
            sh:path bacnet:object-type ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ObjectPropertyReference ;
            sh:path bacnet:event-algorithm-inhibit-ref ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:device-type ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notify-type ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-enable ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:event-state ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:present-value ] ;
    sh:targetClass bacnet:BinaryInputObject .

bacnet:BinaryLightingOutputObject a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Binary Lighting Output Object" ;
    bacnet:hasProperty bacnet:Acked_Transitions,
        bacnet:Auditable_Priority_Filter,
        bacnet:Blink_Warn_Enable,
        bacnet:Command_Time_Array,
        bacnet:Current_Command_Priority,
        bacnet:Egress_Active,
        bacnet:Egress_Time,
        bacnet:Elapsed_Active_Time,
        bacnet:Event_Detection_Enable,
        bacnet:Event_Enable,
        bacnet:Event_Message_Texts,
        bacnet:Event_Message_Texts_Config,
        bacnet:Event_State,
        bacnet:Event_Time_Stamps,
        bacnet:Feedback_Value,
        bacnet:Last_Command_Time,
        bacnet:Notification_Class,
        bacnet:Notify_Type,
        bacnet:Out_Of_Service,
        bacnet:Polarity,
        bacnet:Power,
        bacnet:Present_Value,
        bacnet:Priority_Array,
        bacnet:Reliability,
        bacnet:Reliability_Evaluation_Inhibit,
        bacnet:Relinquish_Default,
        bacnet:Status_Flags,
        bacnet:Strike_Count,
        bacnet:Time_Of_Active_Time_Reset,
        bacnet:Time_Of_Strike_Count_Reset,
        bacnet:Value_Source,
        bacnet:Value_Source_Array ;
    rdfs:subClassOf bacnet:StandardObject ;
    sh:property [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:present-value ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfTimeStamp ;
            sh:path bacnet:command-time-array ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:elapsed-active-time ],
        [ sh:hasValue "binary-lighting-output-object" ;
            sh:path bacnet:object-type ],
        [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:node bacnet:OptionalUnsigned ;
            sh:path bacnet:current-command-priority ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:blink-warn-enable ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability-evaluation-inhibit ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:egress-active ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfValueSource ;
            sh:path bacnet:value-source-array ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:out-of-service ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notify-type ],
        [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:node bacnet:PriorityArray ;
            sh:path bacnet:priority-array ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:TimeStamp ;
            sh:path bacnet:last-command-time ],
        [ sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:power ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfTimeStamp ;
            sh:path bacnet:event-time-stamps ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:acked-transitions ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:strike-count ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:OptionalPriorityFilter ;
            sh:path bacnet:auditable-priority-filter ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ValueSource ;
            sh:path bacnet:value-source ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:polarity ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-enable ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-state ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notification-class ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:relinquish-default ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:status-flags ],
        [ sh:datatype xsd:dateTime ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:time-of-active-time-reset ],
        [ sh:datatype xsd:dateTime ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:time-of-strike-count-reset ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:egress-time ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfCharacterString ;
            sh:path bacnet:event-message-texts-config ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfCharacterString ;
            sh:path bacnet:event-message-texts ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-detection-enable ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:feedback-value ] ;
    sh:targetClass bacnet:BinaryLightingOutputObject .

bacnet:BinaryOutputObject a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Binary Output Object" ;
    bacnet:hasProperty bacnet:Acked_Transitions,
        bacnet:Active_Text,
        bacnet:Auditable_Priority_Filter,
        bacnet:Change_Of_State_Count,
        bacnet:Change_Of_State_Time,
        bacnet:Command_Time_Array,
        bacnet:Current_Command_Priority,
        bacnet:Device_Type,
        bacnet:Elapsed_Active_Time,
        bacnet:Event_Algorithm_Inhibit,
        bacnet:Event_Algorithm_Inhibit_Ref,
        bacnet:Event_Detection_Enable,
        bacnet:Event_Enable,
        bacnet:Event_Message_Texts,
        bacnet:Event_Message_Texts_Config,
        bacnet:Event_State,
        bacnet:Event_Time_Stamps,
        bacnet:Feedback_Value,
        bacnet:Inactive_Text,
        bacnet:Interface_Value,
        bacnet:Last_Command_Time,
        bacnet:Minimum_Off_Time,
        bacnet:Minimum_On_Time,
        bacnet:Notification_Class,
        bacnet:Notify_Type,
        bacnet:Out_Of_Service,
        bacnet:Polarity,
        bacnet:Present_Value,
        bacnet:Priority_Array,
        bacnet:Reliability,
        bacnet:Reliability_Evaluation_Inhibit,
        bacnet:Relinquish_Default,
        bacnet:Status_Flags,
        bacnet:Time_Delay,
        bacnet:Time_Delay_Normal,
        bacnet:Time_Of_Active_Time_Reset,
        bacnet:Time_Of_State_Count_Reset,
        bacnet:Value_Source,
        bacnet:Value_Source_Array ;
    rdfs:subClassOf bacnet:StandardObject ;
    sh:property [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:out-of-service ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:present-value ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notification-class ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfValueSource ;
            sh:path bacnet:value-source-array ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ObjectPropertyReference ;
            sh:path bacnet:event-algorithm-inhibit-ref ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-algorithm-inhibit ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:active-text ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:TimeStamp ;
            sh:path bacnet:last-command-time ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:minimum-off-time ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:elapsed-active-time ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfCharacterString ;
            sh:path bacnet:event-message-texts ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:event-state ],
        [ sh:datatype xsd:dateTime ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:change-of-state-time ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:OptionalUnsigned ;
            sh:path bacnet:current-command-priority ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notify-type ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfTimeStamp ;
            sh:path bacnet:command-time-array ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:device-type ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability-evaluation-inhibit ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:time-delay ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ValueSource ;
            sh:path bacnet:value-source ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:OptionalBinaryPV ;
            sh:path bacnet:interface-value ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:relinquish-default ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:acked-transitions ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfCharacterString ;
            sh:path bacnet:event-message-texts-config ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:OptionalPriorityFilter ;
            sh:path bacnet:auditable-priority-filter ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:inactive-text ],
        [ sh:datatype xsd:dateTime ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:time-of-state-count-reset ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:change-of-state-count ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:time-delay-normal ],
        [ sh:hasValue "binary-output" ;
            sh:path bacnet:object-type ],
        [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:node bacnet:PriorityArray ;
            sh:path bacnet:priority-array ],
        [ sh:datatype xsd:dateTime ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:time-of-active-time-reset ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:status-flags ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-detection-enable ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:feedback-value ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:polarity ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:minimum-on-time ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfTimeStamp ;
            sh:path bacnet:event-time-stamps ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-enable ] ;
    sh:targetClass bacnet:BinaryOutputObject .

bacnet:BinaryValueObject a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Binary Value Object" ;
    bacnet:hasProperty bacnet:Acked_Transitions,
        bacnet:Active_Text,
        bacnet:Alarm_Value,
        bacnet:Auditable_Priority_Filter,
        bacnet:Change_Of_State_Count,
        bacnet:Change_Of_State_Time,
        bacnet:Command_Time_Array,
        bacnet:Current_Command_Priority,
        bacnet:Elapsed_Active_Time,
        bacnet:Event_Algorithm_Inhibit,
        bacnet:Event_Algorithm_Inhibit_Ref,
        bacnet:Event_Detection_Enable,
        bacnet:Event_Enable,
        bacnet:Event_Message_Texts,
        bacnet:Event_Message_Texts_Config,
        bacnet:Event_State,
        bacnet:Event_Time_Stamps,
        bacnet:Inactive_Text,
        bacnet:Last_Command_Time,
        bacnet:Minimum_Off_Time,
        bacnet:Minimum_On_Time,
        bacnet:Notification_Class,
        bacnet:Notify_Type,
        bacnet:Out_Of_Service,
        bacnet:Present_Value,
        bacnet:Priority_Array,
        bacnet:Reliability,
        bacnet:Reliability_Evaluation_Inhibit,
        bacnet:Relinquish_Default,
        bacnet:Status_Flags,
        bacnet:Time_Delay,
        bacnet:Time_Delay_Normal,
        bacnet:Time_Of_Active_Time_Reset,
        bacnet:Time_Of_State_Count_Reset,
        bacnet:Value_Source,
        bacnet:Value_Source_Array ;
    rdfs:subClassOf bacnet:StandardObject ;
    sh:property [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfTimeStamp ;
            sh:path bacnet:event-time-stamps ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:present-value ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-enable ],
        [ sh:datatype xsd:dateTime ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:change-of-state-time ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability ],
        [ sh:datatype xsd:dateTime ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:time-of-state-count-reset ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:out-of-service ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfCharacterString ;
            sh:path bacnet:event-message-texts ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:acked-transitions ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:minimum-on-time ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:change-of-state-count ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-detection-enable ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notification-class ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:status-flags ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfCharacterString ;
            sh:path bacnet:event-message-texts-config ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:event-state ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ValueSource ;
            sh:path bacnet:value-source ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:active-text ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:relinquish-default ],
        [ sh:datatype xsd:dateTime ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:time-of-active-time-reset ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:minimum-off-time ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability-evaluation-inhibit ],
        [ sh:hasValue "binary-value" ;
            sh:path bacnet:object-type ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-algorithm-inhibit ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:OptionalPriorityFilter ;
            sh:path bacnet:auditable-priority-filter ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:elapsed-active-time ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:inactive-text ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfTimeStamp ;
            sh:path bacnet:command-time-array ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:time-delay ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ObjectPropertyReference ;
            sh:path bacnet:event-algorithm-inhibit-ref ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:alarm-value ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:OptionalUnsigned ;
            sh:path bacnet:current-command-priority ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:time-delay-normal ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:TimeStamp ;
            sh:path bacnet:last-command-time ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:PriorityArray ;
            sh:path bacnet:priority-array ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfValueSource ;
            sh:path bacnet:value-source-array ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notify-type ] ;
    sh:targetClass bacnet:BinaryValueObject .

bacnet:Bit a rdfs:Class,
        sh:NodeShape ;
    rdfs:comment "A bit." ;
    sh:property [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:bitName ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:bitValue ] ;
    sh:targetClass bacnet:Bit .

bacnet:BitString a bacnet:BitString,
        rdfs:Class ;
    rdfs:comment "The superclass of bit strings." ;
    owl:disjointUnionOf ( bacnet:StandardBitString bacnet:ProprietaryBitString ) ;
    sh:property [ sh:class bacnet:Bit ;
            sh:path bacnet:hasMember ] .

bacnet:BitStringValueObject a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Bit String Value Object" ;
    bacnet:hasProperty bacnet:Acked_Transitions,
        bacnet:Alarm_Values,
        bacnet:Auditable_Priority_Filter,
        bacnet:Bit_Mask,
        bacnet:Bit_Text,
        bacnet:Command_Time_Array,
        bacnet:Current_Command_Priority,
        bacnet:Event_Algorithm_Inhibit,
        bacnet:Event_Algorithm_Inhibit_Ref,
        bacnet:Event_Detection_Enable,
        bacnet:Event_Enable,
        bacnet:Event_Message_Texts,
        bacnet:Event_Message_Texts_Config,
        bacnet:Event_State,
        bacnet:Event_Time_Stamps,
        bacnet:Last_Command_Time,
        bacnet:Notification_Class,
        bacnet:Notify_Type,
        bacnet:Out_Of_Service,
        bacnet:Present_Value,
        bacnet:Priority_Array,
        bacnet:Reliability,
        bacnet:Reliability_Evaluation_Inhibit,
        bacnet:Relinquish_Default,
        bacnet:Status_Flags,
        bacnet:Time_Delay,
        bacnet:Time_Delay_Normal,
        bacnet:Value_Source,
        bacnet:Value_Source_Array ;
    rdfs:subClassOf bacnet:StandardObject ;
    sh:property [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ValueSource ;
            sh:path bacnet:value-source ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:time-delay-normal ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:present-value ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfBitString ;
            sh:path bacnet:alarm-values ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:TimeStamp ;
            sh:path bacnet:last-command-time ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfCharacterString ;
            sh:path bacnet:event-message-texts ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfValueSource ;
            sh:path bacnet:value-source-array ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:out-of-service ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability-evaluation-inhibit ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notification-class ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:PriorityArray ;
            sh:path bacnet:priority-array ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:OptionalPriorityFilter ;
            sh:path bacnet:auditable-priority-filter ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-enable ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfTimeStamp ;
            sh:path bacnet:command-time-array ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfCharacterString ;
            sh:path bacnet:event-message-texts-config ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:OptionalUnsigned ;
            sh:path bacnet:current-command-priority ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:status-flags ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:relinquish-default ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-state ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-algorithm-inhibit ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-detection-enable ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notify-type ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability ],
        [ sh:hasValue "bitstring-value" ;
            sh:path bacnet:object-type ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:acked-transitions ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfCharacterString ;
            sh:path bacnet:bit-text ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ObjectPropertyReference ;
            sh:path bacnet:event-algorithm-inhibit-ref ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:time-delay ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfTimeStamp ;
            sh:path bacnet:event-time-stamps ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:bit-mask ] ;
    sh:targetClass bacnet:BitStringValueObject .

bacnet:Bridge a rdfs:Class ;
    rdfs:comment "A device that connects two or more segments at the physical and data link layers." ;
    rdfs:subClassOf bacnet:Device .

bacnet:COVMultipleSubscription a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "COVMultiple Subscription" ;
    sh:property [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:node bacnet:SequenceOfCOVMultipleSubscriptionList ;
            sh:path bacnet:list-of-cov-subscription-specifications ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:issue-confirmed-notifications ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:max-notification-delay ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:time-remaining ],
        [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:node bacnet:RecipientProcess ;
            sh:path bacnet:recipient ] ;
    sh:targetClass bacnet:COVMultipleSubscription .

bacnet:COVMultipleSubscriptionList a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "COVMultiple Subscription List" ;
    sh:property [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:node bacnet:SequenceOfCOVMultipleSubscriptionListOfCOVReference ;
            sh:path bacnet:list-of-cov-references ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:monitored-object-identifier ] ;
    sh:targetClass bacnet:COVMultipleSubscriptionList .

bacnet:COVMultipleSubscriptionListOfCOVReference a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "COVMultiple Subscription List Of COVReference" ;
    sh:property [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:timestamped ],
        [ sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:cov-increment ],
        [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:node bacnet:PropertyReference ;
            sh:path bacnet:monitored-property ] ;
    sh:targetClass bacnet:COVMultipleSubscriptionListOfCOVReference .

bacnet:COVSubscription a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "COVSubscription" ;
    sh:property [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:node bacnet:ObjectPropertyReference ;
            sh:path bacnet:monitored-property-reference ],
        [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:node bacnet:RecipientProcess ;
            sh:path bacnet:recipient ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:issue-confirmed-notifications ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:time-remaining ],
        [ sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:cov-increment ] ;
    sh:targetClass bacnet:COVSubscription .

bacnet:CalendarEntry a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Calendar Entry" ;
    sh:targetClass bacnet:CalendarEntry ;
    sh:xone ( [ sh:datatype xsd:date ;
                sh:path bacnet:date ] [ sh:node bacnet:DateRange ;
                sh:path bacnet:date-range ] [ sh:datatype xsd:hexBinary ;
                sh:path bacnet:week-nday ] ) .

bacnet:CalendarObject a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Calendar Object" ;
    bacnet:hasProperty bacnet:Date_List,
        bacnet:Present_Value ;
    rdfs:subClassOf bacnet:StandardObject ;
    sh:property [ sh:hasValue "calendar" ;
            sh:path bacnet:object-type ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:present-value ],
        [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:node bacnet:ListOfCalendarEntry ;
            sh:path bacnet:date-list ] ;
    sh:targetClass bacnet:CalendarObject .

bacnet:ChannelObject a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Channel Object" ;
    bacnet:hasProperty bacnet:Acked_Transitions,
        bacnet:Allow_Group_Delay_Inhibit,
        bacnet:Auditable_Priority_Filter,
        bacnet:Channel_Number,
        bacnet:Control_Groups,
        bacnet:Event_Detection_Enable,
        bacnet:Event_Enable,
        bacnet:Event_Message_Texts,
        bacnet:Event_Message_Texts_Config,
        bacnet:Event_State,
        bacnet:Event_Time_Stamps,
        bacnet:Execution_Delay,
        bacnet:Last_Priority,
        bacnet:List_Of_Object_Property_References,
        bacnet:Notification_Class,
        bacnet:Notify_Type,
        bacnet:Out_Of_Service,
        bacnet:Present_Value,
        bacnet:Reliability,
        bacnet:Reliability_Evaluation_Inhibit,
        bacnet:Status_Flags,
        bacnet:Value_Source,
        bacnet:Write_Status ;
    rdfs:subClassOf bacnet:StandardObject ;
    sh:property [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-state ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notification-class ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:acked-transitions ],
        [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:node bacnet:ArrayOfUnsigned ;
            sh:path bacnet:control-groups ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfUnsigned ;
            sh:path bacnet:execution-delay ],
        [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:node bacnet:ChannelValue ;
            sh:path bacnet:present-value ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ValueSource ;
            sh:path bacnet:value-source ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:OptionalPriorityFilter ;
            sh:path bacnet:auditable-priority-filter ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:allow-group-delay-inhibit ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability-evaluation-inhibit ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:channel-number ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:write-status ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-detection-enable ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfCharacterString ;
            sh:path bacnet:event-message-texts-config ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:status-flags ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notify-type ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:last-priority ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-enable ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfTimeStamp ;
            sh:path bacnet:event-time-stamps ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfCharacterString ;
            sh:path bacnet:event-message-texts ],
        [ sh:hasValue "channel" ;
            sh:path bacnet:object-type ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:out-of-service ],
        [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:node bacnet:ArrayOfDeviceObjectPropertyReference ;
            sh:path bacnet:list-of-object-property-references ] ;
    sh:targetClass bacnet:ChannelObject .

bacnet:ChannelValue a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Channel Value" ;
    sh:targetClass bacnet:ChannelValue ;
    sh:xone ( [ sh:path bacnet:null ;
                sh:value bacnet:NULL ] [ sh:datatype xsd:float ;
                sh:path bacnet:real ] [ sh:datatype xsd:string ;
                sh:path bacnet:enumerated ] [ sh:datatype xsd:nonNegativeInteger ;
                sh:path bacnet:unsigned ] [ sh:datatype xsd:boolean ;
                sh:path bacnet:boolean ] [ sh:datatype xsd:integer ;
                sh:path bacnet:integer ] [ sh:datatype xsd:double ;
                sh:path bacnet:double ] [ sh:datatype xsd:time ;
                sh:path bacnet:time ] [ sh:datatype xsd:string ;
                sh:path bacnet:character-string ] [ sh:datatype xsd:hexBinary ;
                sh:path bacnet:octet-string ] [ sh:datatype xsd:string ;
                sh:path bacnet:bit-string ] [ sh:datatype xsd:date ;
                sh:path bacnet:date ] [ sh:datatype xsd:string ;
                sh:path bacnet:objectidentifier ] [ sh:node bacnet:LightingCommand ;
                sh:path bacnet:lighting-command ] ) .

bacnet:CharacterStringValueObject a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Character String Value Object" ;
    bacnet:hasProperty bacnet:Acked_Transitions,
        bacnet:Alarm_Values,
        bacnet:Auditable_Priority_Filter,
        bacnet:Command_Time_Array,
        bacnet:Current_Command_Priority,
        bacnet:Event_Algorithm_Inhibit,
        bacnet:Event_Algorithm_Inhibit_Ref,
        bacnet:Event_Detection_Enable,
        bacnet:Event_Enable,
        bacnet:Event_Message_Texts,
        bacnet:Event_Message_Texts_Config,
        bacnet:Event_State,
        bacnet:Event_Time_Stamps,
        bacnet:Fault_Values,
        bacnet:Last_Command_Time,
        bacnet:Notification_Class,
        bacnet:Notify_Type,
        bacnet:Out_Of_Service,
        bacnet:Present_Value,
        bacnet:Priority_Array,
        bacnet:Reliability,
        bacnet:Reliability_Evaluation_Inhibit,
        bacnet:Relinquish_Default,
        bacnet:Status_Flags,
        bacnet:Time_Delay,
        bacnet:Time_Delay_Normal,
        bacnet:Value_Source,
        bacnet:Value_Source_Array ;
    rdfs:subClassOf bacnet:StandardObject ;
    sh:property [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-state ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:OptionalPriorityFilter ;
            sh:path bacnet:auditable-priority-filter ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:TimeStamp ;
            sh:path bacnet:last-command-time ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-enable ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:OptionalUnsigned ;
            sh:path bacnet:current-command-priority ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfValueSource ;
            sh:path bacnet:value-source-array ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfOptionalCharacterString ;
            sh:path bacnet:fault-values ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:acked-transitions ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-detection-enable ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:status-flags ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-algorithm-inhibit ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:PriorityArray ;
            sh:path bacnet:priority-array ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfOptionalCharacterString ;
            sh:path bacnet:alarm-values ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfCharacterString ;
            sh:path bacnet:event-message-texts ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfTimeStamp ;
            sh:path bacnet:event-time-stamps ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability-evaluation-inhibit ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfTimeStamp ;
            sh:path bacnet:command-time-array ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notification-class ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:time-delay ],
        [ sh:hasValue "characterstring-value" ;
            sh:path bacnet:object-type ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfCharacterString ;
            sh:path bacnet:event-message-texts-config ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:relinquish-default ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notify-type ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:time-delay-normal ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:present-value ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ObjectPropertyReference ;
            sh:path bacnet:event-algorithm-inhibit-ref ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ValueSource ;
            sh:path bacnet:value-source ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:out-of-service ] ;
    sh:targetClass bacnet:CharacterStringValueObject .

bacnet:ClientCOV a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Client COV" ;
    sh:targetClass bacnet:ClientCOV ;
    sh:xone ( [ sh:datatype xsd:float ;
                sh:path bacnet:real-increment ] [ sh:path bacnet:default-increment ;
                sh:value bacnet:NULL ] ) .

bacnet:CommandObject a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Command Object" ;
    bacnet:hasProperty bacnet:Acked_Transitions,
        bacnet:Action,
        bacnet:Action_Text,
        bacnet:All_Writes_Successful,
        bacnet:Event_Detection_Enable,
        bacnet:Event_Enable,
        bacnet:Event_Message_Texts,
        bacnet:Event_Message_Texts_Config,
        bacnet:Event_State,
        bacnet:Event_Time_Stamps,
        bacnet:In_Process,
        bacnet:Notification_Class,
        bacnet:Notify_Type,
        bacnet:Present_Value,
        bacnet:Reliability,
        bacnet:Reliability_Evaluation_Inhibit,
        bacnet:Status_Flags,
        bacnet:Value_Source ;
    rdfs:subClassOf bacnet:StandardObject ;
    sh:property [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ValueSource ;
            sh:path bacnet:value-source ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-detection-enable ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability-evaluation-inhibit ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notification-class ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-enable ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:in-process ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:acked-transitions ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfTimeStamp ;
            sh:path bacnet:event-time-stamps ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:present-value ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:all-writes-successful ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfCharacterString ;
            sh:path bacnet:event-message-texts-config ],
        [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:node bacnet:ArrayOfActionList ;
            sh:path bacnet:action ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-state ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:status-flags ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notify-type ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfCharacterString ;
            sh:path bacnet:action-text ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfCharacterString ;
            sh:path bacnet:event-message-texts ],
        [ sh:hasValue "command" ;
            sh:path bacnet:object-type ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability ] ;
    sh:targetClass bacnet:CommandObject .

bacnet:CredentialAuthenticationFactor a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Credential Authentication Factor" ;
    sh:property [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:node bacnet:AuthenticationFactor ;
            sh:path bacnet:authentication-factor ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:disable ] ;
    sh:targetClass bacnet:CredentialAuthenticationFactor .

bacnet:CredentialDataInputObject a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Credential Data Input Object" ;
    bacnet:hasProperty bacnet:Acked_Transitions,
        bacnet:Event_Detection_Enable,
        bacnet:Event_Enable,
        bacnet:Event_Message_Texts,
        bacnet:Event_Message_Texts_Config,
        bacnet:Event_Time_Stamps,
        bacnet:Notification_Class,
        bacnet:Notify_Type,
        bacnet:Out_Of_Service,
        bacnet:Present_Value,
        bacnet:Reliability,
        bacnet:Reliability_Evaluation_Inhibit,
        bacnet:Status_Flags,
        bacnet:Supported_Format_Classes,
        bacnet:Supported_Formats,
        bacnet:Update_Time ;
    rdfs:subClassOf bacnet:StandardObject ;
    sh:property [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-enable ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfUnsigned ;
            sh:path bacnet:supported-format-classes ],
        [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:node bacnet:AuthenticationFactor ;
            sh:path bacnet:present-value ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfCharacterString ;
            sh:path bacnet:event-message-texts ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfTimeStamp ;
            sh:path bacnet:event-time-stamps ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notification-class ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfCharacterString ;
            sh:path bacnet:event-message-texts-config ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability-evaluation-inhibit ],
        [ sh:hasValue "credential-data-input" ;
            sh:path bacnet:object-type ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notify-type ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-detection-enable ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:status-flags ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:out-of-service ],
        [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:node bacnet:TimeStamp ;
            sh:path bacnet:update-time ],
        [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:node bacnet:ArrayOfAuthenticationFactorFormat ;
            sh:path bacnet:supported-formats ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:acked-transitions ] ;
    sh:targetClass bacnet:CredentialDataInputObject .

bacnet:DailySchedule a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Daily Schedule" ;
    sh:property [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:node bacnet:SequenceOfTimeValue ;
            sh:path bacnet:day-schedule ] ;
    sh:targetClass bacnet:DailySchedule .

bacnet:DatePatternValueObject a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Date Pattern Value Object" ;
    bacnet:hasProperty bacnet:Acked_Transitions,
        bacnet:Auditable_Priority_Filter,
        bacnet:Command_Time_Array,
        bacnet:Current_Command_Priority,
        bacnet:Event_Detection_Enable,
        bacnet:Event_Enable,
        bacnet:Event_Message_Texts,
        bacnet:Event_Message_Texts_Config,
        bacnet:Event_State,
        bacnet:Event_Time_Stamps,
        bacnet:Last_Command_Time,
        bacnet:Notification_Class,
        bacnet:Notify_Type,
        bacnet:Out_Of_Service,
        bacnet:Present_Value,
        bacnet:Priority_Array,
        bacnet:Reliability,
        bacnet:Reliability_Evaluation_Inhibit,
        bacnet:Relinquish_Default,
        bacnet:Status_Flags,
        bacnet:Value_Source,
        bacnet:Value_Source_Array ;
    rdfs:subClassOf bacnet:StandardObject ;
    sh:property [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:PriorityArray ;
            sh:path bacnet:priority-array ],
        [ sh:hasValue "date-pattern-value" ;
            sh:path bacnet:object-type ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfCharacterString ;
            sh:path bacnet:event-message-texts ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability-evaluation-inhibit ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:OptionalPriorityFilter ;
            sh:path bacnet:auditable-priority-filter ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-detection-enable ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notification-class ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfTimeStamp ;
            sh:path bacnet:command-time-array ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:acked-transitions ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ValueSource ;
            sh:path bacnet:value-source ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfValueSource ;
            sh:path bacnet:value-source-array ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:out-of-service ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-enable ],
        [ sh:datatype xsd:date ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:present-value ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfTimeStamp ;
            sh:path bacnet:event-time-stamps ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:TimeStamp ;
            sh:path bacnet:last-command-time ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfCharacterString ;
            sh:path bacnet:event-message-texts-config ],
        [ sh:datatype xsd:date ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:relinquish-default ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:OptionalUnsigned ;
            sh:path bacnet:current-command-priority ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-state ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notify-type ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:status-flags ] ;
    sh:targetClass bacnet:DatePatternValueObject .

bacnet:DateRange a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Date Range" ;
    sh:property [ sh:datatype xsd:date ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:end-date ],
        [ sh:datatype xsd:date ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:start-date ] ;
    sh:targetClass bacnet:DateRange .

bacnet:DateTimePatternValueObject a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Date Time Pattern Value Object" ;
    bacnet:hasProperty bacnet:Acked_Transitions,
        bacnet:Auditable_Priority_Filter,
        bacnet:Command_Time_Array,
        bacnet:Current_Command_Priority,
        bacnet:Event_Detection_Enable,
        bacnet:Event_Enable,
        bacnet:Event_Message_Texts,
        bacnet:Event_Message_Texts_Config,
        bacnet:Event_State,
        bacnet:Event_Time_Stamps,
        bacnet:Is_UTC,
        bacnet:Last_Command_Time,
        bacnet:Notification_Class,
        bacnet:Notify_Type,
        bacnet:Out_Of_Service,
        bacnet:Present_Value,
        bacnet:Priority_Array,
        bacnet:Reliability,
        bacnet:Reliability_Evaluation_Inhibit,
        bacnet:Relinquish_Default,
        bacnet:Status_Flags,
        bacnet:Value_Source,
        bacnet:Value_Source_Array ;
    rdfs:subClassOf bacnet:StandardObject ;
    sh:property [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfTimeStamp ;
            sh:path bacnet:event-time-stamps ],
        [ sh:hasValue "datetime-pattern-value" ;
            sh:path bacnet:object-type ],
        [ sh:datatype xsd:dateTime ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:present-value ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:TimeStamp ;
            sh:path bacnet:last-command-time ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notification-class ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-state ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-detection-enable ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:acked-transitions ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfTimeStamp ;
            sh:path bacnet:command-time-array ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:OptionalPriorityFilter ;
            sh:path bacnet:auditable-priority-filter ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:status-flags ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-enable ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:OptionalUnsigned ;
            sh:path bacnet:current-command-priority ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notify-type ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfCharacterString ;
            sh:path bacnet:event-message-texts ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfValueSource ;
            sh:path bacnet:value-source-array ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ValueSource ;
            sh:path bacnet:value-source ],
        [ sh:datatype xsd:dateTime ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:relinquish-default ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:PriorityArray ;
            sh:path bacnet:priority-array ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability-evaluation-inhibit ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:out-of-service ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfCharacterString ;
            sh:path bacnet:event-message-texts-config ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:is-utc ] ;
    sh:targetClass bacnet:DateTimePatternValueObject .

bacnet:DateTimeValueObject a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Date Time Value Object" ;
    bacnet:hasProperty bacnet:Acked_Transitions,
        bacnet:Auditable_Priority_Filter,
        bacnet:Command_Time_Array,
        bacnet:Current_Command_Priority,
        bacnet:Event_Detection_Enable,
        bacnet:Event_Enable,
        bacnet:Event_Message_Texts,
        bacnet:Event_Message_Texts_Config,
        bacnet:Event_State,
        bacnet:Event_Time_Stamps,
        bacnet:Is_UTC,
        bacnet:Last_Command_Time,
        bacnet:Notification_Class,
        bacnet:Notify_Type,
        bacnet:Out_Of_Service,
        bacnet:Present_Value,
        bacnet:Priority_Array,
        bacnet:Reliability,
        bacnet:Reliability_Evaluation_Inhibit,
        bacnet:Relinquish_Default,
        bacnet:Status_Flags,
        bacnet:Value_Source,
        bacnet:Value_Source_Array ;
    rdfs:subClassOf bacnet:StandardObject ;
    sh:property [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfCharacterString ;
            sh:path bacnet:event-message-texts-config ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notification-class ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-state ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:out-of-service ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:PriorityArray ;
            sh:path bacnet:priority-array ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfValueSource ;
            sh:path bacnet:value-source-array ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:TimeStamp ;
            sh:path bacnet:last-command-time ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-detection-enable ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfTimeStamp ;
            sh:path bacnet:command-time-array ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-enable ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:status-flags ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:OptionalUnsigned ;
            sh:path bacnet:current-command-priority ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfTimeStamp ;
            sh:path bacnet:event-time-stamps ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:acked-transitions ],
        [ sh:datatype xsd:dateTime ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:present-value ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:OptionalPriorityFilter ;
            sh:path bacnet:auditable-priority-filter ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notify-type ],
        [ sh:hasValue "datetime-value" ;
            sh:path bacnet:object-type ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:is-utc ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ValueSource ;
            sh:path bacnet:value-source ],
        [ sh:datatype xsd:dateTime ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:relinquish-default ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability-evaluation-inhibit ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfCharacterString ;
            sh:path bacnet:event-message-texts ] ;
    sh:targetClass bacnet:DateTimeValueObject .

bacnet:DateValueObject a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Date Value Object" ;
    bacnet:hasProperty bacnet:Acked_Transitions,
        bacnet:Auditable_Priority_Filter,
        bacnet:Command_Time_Array,
        bacnet:Current_Command_Priority,
        bacnet:Event_Detection_Enable,
        bacnet:Event_Enable,
        bacnet:Event_Message_Texts,
        bacnet:Event_Message_Texts_Config,
        bacnet:Event_State,
        bacnet:Event_Time_Stamps,
        bacnet:Last_Command_Time,
        bacnet:Notification_Class,
        bacnet:Notify_Type,
        bacnet:Out_Of_Service,
        bacnet:Present_Value,
        bacnet:Priority_Array,
        bacnet:Reliability,
        bacnet:Reliability_Evaluation_Inhibit,
        bacnet:Relinquish_Default,
        bacnet:Status_Flags,
        bacnet:Value_Source,
        bacnet:Value_Source_Array ;
    rdfs:subClassOf bacnet:StandardObject ;
    sh:property [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:out-of-service ],
        [ sh:datatype xsd:date ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:relinquish-default ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-detection-enable ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-enable ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notification-class ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:PriorityArray ;
            sh:path bacnet:priority-array ],
        [ sh:datatype xsd:date ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:present-value ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ValueSource ;
            sh:path bacnet:value-source ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notify-type ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:TimeStamp ;
            sh:path bacnet:last-command-time ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:status-flags ],
        [ sh:hasValue "date-value" ;
            sh:path bacnet:object-type ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-state ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfValueSource ;
            sh:path bacnet:value-source-array ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfTimeStamp ;
            sh:path bacnet:command-time-array ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability-evaluation-inhibit ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfCharacterString ;
            sh:path bacnet:event-message-texts ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:OptionalPriorityFilter ;
            sh:path bacnet:auditable-priority-filter ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfCharacterString ;
            sh:path bacnet:event-message-texts-config ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:acked-transitions ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfTimeStamp ;
            sh:path bacnet:event-time-stamps ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:OptionalUnsigned ;
            sh:path bacnet:current-command-priority ] ;
    sh:targetClass bacnet:DateValueObject .

bacnet:Destination a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Destination" ;
    sh:property [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:valid-days ],
        [ sh:datatype xsd:time ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:to-time ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:issue-confirmed-notifications ],
        [ sh:datatype xsd:time ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:from-time ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:transitions ],
        [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:node bacnet:Recipient ;
            sh:path bacnet:recipient ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:process-identifier ] ;
    sh:targetClass bacnet:Destination .

bacnet:Device a rdfs:Class,
        sh:NodeShape ;
    rdfs:comment "Any device, real or virtual, that supports digital communication." ;
    sh:property [ sh:class bacnet:Node ;
            sh:description "" ;
            sh:path bacnet:hasNode ],
        [ sh:class bacnet:Port ;
            sh:description "" ;
            sh:path bacnet:hasPort ] .

bacnet:DeviceAddress a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Device Address" ;
    sh:property [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:network-number ],
        [ sh:datatype xsd:hexBinary ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:mac-address ] ;
    sh:targetClass bacnet:DeviceAddress .

bacnet:DeviceObject a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Device Object" ;
    bacnet:hasProperty bacnet:APDU_Segment_Timeout,
        bacnet:APDU_Timeout,
        bacnet:Acked_Transitions,
        bacnet:Active_COV_Multiple_Subscriptions,
        bacnet:Active_COV_Subscriptions,
        bacnet:Active_VT_Sessions,
        bacnet:Align_Intervals,
        bacnet:Application_Software_Version,
        bacnet:Audit_Notification_Recipient,
        bacnet:Auto_Slave_Discovery,
        bacnet:Backup_And_Restore_State,
        bacnet:Backup_Failure_Timeout,
        bacnet:Backup_Preparation_Time,
        bacnet:Configuration_Files,
        bacnet:Database_Revision,
        bacnet:Daylight_Savings_Status,
        bacnet:Deployed_Profile_Location,
        bacnet:Device_Address_Binding,
        bacnet:Device_UuiD,
        bacnet:Event_Detection_Enable,
        bacnet:Event_Enable,
        bacnet:Event_Message_Texts,
        bacnet:Event_Message_Texts_Config,
        bacnet:Event_State,
        bacnet:Event_Time_Stamps,
        bacnet:Firmware_Revision,
        bacnet:Interval_Offset,
        bacnet:Last_Restart_Reason,
        bacnet:Last_Restore_Time,
        bacnet:Local_Date,
        bacnet:Local_Time,
        bacnet:Location,
        bacnet:Manual_Slave_Address_Binding,
        bacnet:Max_APDU_Length_Accepted,
        bacnet:Max_Info_Frames,
        bacnet:Max_Master,
        bacnet:Max_Segments_Accepted,
        bacnet:Model_Name,
        bacnet:Notification_Class,
        bacnet:Notify_Type,
        bacnet:Number_Of_APDU_Retries,
        bacnet:Object_List,
        bacnet:Protocol_Object_Types_Supported,
        bacnet:Protocol_Revision,
        bacnet:Protocol_Services_Supported,
        bacnet:Protocol_Version,
        bacnet:Reliability,
        bacnet:Reliability_Evaluation_Inhibit,
        bacnet:Restart_Notification_Recipients,
        bacnet:Restore_Completion_Time,
        bacnet:Restore_Preparation_Time,
        bacnet:Segmentation_Supported,
        bacnet:Serial_Number,
        bacnet:Slave_Address_Binding,
        bacnet:Slave_Proxy_Enable,
        bacnet:Status_Flags,
        bacnet:Structured_Object_List,
        bacnet:System_Status,
        bacnet:Time_Of_Device_Restart,
        bacnet:Time_Synchronization_Interval,
        bacnet:Time_Synchronization_Recipients,
        bacnet:UTC_Offset,
        bacnet:UTC_Time_Synchronization_Recipients,
        bacnet:VT_Classes_Supported,
        bacnet:Vendor_Identifier,
        bacnet:Vendor_Name ;
    rdfs:subClassOf bacnet:StandardObject ;
    sh:property [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:deployed-profile-location ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:restore-preparation-time ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:vendor-identifier ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:protocol-revision ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ListOfVTClass ;
            sh:path bacnet:vt-classes-supported ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-enable ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:interval-offset ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:backup-preparation-time ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:time-synchronization-interval ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:max-info-frames ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:Recipient ;
            sh:path bacnet:audit-notification-recipient ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:vendor-name ],
        [ sh:datatype xsd:hexBinary ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:device-uuiD ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notification-class ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:model-name ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfCharacterString ;
            sh:path bacnet:event-message-texts-config ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfObjectIdentifier ;
            sh:path bacnet:configuration-files ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:protocol-version ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:protocol-object-types-supported ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfBoolean ;
            sh:path bacnet:auto-slave-discovery ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ListOfVTSession ;
            sh:path bacnet:active-vt-sessions ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notify-type ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:daylight-savings-status ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:location ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ListOfRecipient ;
            sh:path bacnet:utc-time-synchronization-recipients ],
        [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:node bacnet:ArrayOfObjectIdentifier ;
            sh:path bacnet:object-list ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:restore-completion-time ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:acked-transitions ],
        [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:node bacnet:ListOfAddressBinding ;
            sh:path bacnet:device-address-binding ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:status-flags ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:backup-failure-timeout ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:database-revision ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:TimeStamp ;
            sh:path bacnet:last-restore-time ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:align-intervals ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ListOfAddressBinding ;
            sh:path bacnet:manual-slave-address-binding ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfObjectIdentifier ;
            sh:path bacnet:structured-object-list ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:max-apdu-length-accepted ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ListOfCOVMultipleSubscription ;
            sh:path bacnet:active-cov-multiple-subscriptions ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfBoolean ;
            sh:path bacnet:slave-proxy-enable ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ListOfCOVSubscription ;
            sh:path bacnet:active-cov-subscriptions ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-detection-enable ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-state ],
        [ sh:datatype xsd:date ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:local-date ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:last-restart-reason ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ListOfRecipient ;
            sh:path bacnet:time-synchronization-recipients ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:application-software-version ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:serial-number ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:number-of-apdu-retries ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability-evaluation-inhibit ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:backup-and-restore-state ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:max-master ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:segmentation-supported ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfTimeStamp ;
            sh:path bacnet:event-time-stamps ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:firmware-revision ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:TimeStamp ;
            sh:path bacnet:time-of-device-restart ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:apdu-segment-timeout ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ListOfAddressBinding ;
            sh:path bacnet:slave-address-binding ],
        [ sh:hasValue "device" ;
            sh:path bacnet:object-type ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:max-segments-accepted ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:protocol-services-supported ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ListOfRecipient ;
            sh:path bacnet:restart-notification-recipients ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfCharacterString ;
            sh:path bacnet:event-message-texts ],
        [ sh:datatype xsd:time ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:local-time ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:system-status ],
        [ sh:datatype xsd:integer ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:utc-offset ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:apdu-timeout ] ;
    sh:targetClass bacnet:DeviceObject .

bacnet:DeviceObjectPropertyReference a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Device Object Property Reference" ;
    sh:property [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:device-identifier ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:property-array-index ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:property-identifier ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-identifier ] ;
    sh:targetClass bacnet:DeviceObjectPropertyReference .

bacnet:DeviceObjectPropertyValue a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Device Object Property Value" ;
    sh:property [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:property-identifier ],
        [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:value ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:array-index ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-identifier ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:device-identifier ] ;
    sh:targetClass bacnet:DeviceObjectPropertyValue .

bacnet:DeviceObjectReference a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Device Object Reference" ;
    sh:property [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:device-identifier ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-identifier ] ;
    sh:targetClass bacnet:DeviceObjectReference .

bacnet:ElevatorGroupObject a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Elevator Group Object" ;
    bacnet:hasProperty bacnet:Group_ID,
        bacnet:Group_Members,
        bacnet:Group_Mode,
        bacnet:Landing_Call_Control,
        bacnet:Landing_Calls,
        bacnet:Machine_Room_ID ;
    rdfs:subClassOf bacnet:StandardObject ;
    sh:property [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:node bacnet:ArrayOfObjectIdentifier ;
            sh:path bacnet:group-members ],
        [ sh:hasValue "elevator-group" ;
            sh:path bacnet:object-type ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:group-mode ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:LandingCallStatus ;
            sh:path bacnet:landing-call-control ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:machine-room-iD ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:maxInclusive "255"^^xsd:nonNegativeInteger ;
            sh:minCount 1 ;
            sh:path bacnet:group-iD ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ListOfLandingCallStatus ;
            sh:path bacnet:landing-calls ] ;
    sh:targetClass bacnet:ElevatorGroupObject .

bacnet:Enumerated a bacnet:StandardEnumerated,
        rdfs:Class ;
    rdfs:comment "The superclass of enumerations." ;
    owl:disjointUnionOf ( bacnet:StandardEnumerated bacnet:ProprietaryEnumerated ) ;
    sh:property [ sh:class bacnet:Enumeration ;
            sh:path bacnet:hasMember ] .

bacnet:Enumeration a rdfs:Class,
        sh:NodeShape ;
    rdfs:comment "The class of enumeration values with a reference to the enumerated type." ;
    sh:property [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:enumName ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:enumValue ] ;
    sh:targetClass bacnet:Enumeration .

bacnet:ErrorType a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Error Type" ;
    sh:property [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:error-code ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:error-class ] ;
    sh:targetClass bacnet:ErrorType .

bacnet:EscalatorObject a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Escalator Object" ;
    bacnet:hasProperty bacnet:Acked_Transitions,
        bacnet:Elevator_Group,
        bacnet:Energy_Meter,
        bacnet:Energy_Meter_Ref,
        bacnet:Escalator_Mode,
        bacnet:Event_Algorithm_Inhibit,
        bacnet:Event_Algorithm_Inhibit_Ref,
        bacnet:Event_Detection_Enable,
        bacnet:Event_Enable,
        bacnet:Event_Message_Texts,
        bacnet:Event_Message_Texts_Config,
        bacnet:Event_State,
        bacnet:Event_Time_Stamps,
        bacnet:Fault_Signals,
        bacnet:Group_ID,
        bacnet:Installation_ID,
        bacnet:Notification_Class,
        bacnet:Notify_Type,
        bacnet:Operation_Direction,
        bacnet:Out_Of_Service,
        bacnet:Passenger_Alarm,
        bacnet:Power_Mode,
        bacnet:Reliability,
        bacnet:Reliability_Evaluation_Inhibit,
        bacnet:Status_Flags,
        bacnet:Time_Delay,
        bacnet:Time_Delay_Normal ;
    rdfs:subClassOf bacnet:StandardObject ;
    sh:property [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:status-flags ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:elevator-group ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfCharacterString ;
            sh:path bacnet:event-message-texts ],
        [ sh:hasValue "escalator" ;
            sh:path bacnet:object-type ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notify-type ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notification-class ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfTimeStamp ;
            sh:path bacnet:event-time-stamps ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:time-delay-normal ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:DeviceObjectReference ;
            sh:path bacnet:energy-meter-ref ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:maxInclusive "255"^^xsd:nonNegativeInteger ;
            sh:minCount 1 ;
            sh:path bacnet:installation-iD ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-detection-enable ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:escalator-mode ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ListOfLiftFault ;
            sh:path bacnet:fault-signals ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-algorithm-inhibit ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:time-delay ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-state ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:passenger-alarm ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfCharacterString ;
            sh:path bacnet:event-message-texts-config ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:operation-direction ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-enable ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability ],
        [ sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:energy-meter ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:power-mode ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:out-of-service ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ObjectPropertyReference ;
            sh:path bacnet:event-algorithm-inhibit-ref ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:maxInclusive "255"^^xsd:nonNegativeInteger ;
            sh:minCount 1 ;
            sh:path bacnet:group-iD ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability-evaluation-inhibit ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:acked-transitions ] ;
    sh:targetClass bacnet:EscalatorObject .

bacnet:EthernetHub a rdfs:Class ;
    rdfs:comment "A device that connects two or more Ethernet segments at the physical and data link layers (deprecated by IEEE 802.3)." ;
    rdfs:subClassOf bacnet:Bridge .

bacnet:EthernetNetwork a rdfs:Class,
        sh:NodeShape ;
    rdfs:subClassOf bacnet:Network ;
    sh:property [ sh:class bacnet:EthernetNode ;
            sh:description "" ;
            sh:path bacnet:hasNode ] ;
    sh:targetClass bacnet:EthernetNetwork .

bacnet:EthernetNode a rdfs:Class,
        sh:NodeShape ;
    rdfs:subClassOf bacnet:Node ;
    sh:property [ sh:description "" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:hasAddress ;
            sh:pattern "^[0-9a-f][0-9a-f](:[0-9a-f][0-9a-f]){5}$" ] ;
    sh:targetClass bacnet:EthernetNode .

bacnet:EthernetPort a rdfs:Class,
        sh:NodeShape ;
    rdfs:subClassOf bacnet:Port ;
    sh:targetClass bacnet:EthernetPort .

bacnet:EthernetSwitch a rdfs:Class ;
    rdfs:comment "A device that connects two or more Ethernet segments at the physical and data link layers that uses packet switching." ;
    rdfs:subClassOf bacnet:Bridge .

bacnet:EthernetVLANNetwork a rdfs:Class,
        sh:NodeShape ;
    rdfs:subClassOf bacnet:EthernetNetwork ;
    sh:property [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:hasVID ] ;
    sh:targetClass bacnet:EthernetVLANNetwork .

bacnet:EventEnrollmentObject a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Event Enrollment Object" ;
    bacnet:hasProperty bacnet:Acked_Transitions,
        bacnet:Event_Algorithm_Inhibit,
        bacnet:Event_Algorithm_Inhibit_Ref,
        bacnet:Event_Detection_Enable,
        bacnet:Event_Enable,
        bacnet:Event_Message_Texts,
        bacnet:Event_Message_Texts_Config,
        bacnet:Event_Parameters,
        bacnet:Event_State,
        bacnet:Event_Time_Stamps,
        bacnet:Event_Type,
        bacnet:Fault_Parameters,
        bacnet:Fault_Type,
        bacnet:Notification_Class,
        bacnet:Notify_Type,
        bacnet:Object_Property_Reference,
        bacnet:Reliability,
        bacnet:Reliability_Evaluation_Inhibit,
        bacnet:Status_Flags,
        bacnet:Time_Delay_Normal ;
    rdfs:subClassOf bacnet:StandardObject ;
    sh:property [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:node bacnet:EventParameter ;
            sh:path bacnet:event-parameters ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:time-delay-normal ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:event-state ],
        [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:node bacnet:DeviceObjectPropertyReference ;
            sh:path bacnet:object-property-reference ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:notification-class ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:event-type ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfTimeStamp ;
            sh:path bacnet:event-time-stamps ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:reliability ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfCharacterString ;
            sh:path bacnet:event-message-texts-config ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:acked-transitions ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:event-enable ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:FaultParameter ;
            sh:path bacnet:fault-parameters ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:status-flags ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-algorithm-inhibit ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability-evaluation-inhibit ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:fault-type ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:event-detection-enable ],
        [ sh:hasValue "event-enrollment" ;
            sh:path bacnet:object-type ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:notify-type ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfCharacterString ;
            sh:path bacnet:event-message-texts ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ObjectPropertyReference ;
            sh:path bacnet:event-algorithm-inhibit-ref ] ;
    sh:targetClass bacnet:EventEnrollmentObject .

bacnet:EventLogObject a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Event Log Object" ;
    bacnet:hasProperty bacnet:Acked_Transitions,
        bacnet:Buffer_Size,
        bacnet:Enable,
        bacnet:Event_Algorithm_Inhibit,
        bacnet:Event_Algorithm_Inhibit_Ref,
        bacnet:Event_Detection_Enable,
        bacnet:Event_Enable,
        bacnet:Event_Message_Texts,
        bacnet:Event_Message_Texts_Config,
        bacnet:Event_State,
        bacnet:Event_Time_Stamps,
        bacnet:Last_Notify_Record,
        bacnet:Log_Buffer,
        bacnet:Notification_Class,
        bacnet:Notification_Threshold,
        bacnet:Notify_Type,
        bacnet:Record_Count,
        bacnet:Records_Since_Notification,
        bacnet:Reliability,
        bacnet:Reliability_Evaluation_Inhibit,
        bacnet:Start_Time,
        bacnet:Status_Flags,
        bacnet:Stop_Time,
        bacnet:Stop_When_Full,
        bacnet:Total_Record_Count ;
    rdfs:subClassOf bacnet:StandardObject ;
    sh:property [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:stop-when-full ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notify-type ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ObjectPropertyReference ;
            sh:path bacnet:event-algorithm-inhibit-ref ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfTimeStamp ;
            sh:path bacnet:event-time-stamps ],
        [ sh:hasValue "event-log" ;
            sh:path bacnet:object-type ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:buffer-size ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:enable ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:total-record-count ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:last-notify-record ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-detection-enable ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:record-count ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-enable ],
        [ sh:datatype xsd:dateTime ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:start-time ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:event-state ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notification-threshold ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-algorithm-inhibit ],
        [ sh:datatype xsd:dateTime ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:stop-time ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:records-since-notification ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability-evaluation-inhibit ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notification-class ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:acked-transitions ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:status-flags ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability ],
        [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:node bacnet:ListOfEventLogRecord ;
            sh:path bacnet:log-buffer ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfCharacterString ;
            sh:path bacnet:event-message-texts ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfCharacterString ;
            sh:path bacnet:event-message-texts-config ] ;
    sh:targetClass bacnet:EventLogObject .

bacnet:EventLogRecord a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Event Log Record" ;
    sh:property [ sh:datatype xsd:dateTime ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:timestamp ],
        [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:node bacnet:EventLogRecordLogDatum ;
            sh:path bacnet:log-datum ] ;
    sh:targetClass bacnet:EventLogRecord .

bacnet:EventLogRecordLogDatum a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Event Log Record Log Datum" ;
    sh:targetClass bacnet:EventLogRecordLogDatum ;
    sh:xone ( [ sh:datatype xsd:string ;
                sh:path bacnet:log-status ] [ sh:node bacnet:EventNotificationParameters ;
                sh:path bacnet:notification ] [ sh:datatype xsd:float ;
                sh:path bacnet:time-change ] ) .

bacnet:EventNotificationParameters a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Event Notification Parameters" ;
    sh:property [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:ack-required ],
        [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:node bacnet:TimeStamp ;
            sh:path bacnet:time-stamp ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:to-state ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:process-identifier ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:notification-class ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:initiating-device-identifier ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:priority ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:message-text ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:from-state ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:event-type ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:event-object-identifier ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:NotificationParameters ;
            sh:path bacnet:event-values ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:notify-type ] ;
    sh:targetClass bacnet:EventNotificationParameters .

bacnet:EventNotificationSubscription a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Event Notification Subscription" ;
    sh:property [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:process-identifier ],
        [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:node bacnet:Recipient ;
            sh:path bacnet:recipient ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:issue-confirmed-notifications ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:time-remaining ] ;
    sh:targetClass bacnet:EventNotificationSubscription .

bacnet:EventParameter a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Event Parameter" ;
    sh:targetClass bacnet:EventParameter ;
    sh:xone ( [ sh:node bacnet:EventParameterChangeOfBitstring ;
                sh:path bacnet:change-of-bitstring ] [ sh:node bacnet:EventParameterChangeOfState ;
                sh:path bacnet:change-of-state ] [ sh:node bacnet:EventParameterChangeOfValue ;
                sh:path bacnet:change-of-value ] [ sh:node bacnet:EventParameterCommandFailure ;
                sh:path bacnet:command-failure ] [ sh:node bacnet:EventParameterFloatingLimit ;
                sh:path bacnet:floating-limit ] [ sh:node bacnet:EventParameterOutOfRange ;
                sh:path bacnet:out-of-range ] [ sh:node bacnet:EventParameterChangeOfLifeSafety ;
                sh:path bacnet:change-of-lifesafety ] [ sh:node bacnet:EventParameterExtended ;
                sh:path bacnet:extended ] [ sh:node bacnet:EventParameterBufferReady ;
                sh:path bacnet:buffer-ready ] [ sh:node bacnet:EventParameterUnsignedRange ;
                sh:path bacnet:unsigned-range ] [ sh:node bacnet:EventParameterAccessEvent ;
                sh:path bacnet:access-event ] [ sh:node bacnet:EventParameterDoubleOutOfRange ;
                sh:path bacnet:double-out-of-range ] [ sh:node bacnet:EventParameterSignedOutOfRange ;
                sh:path bacnet:signed-out-of-range ] [ sh:node bacnet:EventParameterUnsignedOutOfRange ;
                sh:path bacnet:unsigned-out-of-range ] [ sh:node bacnet:EventParameterChangeOfCharacterString ;
                sh:path bacnet:change-of-characterstring ] [ sh:node bacnet:EventParameterChangeOfStatusFlags ;
                sh:path bacnet:change-of-statusflags ] ) .

bacnet:EventParameterAccessEvent a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Event Parameter Access Event" ;
    sh:property [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:node bacnet:SequenceOfEventParameterAccessEventAccessEvent ;
            sh:path bacnet:access-event ] ;
    sh:targetClass bacnet:EventParameterAccessEvent .

bacnet:EventParameterAccessEventAccessEvent a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Event Parameter Access Event Access Event" ;
    sh:property [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:node bacnet:DeviceObjectPropertyReference ;
            sh:path bacnet:access-event-time-reference ],
        [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:node bacnet:SequenceOfAccessEvent ;
            sh:path bacnet:list-of-access-events ] ;
    sh:targetClass bacnet:EventParameterAccessEventAccessEvent .

bacnet:EventParameterBufferReady a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Event Parameter Buffer Ready" ;
    sh:property [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:notification-threshold ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:previous-notification-count ] ;
    sh:targetClass bacnet:EventParameterBufferReady .

bacnet:EventParameterChangeOfBitstring a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Event Parameter Change Of Bitstring" ;
    sh:property [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:node bacnet:SequenceOfBitString ;
            sh:path bacnet:list-of-bitstring-values ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:time-delay ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:bitmask ] ;
    sh:targetClass bacnet:EventParameterChangeOfBitstring .

bacnet:EventParameterChangeOfCharacterString a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Event Parameter Change Of Character String" ;
    sh:property [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:time-delay ],
        [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:node bacnet:SequenceOfCharacterString ;
            sh:path bacnet:list-of-alarm-values ] ;
    sh:targetClass bacnet:EventParameterChangeOfCharacterString .

bacnet:EventParameterChangeOfLifeSafety a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Event Parameter Change Of Life Safety" ;
    sh:property [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:time-delay ],
        [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:node bacnet:SequenceOfLifeSafetyState ;
            sh:path bacnet:list-of-life-safety-alarm-values ],
        [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:node bacnet:DeviceObjectPropertyReference ;
            sh:path bacnet:mode-property-reference ],
        [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:node bacnet:SequenceOfLifeSafetyState ;
            sh:path bacnet:list-of-alarm-values ] ;
    sh:targetClass bacnet:EventParameterChangeOfLifeSafety .

bacnet:EventParameterChangeOfState a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Event Parameter Change Of State" ;
    sh:property [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:time-delay ],
        [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:node bacnet:SequenceOfPropertyStates ;
            sh:path bacnet:list-of-values ] ;
    sh:targetClass bacnet:EventParameterChangeOfState .

bacnet:EventParameterChangeOfStatusFlags a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Event Parameter Change Of Status Flags" ;
    sh:property [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:time-delay ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:selected-flags ] ;
    sh:targetClass bacnet:EventParameterChangeOfStatusFlags .

bacnet:EventParameterChangeOfValue a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Event Parameter Change Of Value" ;
    sh:property [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:time-delay ],
        [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:node bacnet:EventParameterChangeOfValueCOVCriteria ;
            sh:path bacnet:cov-criteria ] ;
    sh:targetClass bacnet:EventParameterChangeOfValue .

bacnet:EventParameterChangeOfValueCOVCriteria a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Event Parameter Change Of Value COVCriteria" ;
    sh:targetClass bacnet:EventParameterChangeOfValueCOVCriteria ;
    sh:xone ( [ sh:datatype xsd:string ;
                sh:path bacnet:bitmask ] [ sh:datatype xsd:float ;
                sh:path bacnet:referenced-property-increment ] ) .

bacnet:EventParameterCommandFailure a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Event Parameter Command Failure" ;
    sh:property [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:time-delay ],
        [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:node bacnet:DeviceObjectPropertyReference ;
            sh:path bacnet:feedback-property-reference ] ;
    sh:targetClass bacnet:EventParameterCommandFailure .

bacnet:EventParameterDoubleOutOfRange a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Event Parameter Double Out Of Range" ;
    sh:property [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:time-delay ],
        [ sh:datatype xsd:double ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:low-limit ],
        [ sh:datatype xsd:double ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:high-limit ],
        [ sh:datatype xsd:double ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:deadband ] ;
    sh:targetClass bacnet:EventParameterDoubleOutOfRange .

bacnet:EventParameterExtended a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Event Parameter Extended" ;
    sh:property [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:extended-event-type ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:vendor-id ],
        [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:node bacnet:SequenceOfEventParameterExtendedParameters ;
            sh:path bacnet:parameters ] ;
    sh:targetClass bacnet:EventParameterExtended .

bacnet:EventParameterExtendedParameters a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Event Parameter Extended Parameters" ;
    sh:targetClass bacnet:EventParameterExtendedParameters ;
    sh:xone ( [ sh:path bacnet:null ;
                sh:value bacnet:NULL ] [ sh:datatype xsd:float ;
                sh:path bacnet:real ] [ sh:datatype xsd:nonNegativeInteger ;
                sh:path bacnet:integer ] [ sh:datatype xsd:boolean ;
                sh:path bacnet:boolean ] [ sh:datatype xsd:double ;
                sh:path bacnet:double ] [ sh:datatype xsd:hexBinary ;
                sh:path bacnet:octet ] [ sh:datatype xsd:string ;
                sh:path bacnet:bitstring ] [ sh:datatype xsd:string ;
                sh:path bacnet:enum ] [ sh:node bacnet:DeviceObjectPropertyReference ;
                sh:path bacnet:reference ] ) .

bacnet:EventParameterFloatingLimit a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Event Parameter Floating Limit" ;
    sh:property [ sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:deadband ],
        [ sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:high-diff-limit ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:time-delay ],
        [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:node bacnet:DeviceObjectPropertyReference ;
            sh:path bacnet:setpoint-reference ],
        [ sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:low-diff-limit ] ;
    sh:targetClass bacnet:EventParameterFloatingLimit .

bacnet:EventParameterOutOfRange a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Event Parameter Out Of Range" ;
    sh:property [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:time-delay ],
        [ sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:deadband ],
        [ sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:high-limit ],
        [ sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:low-limit ] ;
    sh:targetClass bacnet:EventParameterOutOfRange .

bacnet:EventParameterSignedOutOfRange a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Event Parameter Signed Out Of Range" ;
    sh:property [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:deadband ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:time-delay ],
        [ sh:datatype xsd:integer ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:high-limit ],
        [ sh:datatype xsd:integer ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:low-limit ] ;
    sh:targetClass bacnet:EventParameterSignedOutOfRange .

bacnet:EventParameterUnsignedOutOfRange a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Event Parameter Unsigned Out Of Range" ;
    sh:property [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:time-delay ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:low-limit ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:high-limit ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:deadband ] ;
    sh:targetClass bacnet:EventParameterUnsignedOutOfRange .

bacnet:EventParameterUnsignedRange a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Event Parameter Unsigned Range" ;
    sh:property [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:low-limit ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:time-delay ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:high-limit ] ;
    sh:targetClass bacnet:EventParameterUnsignedRange .

bacnet:ExtendedEnumerated a rdfs:Class ;
    rdfs:comment "The class of enumerated types defined in the standard that may be extended by vendors with restrictions on values." ;
    rdfs:subClassOf bacnet:StandardEnumerated ;
    sh:property [ sh:class bacnet:ExtendedEnumeration ;
            sh:path bacnet:hasMember ] .

bacnet:ExtendedEnumeration a rdfs:Class,
        sh:NodeShape ;
    rdfs:comment "An enumeration value defined by a vendor that extends one of the enumerated types in the standard." ;
    rdfs:subClassOf bacnet:Enumeration ;
    sh:property [ sh:class bacnet:Vendor ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:enumVendor ] ;
    sh:targetClass bacnet:ExtendedEnumeration .

bacnet:FDTEntry a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "FDTEntry" ;
    sh:property [ sh:datatype xsd:hexBinary ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:bacnet-ip-address ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:maxInclusive "65535"^^xsd:nonNegativeInteger ;
            sh:minCount 1 ;
            sh:path bacnet:remaining-time-to-live ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:maxInclusive "65535"^^xsd:nonNegativeInteger ;
            sh:minCount 1 ;
            sh:path bacnet:time-to-live ] ;
    sh:targetClass bacnet:FDTEntry .

bacnet:FaultParameter a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Fault Parameter" ;
    sh:targetClass bacnet:FaultParameter ;
    sh:xone ( [ sh:path bacnet:none ;
                sh:value bacnet:NULL ] [ sh:node bacnet:FaultParameterCharacterString ;
                sh:path bacnet:fault-character-string ] [ sh:node bacnet:FaultParameterExtended ;
                sh:path bacnet:fault-extended ] [ sh:node bacnet:FaultParameterLifeSafety ;
                sh:path bacnet:fault-life-safety ] [ sh:node bacnet:FaultParameterState ;
                sh:path bacnet:fault-state ] [ sh:node bacnet:FaultParameterStatusFlags ;
                sh:path bacnet:fault-status-flags ] ) .

bacnet:FaultParameterCharacterString a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Fault Parameter Character String" ;
    sh:property [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:node bacnet:SequenceOfCharacterString ;
            sh:path bacnet:list-of-fault-values ] ;
    sh:targetClass bacnet:FaultParameterCharacterString .

bacnet:FaultParameterExtended a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Fault Parameter Extended" ;
    sh:property [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:node bacnet:SequenceOfFaultParameterExtendedParameters ;
            sh:path bacnet:parameters ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:vendor-id ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:extended-fault-type ] ;
    sh:targetClass bacnet:FaultParameterExtended .

bacnet:FaultParameterExtendedParameters a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Fault Parameter Extended Parameters" ;
    sh:targetClass bacnet:FaultParameterExtendedParameters ;
    sh:xone ( [ sh:path bacnet:null ;
                sh:value bacnet:NULL ] [ sh:datatype xsd:float ;
                sh:path bacnet:real ] [ sh:datatype xsd:nonNegativeInteger ;
                sh:path bacnet:unsigned ] [ sh:datatype xsd:boolean ;
                sh:path bacnet:boolean ] [ sh:datatype xsd:integer ;
                sh:path bacnet:integer ] [ sh:datatype xsd:double ;
                sh:path bacnet:double ] [ sh:datatype xsd:hexBinary ;
                sh:path bacnet:octet ] [ sh:datatype xsd:string ;
                sh:path bacnet:character-string ] [ sh:datatype xsd:string ;
                sh:path bacnet:bitstring ] [ sh:datatype xsd:string ;
                sh:path bacnet:enum ] [ sh:datatype xsd:date ;
                sh:path bacnet:date ] [ sh:datatype xsd:time ;
                sh:path bacnet:time ] [ sh:datatype xsd:string ;
                sh:path bacnet:object-identifier ] [ sh:node bacnet:DeviceObjectPropertyReference ;
                sh:path bacnet:reference ] ) .

bacnet:FaultParameterLifeSafety a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Fault Parameter Life Safety" ;
    sh:property [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:node bacnet:SequenceOfLifeSafetyState ;
            sh:path bacnet:list-of-fault-values ],
        [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:node bacnet:DeviceObjectPropertyReference ;
            sh:path bacnet:mode-property-reference ] ;
    sh:targetClass bacnet:FaultParameterLifeSafety .

bacnet:FaultParameterState a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Fault Parameter State" ;
    sh:property [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:node bacnet:SequenceOfPropertyStates ;
            sh:path bacnet:list-of-fault-values ] ;
    sh:targetClass bacnet:FaultParameterState .

bacnet:FaultParameterStatusFlags a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Fault Parameter Status Flags" ;
    sh:property [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:node bacnet:DeviceObjectPropertyReference ;
            sh:path bacnet:status-flags-reference ] ;
    sh:targetClass bacnet:FaultParameterStatusFlags .

bacnet:FileObject a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "File Object" ;
    bacnet:hasProperty bacnet:Archive,
        bacnet:File_Access_Method,
        bacnet:File_Size,
        bacnet:File_Type,
        bacnet:Modification_Date,
        bacnet:Read_Only,
        bacnet:Record_Count ;
    rdfs:subClassOf bacnet:StandardObject ;
    sh:property [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:file-type ],
        [ sh:hasValue "file" ;
            sh:path bacnet:object-type ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:file-access-method ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:archive ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:file-size ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:read-only ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:record-count ],
        [ sh:datatype xsd:dateTime ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:modification-date ] ;
    sh:targetClass bacnet:FileObject .

bacnet:Gateway a rdfs:Class ;
    rdfs:comment "A device that connects two or more dissimilar networks, permitting information exchange between them." ;
    rdfs:subClassOf bacnet:Device .

bacnet:GlobalGroupObject a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Global Group Object" ;
    bacnet:hasProperty bacnet:Acked_Transitions,
        bacnet:COVU_Period,
        bacnet:COVU_Recipients,
        bacnet:COV_Resubscription_Interval,
        bacnet:Client_COV_Increment,
        bacnet:Event_Algorithm_Inhibit,
        bacnet:Event_Algorithm_Inhibit_Ref,
        bacnet:Event_Detection_Enable,
        bacnet:Event_Enable,
        bacnet:Event_Message_Texts,
        bacnet:Event_Message_Texts_Config,
        bacnet:Event_State,
        bacnet:Event_Time_Stamps,
        bacnet:Group_Member_Names,
        bacnet:Group_Members,
        bacnet:Member_Status_Flags,
        bacnet:Notification_Class,
        bacnet:Notify_Type,
        bacnet:Out_Of_Service,
        bacnet:Present_Value,
        bacnet:Reliability,
        bacnet:Reliability_Evaluation_Inhibit,
        bacnet:Requested_Update_Interval,
        bacnet:Status_Flags,
        bacnet:Time_Delay,
        bacnet:Time_Delay_Normal,
        bacnet:Update_Interval ;
    rdfs:subClassOf bacnet:StandardObject ;
    sh:property [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:requested-update-interval ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:covu-period ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfCharacterString ;
            sh:path bacnet:group-member-names ],
        [ sh:hasValue "global-group" ;
            sh:path bacnet:object-type ],
        [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:node bacnet:ArrayOfPropertyAccessResult ;
            sh:path bacnet:present-value ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:member-status-flags ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfCharacterString ;
            sh:path bacnet:event-message-texts ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:out-of-service ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability-evaluation-inhibit ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notify-type ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ObjectPropertyReference ;
            sh:path bacnet:event-algorithm-inhibit-ref ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-enable ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfCharacterString ;
            sh:path bacnet:event-message-texts-config ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:cov-resubscription-interval ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ListOfRecipient ;
            sh:path bacnet:covu-recipients ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfTimeStamp ;
            sh:path bacnet:event-time-stamps ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:time-delay-normal ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ClientCOV ;
            sh:path bacnet:client-cov-increment ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:event-state ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-detection-enable ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notification-class ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:acked-transitions ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-algorithm-inhibit ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability ],
        [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:node bacnet:ArrayOfDeviceObjectPropertyReference ;
            sh:path bacnet:group-members ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:time-delay ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:update-interval ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:status-flags ] ;
    sh:targetClass bacnet:GlobalGroupObject .

bacnet:GroupObject a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Group Object" ;
    bacnet:hasProperty bacnet:List_Of_Group_Members,
        bacnet:Present_Value ;
    rdfs:subClassOf bacnet:StandardObject ;
    sh:property [ sh:hasValue "group" ;
            sh:path bacnet:object-type ],
        [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:node bacnet:ListOfReadAccessResult ;
            sh:path bacnet:present-value ],
        [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:node bacnet:ListOfReadAccessSpecification ;
            sh:path bacnet:list-of-group-members ] ;
    sh:targetClass bacnet:GroupObject .

bacnet:HostAddress a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Host Address" ;
    sh:targetClass bacnet:HostAddress ;
    sh:xone ( [ sh:path bacnet:none ;
                sh:value bacnet:NULL ] [ sh:datatype xsd:hexBinary ;
                sh:path bacnet:ip-address ] [ sh:datatype xsd:string ;
                sh:path bacnet:name ] ) .

bacnet:HostNPort a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Host NPort" ;
    sh:property [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:node bacnet:HostAddress ;
            sh:path bacnet:host ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:maxInclusive "65535"^^xsd:nonNegativeInteger ;
            sh:minCount 1 ;
            sh:path bacnet:port ] ;
    sh:targetClass bacnet:HostNPort .

bacnet:IPv4Network a rdfs:Class,
        sh:NodeShape ;
    rdfs:subClassOf bacnet:Network ;
    sh:property [ sh:class bacnet:IPv4Node ;
            sh:path bacnet:hasNode ] ;
    sh:targetClass bacnet:IPv4Network .

bacnet:IPv4Node a rdfs:Class,
        sh:NodeShape ;
    rdfs:subClassOf bacnet:Node ;
    sh:property [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:hasAddress ;
            sh:pattern "^[0-9]+([.][0-9]+){3}$" ] ;
    sh:targetClass bacnet:IPv4Node .

bacnet:IPv6Network a rdfs:Class,
        sh:NodeShape ;
    rdfs:subClassOf bacnet:Network ;
    sh:property [ sh:class bacnet:IPv6Node ;
            sh:path bacnet:hasNode ] ;
    sh:targetClass bacnet:IPv6Network .

bacnet:IPv6Node a rdfs:Class,
        sh:NodeShape ;
    rdfs:subClassOf bacnet:Node ;
    sh:property [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:hasAddress ;
            sh:pattern "^[0-9a-f]+([:][0-9a-f]+)+$" ] ;
    sh:targetClass bacnet:IPv6Node .

bacnet:IntegerValueObject a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Integer Value Object" ;
    bacnet:hasProperty bacnet:Acked_Transitions,
        bacnet:Auditable_Priority_Filter,
        bacnet:COV_Increment,
        bacnet:Command_Time_Array,
        bacnet:Current_Command_Priority,
        bacnet:Deadband,
        bacnet:Event_Algorithm_Inhibit,
        bacnet:Event_Algorithm_Inhibit_Ref,
        bacnet:Event_Detection_Enable,
        bacnet:Event_Enable,
        bacnet:Event_Message_Texts,
        bacnet:Event_Message_Texts_Config,
        bacnet:Event_State,
        bacnet:Event_Time_Stamps,
        bacnet:Fault_High_Limit,
        bacnet:Fault_Low_Limit,
        bacnet:High_Limit,
        bacnet:Last_Command_Time,
        bacnet:Limit_Enable,
        bacnet:Low_Limit,
        bacnet:Max_Pres_Value,
        bacnet:Min_Pres_Value,
        bacnet:Notification_Class,
        bacnet:Notify_Type,
        bacnet:Out_Of_Service,
        bacnet:Present_Value,
        bacnet:Priority_Array,
        bacnet:Reliability,
        bacnet:Reliability_Evaluation_Inhibit,
        bacnet:Relinquish_Default,
        bacnet:Resolution,
        bacnet:Status_Flags,
        bacnet:Time_Delay,
        bacnet:Time_Delay_Normal,
        bacnet:Units,
        bacnet:Value_Source,
        bacnet:Value_Source_Array ;
    rdfs:subClassOf bacnet:StandardObject ;
    sh:property [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:deadband ],
        [ sh:datatype xsd:integer ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:min-pres-value ],
        [ sh:datatype xsd:integer ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:fault-high-limit ],
        [ sh:datatype xsd:integer ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:present-value ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability-evaluation-inhibit ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:limit-enable ],
        [ sh:hasValue "integer-value" ;
            sh:path bacnet:object-type ],
        [ sh:datatype xsd:integer ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:relinquish-default ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:time-delay ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:OptionalPriorityFilter ;
            sh:path bacnet:auditable-priority-filter ],
        [ sh:datatype xsd:integer ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:resolution ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:status-flags ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfTimeStamp ;
            sh:path bacnet:event-time-stamps ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ObjectPropertyReference ;
            sh:path bacnet:event-algorithm-inhibit-ref ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:acked-transitions ],
        [ sh:datatype xsd:integer ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:high-limit ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfTimeStamp ;
            sh:path bacnet:command-time-array ],
        [ sh:datatype xsd:integer ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:low-limit ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfCharacterString ;
            sh:path bacnet:event-message-texts-config ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notify-type ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:cov-increment ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-enable ],
        [ sh:datatype xsd:integer ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:fault-low-limit ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notification-class ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-state ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-detection-enable ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-algorithm-inhibit ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:OptionalUnsigned ;
            sh:path bacnet:current-command-priority ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfValueSource ;
            sh:path bacnet:value-source-array ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:TimeStamp ;
            sh:path bacnet:last-command-time ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:PriorityArray ;
            sh:path bacnet:priority-array ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:time-delay-normal ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ValueSource ;
            sh:path bacnet:value-source ],
        [ sh:datatype xsd:integer ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:max-pres-value ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:units ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:out-of-service ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfCharacterString ;
            sh:path bacnet:event-message-texts ] ;
    sh:targetClass bacnet:IntegerValueObject .

bacnet:Jack a rdfs:Class,
        sh:NodeShape ;
    rdfs:comment "A jack is a demarcation point between a network service provider and a network customer." ;
    sh:targetClass bacnet:Jack .

bacnet:KeyIdentifier a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Key Identifier" ;
    sh:property [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:algorithm ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:key-id ] ;
    sh:targetClass bacnet:KeyIdentifier .

bacnet:LandingCallStatus a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Landing Call Status" ;
    sh:property [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:node bacnet:LandingCallStatusCommand ;
            sh:path bacnet:command ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:floor-text ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:maxInclusive "255"^^xsd:nonNegativeInteger ;
            sh:minCount 1 ;
            sh:path bacnet:floor-number ] ;
    sh:targetClass bacnet:LandingCallStatus .

bacnet:LandingCallStatusCommand a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Landing Call Status Command" ;
    sh:targetClass bacnet:LandingCallStatusCommand ;
    sh:xone ( [ sh:datatype xsd:string ;
                sh:path bacnet:direction ] [ sh:datatype xsd:nonNegativeInteger ;
                sh:maxInclusive "255"^^xsd:nonNegativeInteger ;
                sh:path bacnet:destination ] ) .

bacnet:LandingDoorStatus a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Landing Door Status" ;
    sh:property [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:node bacnet:SequenceOfLandingDoorStatusLandingDoor ;
            sh:path bacnet:landing-doors ] ;
    sh:targetClass bacnet:LandingDoorStatus .

bacnet:LandingDoorStatusLandingDoor a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Landing Door Status Landing Door" ;
    sh:property [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:door-status ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:maxInclusive "255"^^xsd:nonNegativeInteger ;
            sh:minCount 1 ;
            sh:path bacnet:floor-number ] ;
    sh:targetClass bacnet:LandingDoorStatusLandingDoor .

bacnet:LargeAnalogValueObject a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Large Analog Value Object" ;
    bacnet:hasProperty bacnet:Acked_Transitions,
        bacnet:Auditable_Priority_Filter,
        bacnet:COV_Increment,
        bacnet:Command_Time_Array,
        bacnet:Current_Command_Priority,
        bacnet:Deadband,
        bacnet:Event_Algorithm_Inhibit,
        bacnet:Event_Algorithm_Inhibit_Ref,
        bacnet:Event_Detection_Enable,
        bacnet:Event_Enable,
        bacnet:Event_Message_Texts,
        bacnet:Event_Message_Texts_Config,
        bacnet:Event_State,
        bacnet:Event_Time_Stamps,
        bacnet:Fault_High_Limit,
        bacnet:Fault_Low_Limit,
        bacnet:High_Limit,
        bacnet:Last_Command_Time,
        bacnet:Limit_Enable,
        bacnet:Low_Limit,
        bacnet:Max_Pres_Value,
        bacnet:Min_Pres_Value,
        bacnet:Notification_Class,
        bacnet:Notify_Type,
        bacnet:Out_Of_Service,
        bacnet:Present_Value,
        bacnet:Priority_Array,
        bacnet:Reliability,
        bacnet:Reliability_Evaluation_Inhibit,
        bacnet:Relinquish_Default,
        bacnet:Resolution,
        bacnet:Status_Flags,
        bacnet:Time_Delay,
        bacnet:Time_Delay_Normal,
        bacnet:Units,
        bacnet:Value_Source,
        bacnet:Value_Source_Array ;
    rdfs:subClassOf bacnet:StandardObject ;
    sh:property [ sh:hasValue "large-analog-value" ;
            sh:path bacnet:object-type ],
        [ sh:datatype xsd:double ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:deadband ],
        [ sh:datatype xsd:double ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:present-value ],
        [ sh:datatype xsd:integer ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:relinquish-default ],
        [ sh:datatype xsd:double ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:low-limit ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:PriorityArray ;
            sh:path bacnet:priority-array ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:out-of-service ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfTimeStamp ;
            sh:path bacnet:event-time-stamps ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfTimeStamp ;
            sh:path bacnet:command-time-array ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:acked-transitions ],
        [ sh:datatype xsd:double ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:fault-low-limit ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ObjectPropertyReference ;
            sh:path bacnet:event-algorithm-inhibit-ref ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notify-type ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:OptionalUnsigned ;
            sh:path bacnet:current-command-priority ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:status-flags ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfValueSource ;
            sh:path bacnet:value-source-array ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:units ],
        [ sh:datatype xsd:double ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:fault-high-limit ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ValueSource ;
            sh:path bacnet:value-source ],
        [ sh:datatype xsd:double ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:min-pres-value ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-algorithm-inhibit ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:time-delay-normal ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:limit-enable ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:TimeStamp ;
            sh:path bacnet:last-command-time ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-state ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:time-delay ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-detection-enable ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:cov-increment ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-enable ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfCharacterString ;
            sh:path bacnet:event-message-texts ],
        [ sh:datatype xsd:double ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:high-limit ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:OptionalPriorityFilter ;
            sh:path bacnet:auditable-priority-filter ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability-evaluation-inhibit ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfCharacterString ;
            sh:path bacnet:event-message-texts-config ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notification-class ],
        [ sh:datatype xsd:double ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:resolution ],
        [ sh:datatype xsd:double ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:max-pres-value ] ;
    sh:targetClass bacnet:LargeAnalogValueObject .

bacnet:LifeSafetyPointObject a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Life Safety Point Object" ;
    bacnet:hasProperty bacnet:Accepted_Modes,
        bacnet:Acked_Transitions,
        bacnet:Alarm_Values,
        bacnet:Device_Type,
        bacnet:Direct_Reading,
        bacnet:Event_Algorithm_Inhibit,
        bacnet:Event_Algorithm_Inhibit_Ref,
        bacnet:Event_Detection_Enable,
        bacnet:Event_Enable,
        bacnet:Event_Message_Texts,
        bacnet:Event_Message_Texts_Config,
        bacnet:Event_State,
        bacnet:Event_Time_Stamps,
        bacnet:Fault_Values,
        bacnet:Floor_Number,
        bacnet:Life_Safety_Alarm_Values,
        bacnet:Maintenance_Required,
        bacnet:Member_Of,
        bacnet:Mode,
        bacnet:Notification_Class,
        bacnet:Notify_Type,
        bacnet:Operation_Expected,
        bacnet:Out_Of_Service,
        bacnet:Present_Value,
        bacnet:Reliability,
        bacnet:Reliability_Evaluation_Inhibit,
        bacnet:Setting,
        bacnet:Silenced,
        bacnet:Status_Flags,
        bacnet:Time_Delay,
        bacnet:Time_Delay_Normal,
        bacnet:Tracking_Value,
        bacnet:Units,
        bacnet:Value_Source ;
    rdfs:subClassOf bacnet:StandardObject ;
    sh:property [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-enable ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:maintenance-required ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:units ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:operation-expected ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-algorithm-inhibit ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:acked-transitions ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:time-delay-normal ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:time-delay ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:mode ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfCharacterString ;
            sh:path bacnet:event-message-texts-config ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:out-of-service ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ListOfLifeSafetyState ;
            sh:path bacnet:life-safety-alarm-values ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:setting ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ValueSource ;
            sh:path bacnet:value-source ],
        [ sh:hasValue "life-safety-point" ;
            sh:path bacnet:object-type ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:silenced ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ListOfLifeSafetyState ;
            sh:path bacnet:alarm-values ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ObjectPropertyReference ;
            sh:path bacnet:event-algorithm-inhibit-ref ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notification-class ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:status-flags ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:event-state ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfTimeStamp ;
            sh:path bacnet:event-time-stamps ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ListOfDeviceObjectReference ;
            sh:path bacnet:member-of ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:maxInclusive "255"^^xsd:nonNegativeInteger ;
            sh:minCount 0 ;
            sh:path bacnet:floor-number ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:tracking-value ],
        [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:node bacnet:ListOfLifeSafetyMode ;
            sh:path bacnet:accepted-modes ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:reliability ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:present-value ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ListOfLifeSafetyState ;
            sh:path bacnet:fault-values ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:device-type ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-detection-enable ],
        [ sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:direct-reading ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfCharacterString ;
            sh:path bacnet:event-message-texts ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability-evaluation-inhibit ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notify-type ] ;
    sh:targetClass bacnet:LifeSafetyPointObject .

bacnet:LifeSafetyZoneObject a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Life Safety Zone Object" ;
    bacnet:hasProperty bacnet:Accepted_Modes,
        bacnet:Acked_Transitions,
        bacnet:Alarm_Values,
        bacnet:Device_Type,
        bacnet:Event_Algorithm_Inhibit,
        bacnet:Event_Algorithm_Inhibit_Ref,
        bacnet:Event_Detection_Enable,
        bacnet:Event_Enable,
        bacnet:Event_Message_Texts,
        bacnet:Event_Message_Texts_Config,
        bacnet:Event_State,
        bacnet:Event_Time_Stamps,
        bacnet:Fault_Values,
        bacnet:Floor_Number,
        bacnet:Life_Safety_Alarm_Values,
        bacnet:Maintenance_Required,
        bacnet:Member_Of,
        bacnet:Mode,
        bacnet:Notification_Class,
        bacnet:Notify_Type,
        bacnet:Operation_Expected,
        bacnet:Out_Of_Service,
        bacnet:Present_Value,
        bacnet:Reliability,
        bacnet:Reliability_Evaluation_Inhibit,
        bacnet:Silenced,
        bacnet:Status_Flags,
        bacnet:Time_Delay,
        bacnet:Time_Delay_Normal,
        bacnet:Tracking_Value,
        bacnet:Value_Source,
        bacnet:Zone_Members ;
    rdfs:subClassOf bacnet:StandardObject ;
    sh:property [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:present-value ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:out-of-service ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:device-type ],
        [ sh:hasValue "life-safety-zone" ;
            sh:path bacnet:object-type ],
        [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:node bacnet:ListOfLifeSafetyMode ;
            sh:path bacnet:accepted-modes ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:reliability ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-algorithm-inhibit ],
        [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:node bacnet:ListOfDeviceObjectReference ;
            sh:path bacnet:zone-members ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:silenced ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-detection-enable ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ListOfLifeSafetyState ;
            sh:path bacnet:fault-values ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:tracking-value ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-enable ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:status-flags ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:acked-transitions ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfCharacterString ;
            sh:path bacnet:event-message-texts ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ValueSource ;
            sh:path bacnet:value-source ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notify-type ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfTimeStamp ;
            sh:path bacnet:event-time-stamps ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ListOfLifeSafetyState ;
            sh:path bacnet:alarm-values ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:event-state ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:time-delay ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ListOfDeviceObjectReference ;
            sh:path bacnet:member-of ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:maxInclusive "255"^^xsd:nonNegativeInteger ;
            sh:minCount 0 ;
            sh:path bacnet:floor-number ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ListOfLifeSafetyState ;
            sh:path bacnet:life-safety-alarm-values ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:mode ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:maintenance-required ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability-evaluation-inhibit ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:time-delay-normal ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notification-class ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:operation-expected ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ObjectPropertyReference ;
            sh:path bacnet:event-algorithm-inhibit-ref ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfCharacterString ;
            sh:path bacnet:event-message-texts-config ] ;
    sh:targetClass bacnet:LifeSafetyZoneObject .

bacnet:LiftCarCallList a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Lift Car Call List" ;
    sh:property [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:node bacnet:SequenceOfUnsigned8 ;
            sh:path bacnet:floor-numbers ] ;
    sh:targetClass bacnet:LiftCarCallList .

bacnet:LiftObject a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Lift Object" ;
    bacnet:hasProperty bacnet:Acked_Transitions,
        bacnet:Assigned_Landing_Calls,
        bacnet:Car_Assigned_Direction,
        bacnet:Car_Door_Command,
        bacnet:Car_Door_Status,
        bacnet:Car_Door_Text,
        bacnet:Car_Door_Zone,
        bacnet:Car_Drive_Status,
        bacnet:Car_Load,
        bacnet:Car_Load_Units,
        bacnet:Car_Mode,
        bacnet:Car_Moving_Direction,
        bacnet:Car_Position,
        bacnet:Elevator_Group,
        bacnet:Energy_Meter,
        bacnet:Energy_Meter_Ref,
        bacnet:Event_Algorithm_Inhibit,
        bacnet:Event_Algorithm_Inhibit_Ref,
        bacnet:Event_Detection_Enable,
        bacnet:Event_Enable,
        bacnet:Event_Message_Texts,
        bacnet:Event_Message_Texts_Config,
        bacnet:Event_State,
        bacnet:Event_Time_Stamps,
        bacnet:Fault_Signals,
        bacnet:Floor_Text,
        bacnet:Group_ID,
        bacnet:Higher_Deck,
        bacnet:Installation_ID,
        bacnet:Landing_Door_Status,
        bacnet:Lower_Deck,
        bacnet:Making_Car_Call,
        bacnet:Next_Stopping_Floor,
        bacnet:Notification_Class,
        bacnet:Notify_Type,
        bacnet:Out_Of_Service,
        bacnet:Passenger_Alarm,
        bacnet:Registered_Car_Call,
        bacnet:Reliability,
        bacnet:Reliability_Evaluation_Inhibit,
        bacnet:Status_Flags,
        bacnet:Time_Delay,
        bacnet:Time_Delay_Normal,
        bacnet:Tracking_Value ;
    rdfs:subClassOf bacnet:StandardObject ;
    sh:property [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:car-moving-direction ],
        [ sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:tracking-value ],
        [ sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:car-load ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfDoorStatus ;
            sh:path bacnet:car-door-status ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:status-flags ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfLandingDoorStatus ;
            sh:path bacnet:landing-door-status ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:car-drive-status ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:lower-deck ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-algorithm-inhibit ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:elevator-group ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfLiftCarDoorCommand ;
            sh:path bacnet:car-door-command ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfLiftCarCallList ;
            sh:path bacnet:registered-car-call ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfCharacterString ;
            sh:path bacnet:car-door-text ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:car-assigned-direction ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability-evaluation-inhibit ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:time-delay ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notify-type ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:maxInclusive "255"^^xsd:nonNegativeInteger ;
            sh:minCount 0 ;
            sh:path bacnet:car-position ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfUnsigned8 ;
            sh:path bacnet:making-car-call ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-detection-enable ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:out-of-service ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:maxInclusive "255"^^xsd:nonNegativeInteger ;
            sh:minCount 1 ;
            sh:path bacnet:installation-iD ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:DeviceObjectReference ;
            sh:path bacnet:energy-meter-ref ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notification-class ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfTimeStamp ;
            sh:path bacnet:event-time-stamps ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ObjectPropertyReference ;
            sh:path bacnet:event-algorithm-inhibit-ref ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:car-door-zone ],
        [ sh:hasValue "lift" ;
            sh:path bacnet:object-type ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:car-load-units ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:maxInclusive "255"^^xsd:nonNegativeInteger ;
            sh:minCount 1 ;
            sh:path bacnet:group-iD ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:next-stopping-floor ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:acked-transitions ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:passenger-alarm ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-state ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:car-mode ],
        [ sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:energy-meter ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfAssignedLandingCalls ;
            sh:path bacnet:assigned-landing-calls ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfCharacterString ;
            sh:path bacnet:event-message-texts ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfCharacterString ;
            sh:path bacnet:event-message-texts-config ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfCharacterString ;
            sh:path bacnet:floor-text ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-enable ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ListOfLiftFault ;
            sh:path bacnet:fault-signals ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:higher-deck ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:time-delay-normal ] ;
    sh:targetClass bacnet:LiftObject .

bacnet:LightingCommand a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Lighting Command" ;
    sh:property [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:priority ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:fade-time ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:operation ],
        [ sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:step-increment ],
        [ sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:target-level ],
        [ sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:ramp-rate ] ;
    sh:targetClass bacnet:LightingCommand .

bacnet:LightingOutputObject a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Lighting Output Object" ;
    bacnet:hasProperty bacnet:Auditable_Priority_Filter,
        bacnet:Blink_Warn_Enable,
        bacnet:COV_Increment,
        bacnet:Command_Time_Array,
        bacnet:Current_Command_Priority,
        bacnet:Default_Fade_Time,
        bacnet:Default_Ramp_Rate,
        bacnet:Default_Step_Increment,
        bacnet:Egress_Active,
        bacnet:Egress_Time,
        bacnet:Feedback_Value,
        bacnet:In_Progress,
        bacnet:Instantaneous_Power,
        bacnet:Last_Command_Time,
        bacnet:Lighting_Command,
        bacnet:Lighting_Command_Default_Priority,
        bacnet:Max_Actual_Value,
        bacnet:Min_Actual_Value,
        bacnet:Out_Of_Service,
        bacnet:Power,
        bacnet:Present_Value,
        bacnet:Priority_Array,
        bacnet:Reliability,
        bacnet:Reliability_Evaluation_Inhibit,
        bacnet:Relinquish_Default,
        bacnet:Status_Flags,
        bacnet:Tracking_Value,
        bacnet:Transition,
        bacnet:Value_Source,
        bacnet:Value_Source_Array ;
    rdfs:subClassOf bacnet:StandardObject ;
    sh:property [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability-evaluation-inhibit ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:transition ],
        [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:node bacnet:LightingCommand ;
            sh:path bacnet:lighting-command ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:TimeStamp ;
            sh:path bacnet:last-command-time ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:lighting-command-default-priority ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfTimeStamp ;
            sh:path bacnet:command-time-array ],
        [ sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:present-value ],
        [ sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:default-step-increment ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:egress-active ],
        [ sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:instantaneous-power ],
        [ sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:max-actual-value ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:out-of-service ],
        [ sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:default-ramp-rate ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:blink-warn-enable ],
        [ sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:relinquish-default ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:in-progress ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:OptionalUnsigned ;
            sh:path bacnet:current-command-priority ],
        [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:node bacnet:PriorityArray ;
            sh:path bacnet:priority-array ],
        [ sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:power ],
        [ sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:cov-increment ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:default-fade-time ],
        [ sh:hasValue "lighting-output" ;
            sh:path bacnet:object-type ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfValueSource ;
            sh:path bacnet:value-source-array ],
        [ sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:min-actual-value ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:status-flags ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ValueSource ;
            sh:path bacnet:value-source ],
        [ sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:feedback-value ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:egress-time ],
        [ sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:tracking-value ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:OptionalPriorityFilter ;
            sh:path bacnet:auditable-priority-filter ] ;
    sh:targetClass bacnet:LightingOutputObject .

bacnet:List a rdfs:Class ;
    rdfs:comment "The superclass of datatypes with BACnet list semantics." .

bacnet:LoadControlObject a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Load Control Object" ;
    bacnet:hasProperty bacnet:Acked_Transitions,
        bacnet:Actual_Shed_Level,
        bacnet:Duty_Window,
        bacnet:Enable,
        bacnet:Event_Algorithm_Inhibit,
        bacnet:Event_Algorithm_Inhibit_Ref,
        bacnet:Event_Detection_Enable,
        bacnet:Event_Enable,
        bacnet:Event_Message_Texts,
        bacnet:Event_Message_Texts_Config,
        bacnet:Event_State,
        bacnet:Event_Time_Stamps,
        bacnet:Expected_Shed_Level,
        bacnet:Full_Duty_Baseline,
        bacnet:Notification_Class,
        bacnet:Notify_Type,
        bacnet:Present_Value,
        bacnet:Reliability,
        bacnet:Reliability_Evaluation_Inhibit,
        bacnet:Requested_Shed_Level,
        bacnet:Shed_Duration,
        bacnet:Shed_Level_Descriptions,
        bacnet:Shed_Levels,
        bacnet:Start_Time,
        bacnet:State_Description,
        bacnet:Status_Flags,
        bacnet:Time_Delay,
        bacnet:Time_Delay_Normal,
        bacnet:Value_Source ;
    rdfs:subClassOf bacnet:StandardObject ;
    sh:property [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:status-flags ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ValueSource ;
            sh:path bacnet:value-source ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notify-type ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:shed-duration ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-algorithm-inhibit ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfTimeStamp ;
            sh:path bacnet:event-time-stamps ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:present-value ],
        [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:node bacnet:ShedLevel ;
            sh:path bacnet:requested-shed-level ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ObjectPropertyReference ;
            sh:path bacnet:event-algorithm-inhibit-ref ],
        [ sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:full-duty-baseline ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:time-delay-normal ],
        [ sh:datatype xsd:dateTime ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:start-time ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:event-state ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:acked-transitions ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:state-description ],
        [ sh:hasValue "load-control" ;
            sh:path bacnet:object-type ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:enable ],
        [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:node bacnet:ShedLevel ;
            sh:path bacnet:actual-shed-level ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfCharacterString ;
            sh:path bacnet:event-message-texts ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:time-delay ],
        [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:node bacnet:ShedLevel ;
            sh:path bacnet:expected-shed-level ],
        [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:node bacnet:ArrayOfUnsigned ;
            sh:path bacnet:shed-levels ],
        [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:node bacnet:ArrayOfCharacterString ;
            sh:path bacnet:shed-level-descriptions ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:duty-window ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-enable ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-detection-enable ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notification-class ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability-evaluation-inhibit ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfCharacterString ;
            sh:path bacnet:event-message-texts-config ] ;
    sh:targetClass bacnet:LoadControlObject .

bacnet:LogData a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Log Data" ;
    sh:targetClass bacnet:LogData ;
    sh:xone ( [ sh:datatype xsd:string ;
                sh:path bacnet:log-status ] [ sh:node bacnet:SequenceOfLogDataLogData ;
                sh:path bacnet:log-data ] [ sh:datatype xsd:float ;
                sh:path bacnet:time-change ] ) .

bacnet:LogDataLogData a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Log Data Log Data" ;
    sh:targetClass bacnet:LogDataLogData ;
    sh:xone ( [ sh:datatype xsd:boolean ;
                sh:path bacnet:boolean-value ] [ sh:datatype xsd:float ;
                sh:path bacnet:real-value ] [ sh:datatype xsd:string ;
                sh:path bacnet:enum-value ] [ sh:datatype xsd:nonNegativeInteger ;
                sh:path bacnet:unsigned-value ] [ sh:datatype xsd:integer ;
                sh:path bacnet:signed-value ] [ sh:datatype xsd:string ;
                sh:path bacnet:bitstring-value ] [ sh:path bacnet:null-value ;
                sh:value bacnet:NULL ] [ sh:node bacnet:ErrorType ;
                sh:path bacnet:failure ] [ sh:path bacnet:any-value ] ) .

bacnet:LogMultipleRecord a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Log Multiple Record" ;
    sh:property [ sh:datatype xsd:dateTime ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:timestamp ],
        [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:node bacnet:LogData ;
            sh:path bacnet:log-data ] ;
    sh:targetClass bacnet:LogMultipleRecord .

bacnet:LogRecord a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Log Record" ;
    sh:property [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:node bacnet:LogRecordLogDatum ;
            sh:path bacnet:log-datum ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:status-flags ],
        [ sh:datatype xsd:dateTime ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:timestamp ] ;
    sh:targetClass bacnet:LogRecord .

bacnet:LogRecordLogDatum a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Log Record Log Datum" ;
    sh:targetClass bacnet:LogRecordLogDatum ;
    sh:xone ( [ sh:datatype xsd:string ;
                sh:path bacnet:log-status ] [ sh:datatype xsd:boolean ;
                sh:path bacnet:boolean-value ] [ sh:datatype xsd:float ;
                sh:path bacnet:real-value ] [ sh:datatype xsd:string ;
                sh:path bacnet:enum-value ] [ sh:datatype xsd:nonNegativeInteger ;
                sh:path bacnet:unsigned-value ] [ sh:datatype xsd:integer ;
                sh:path bacnet:signed-value ] [ sh:datatype xsd:string ;
                sh:path bacnet:bitstring-value ] [ sh:path bacnet:null-value ;
                sh:value bacnet:NULL ] [ sh:node bacnet:ErrorType ;
                sh:path bacnet:failure ] [ sh:datatype xsd:float ;
                sh:path bacnet:time-change ] [ sh:path bacnet:any-value ] ) .

bacnet:LonTalkNetwork a rdfs:Class,
        sh:NodeShape ;
    rdfs:subClassOf bacnet:Network ;
    sh:property [ sh:class bacnet:LonTalkNode ;
            sh:path bacnet:hasNode ] ;
    sh:targetClass bacnet:LonTalkNetwork .

bacnet:LonTalkNode a rdfs:Class,
        sh:NodeShape ;
    rdfs:subClassOf bacnet:Node ;
    sh:property [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:hasAddress ] ;
    sh:targetClass bacnet:LonTalkNode .

bacnet:LoopObject a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Loop Object" ;
    bacnet:hasProperty bacnet:Acked_Transitions,
        bacnet:Action,
        bacnet:Bias,
        bacnet:COV_Increment,
        bacnet:Controlled_Variable_Reference,
        bacnet:Controlled_Variable_Units,
        bacnet:Controlled_Variable_Value,
        bacnet:Deadband,
        bacnet:Derivative_Constant,
        bacnet:Derivative_Constant_Units,
        bacnet:Error_Limit,
        bacnet:Event_Algorithm_Inhibit,
        bacnet:Event_Algorithm_Inhibit_Ref,
        bacnet:Event_Detection_Enable,
        bacnet:Event_Enable,
        bacnet:Event_Message_Texts,
        bacnet:Event_Message_Texts_Config,
        bacnet:Event_State,
        bacnet:Event_Time_Stamps,
        bacnet:Integral_Constant,
        bacnet:Integral_Constant_Units,
        bacnet:Low_Diff_Limit,
        bacnet:Manipulated_Variable_Reference,
        bacnet:Maximum_Output,
        bacnet:Minimum_Output,
        bacnet:Notification_Class,
        bacnet:Notify_Type,
        bacnet:Out_Of_Service,
        bacnet:Output_Units,
        bacnet:Present_Value,
        bacnet:Priority_For_Writing,
        bacnet:Proportional_Constant,
        bacnet:Proportional_Constant_Units,
        bacnet:Reliability,
        bacnet:Reliability_Evaluation_Inhibit,
        bacnet:Setpoint,
        bacnet:Setpoint_Reference,
        bacnet:Status_Flags,
        bacnet:Time_Delay,
        bacnet:Time_Delay_Normal,
        bacnet:Update_Interval ;
    rdfs:subClassOf bacnet:StandardObject ;
    sh:property [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:acked-transitions ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:derivative-constant-units ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfCharacterString ;
            sh:path bacnet:event-message-texts ],
        [ sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:deadband ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notification-class ],
        [ sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:controlled-variable-value ],
        [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:node bacnet:SetpointReference ;
            sh:path bacnet:setpoint-reference ],
        [ sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:error-limit ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:proportional-constant-units ],
        [ sh:hasValue "loop" ;
            sh:path bacnet:object-type ],
        [ sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:derivative-constant ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:update-interval ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:out-of-service ],
        [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:node bacnet:ObjectPropertyReference ;
            sh:path bacnet:manipulated-variable-reference ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:controlled-variable-units ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:action ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability-evaluation-inhibit ],
        [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:node bacnet:ObjectPropertyReference ;
            sh:path bacnet:controlled-variable-reference ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:output-units ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:integral-constant-units ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:priority-for-writing ],
        [ sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:minimum-output ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ObjectPropertyReference ;
            sh:path bacnet:event-algorithm-inhibit-ref ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:status-flags ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-detection-enable ],
        [ sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:integral-constant ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-enable ],
        [ sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:present-value ],
        [ sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:setpoint ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfCharacterString ;
            sh:path bacnet:event-message-texts-config ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:time-delay-normal ],
        [ sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:proportional-constant ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfTimeStamp ;
            sh:path bacnet:event-time-stamps ],
        [ sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:maximum-output ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability ],
        [ sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:bias ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:time-delay ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:OptionalReal ;
            sh:path bacnet:low-diff-limit ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-algorithm-inhibit ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notify-type ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:event-state ],
        [ sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:cov-increment ] ;
    sh:targetClass bacnet:LoopObject .

bacnet:MSTPNetwork a rdfs:Class,
        sh:NodeShape ;
    rdfs:subClassOf bacnet:Network ;
    sh:property [ sh:class bacnet:MSTPNode ;
            sh:path bacnet:hasNode ] ;
    sh:targetClass bacnet:MSTPNetwork .

bacnet:MSTPNode a rdfs:Class,
        sh:NodeShape ;
    rdfs:subClassOf bacnet:Node ;
    sh:property [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:hasAddress ] ;
    sh:targetClass bacnet:MSTPNode .

bacnet:MultiStateInputObject a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Multi State Input Object" ;
    bacnet:hasProperty bacnet:Acked_Transitions,
        bacnet:Alarm_Values,
        bacnet:Device_Type,
        bacnet:Event_Algorithm_Inhibit,
        bacnet:Event_Algorithm_Inhibit_Ref,
        bacnet:Event_Detection_Enable,
        bacnet:Event_Enable,
        bacnet:Event_Message_Texts,
        bacnet:Event_Message_Texts_Config,
        bacnet:Event_State,
        bacnet:Event_Time_Stamps,
        bacnet:Fault_Values,
        bacnet:Interface_Value,
        bacnet:Notification_Class,
        bacnet:Notify_Type,
        bacnet:Number_Of_States,
        bacnet:Out_Of_Service,
        bacnet:Present_Value,
        bacnet:Reliability,
        bacnet:Reliability_Evaluation_Inhibit,
        bacnet:State_Text,
        bacnet:Status_Flags,
        bacnet:Time_Delay,
        bacnet:Time_Delay_Normal ;
    rdfs:subClassOf bacnet:StandardObject ;
    sh:property [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:OptionalUnsigned ;
            sh:path bacnet:interface-value ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfCharacterString ;
            sh:path bacnet:event-message-texts-config ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:out-of-service ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-detection-enable ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ListOfUnsigned ;
            sh:path bacnet:fault-values ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfTimeStamp ;
            sh:path bacnet:event-time-stamps ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-algorithm-inhibit ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ObjectPropertyReference ;
            sh:path bacnet:event-algorithm-inhibit-ref ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfCharacterString ;
            sh:path bacnet:event-message-texts ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:status-flags ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:present-value ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notification-class ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:number-of-states ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:device-type ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:acked-transitions ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:event-state ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:time-delay ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-enable ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notify-type ],
        [ sh:hasValue "multi-state-input" ;
            sh:path bacnet:object-type ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfCharacterString ;
            sh:path bacnet:state-text ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability-evaluation-inhibit ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:time-delay-normal ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ListOfUnsigned ;
            sh:path bacnet:alarm-values ] ;
    sh:targetClass bacnet:MultiStateInputObject .

bacnet:MultiStateOutputObject a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Multi State Output Object" ;
    bacnet:hasProperty bacnet:Acked_Transitions,
        bacnet:Auditable_Priority_Filter,
        bacnet:Command_Time_Array,
        bacnet:Current_Command_Priority,
        bacnet:Device_Type,
        bacnet:Event_Algorithm_Inhibit,
        bacnet:Event_Algorithm_Inhibit_Ref,
        bacnet:Event_Detection_Enable,
        bacnet:Event_Enable,
        bacnet:Event_Message_Texts,
        bacnet:Event_Message_Texts_Config,
        bacnet:Event_State,
        bacnet:Event_Time_Stamps,
        bacnet:Feedback_Value,
        bacnet:Interface_Value,
        bacnet:Last_Command_Time,
        bacnet:Notification_Class,
        bacnet:Notify_Type,
        bacnet:Number_Of_States,
        bacnet:Out_Of_Service,
        bacnet:Present_Value,
        bacnet:Priority_Array,
        bacnet:Reliability,
        bacnet:Reliability_Evaluation_Inhibit,
        bacnet:Relinquish_Default,
        bacnet:State_Text,
        bacnet:Status_Flags,
        bacnet:Time_Delay,
        bacnet:Time_Delay_Normal,
        bacnet:Value_Source,
        bacnet:Value_Source_Array ;
    rdfs:subClassOf bacnet:StandardObject ;
    sh:property [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:status-flags ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfCharacterString ;
            sh:path bacnet:state-text ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ObjectPropertyReference ;
            sh:path bacnet:event-algorithm-inhibit-ref ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:relinquish-default ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:OptionalUnsigned ;
            sh:path bacnet:current-command-priority ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfTimeStamp ;
            sh:path bacnet:event-time-stamps ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notify-type ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:feedback-value ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:event-state ],
        [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:node bacnet:PriorityArray ;
            sh:path bacnet:priority-array ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:TimeStamp ;
            sh:path bacnet:last-command-time ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:OptionalUnsigned ;
            sh:path bacnet:interface-value ],
        [ sh:hasValue "multi-state-output" ;
            sh:path bacnet:object-type ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:time-delay ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfValueSource ;
            sh:path bacnet:value-source-array ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:out-of-service ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-enable ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:OptionalPriorityFilter ;
            sh:path bacnet:auditable-priority-filter ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notification-class ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:number-of-states ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfTimeStamp ;
            sh:path bacnet:command-time-array ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:present-value ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:time-delay-normal ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-detection-enable ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability-evaluation-inhibit ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfCharacterString ;
            sh:path bacnet:event-message-texts ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-algorithm-inhibit ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:acked-transitions ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ValueSource ;
            sh:path bacnet:value-source ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfCharacterString ;
            sh:path bacnet:event-message-texts-config ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:device-type ] ;
    sh:targetClass bacnet:MultiStateOutputObject .

bacnet:MultiStateValueObject a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Multi State Value Object" ;
    bacnet:hasProperty bacnet:Acked_Transitions,
        bacnet:Alarm_Values,
        bacnet:Auditable_Priority_Filter,
        bacnet:Command_Time_Array,
        bacnet:Event_Algorithm_Inhibit,
        bacnet:Event_Algorithm_Inhibit_Ref,
        bacnet:Event_Detection_Enable,
        bacnet:Event_Enable,
        bacnet:Event_Message_Texts,
        bacnet:Event_Message_Texts_Config,
        bacnet:Event_State,
        bacnet:Event_Time_Stamps,
        bacnet:Fault_Values,
        bacnet:Last_Command_Time,
        bacnet:Notification_Class,
        bacnet:Notify_Type,
        bacnet:Number_Of_States,
        bacnet:Out_Of_Service,
        bacnet:Present_Value,
        bacnet:Priority_Array,
        bacnet:Reliability,
        bacnet:Reliability_Evaluation_Inhibit,
        bacnet:Relinquish_Default,
        bacnet:State_Text,
        bacnet:Status_Flags,
        bacnet:Time_Delay,
        bacnet:Time_Delay_Normal,
        bacnet:Value_Source,
        bacnet:Value_Source_Array ;
    rdfs:subClassOf bacnet:StandardObject ;
    sh:property [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfCharacterString ;
            sh:path bacnet:event-message-texts-config ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfTimeStamp ;
            sh:path bacnet:event-time-stamps ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfCharacterString ;
            sh:path bacnet:event-message-texts ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:acked-transitions ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfCharacterString ;
            sh:path bacnet:state-text ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:status-flags ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:event-state ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:OptionalPriorityFilter ;
            sh:path bacnet:auditable-priority-filter ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notification-class ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfTimeStamp ;
            sh:path bacnet:command-time-array ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-algorithm-inhibit ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notify-type ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-enable ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:relinquish-default ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ObjectPropertyReference ;
            sh:path bacnet:event-algorithm-inhibit-ref ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ListOfUnsigned ;
            sh:path bacnet:alarm-values ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:out-of-service ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability-evaluation-inhibit ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-detection-enable ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfValueSource ;
            sh:path bacnet:value-source-array ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:present-value ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:PriorityArray ;
            sh:path bacnet:priority-array ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:TimeStamp ;
            sh:path bacnet:last-command-time ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ValueSource ;
            sh:path bacnet:value-source ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:time-delay-normal ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ListOfUnsigned ;
            sh:path bacnet:fault-values ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:time-delay ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:number-of-states ],
        [ sh:hasValue "multi-state-value" ;
            sh:path bacnet:object-type ] ;
    sh:targetClass bacnet:MultiStateValueObject .

bacnet:NameValue a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Name Value" ;
    sh:property [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:value ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:name ] ;
    sh:targetClass bacnet:NameValue .

bacnet:NameValueCollection a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Name Value Collection" ;
    sh:property [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:node bacnet:SequenceOfNameValue ;
            sh:path bacnet:members ] ;
    sh:targetClass bacnet:NameValueCollection .

bacnet:Network a rdfs:Class,
        sh:NodeShape ;
    rdfs:comment "The class of networks, each network is a collection of distinct nodes differentiated by the nodes address." ;
    sh:property [ sh:class bacnet:Node ;
            sh:description "Relationship between a network and one of its member nodes." ;
            sh:path bacnet:hasNode ] .

bacnet:NetworkPortObject a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Network Port Object" ;
    bacnet:hasProperty bacnet:APDU_Length,
        bacnet:Acked_Transitions,
        bacnet:Auto_Slave_Discovery,
        bacnet:BACnet_IP_Global_Address,
        bacnet:BACnet_IP_Mode,
        bacnet:BACnet_IP_Multicast_Address,
        bacnet:BACnet_IP_Nat_Traversal,
        bacnet:BACnet_IP_UDP_Port,
        bacnet:BACnet_IPv6_Mode,
        bacnet:BACnet_IPv6_Multicast_Address,
        bacnet:BACnet_IPv6_UDP_Port,
        bacnet:BBMD_Accept_FD_Registrations,
        bacnet:BBMD_Broadcast_Distribution_Table,
        bacnet:BBMD_Foreign_Device_Table,
        bacnet:Changes_Pending,
        bacnet:Command,
        bacnet:Event_Detection_Enable,
        bacnet:Event_Enable,
        bacnet:Event_Message_Texts,
        bacnet:Event_Message_Texts_Config,
        bacnet:Event_State,
        bacnet:Event_Time_Stamps,
        bacnet:FD_BBMD_Address,
        bacnet:FD_Subscription_Lifetime,
        bacnet:IP_Address,
        bacnet:IP_DHCP_Enable,
        bacnet:IP_DHCP_Lease_Time,
        bacnet:IP_DHCP_Lease_Time_Remaining,
        bacnet:IP_DHCP_Server,
        bacnet:IP_DNS_Server,
        bacnet:IP_Default_Gateway,
        bacnet:IP_Subnet_Mask,
        bacnet:IPv6_Address,
        bacnet:IPv6_Auto_Addressing_Enabled,
        bacnet:IPv6_DHCP_Lease_Time,
        bacnet:IPv6_DHCP_Lease_Time_Remaining,
        bacnet:IPv6_DHCP_Server,
        bacnet:IPv6_DNS_Server,
        bacnet:IPv6_Default_Gateway,
        bacnet:IPv6_Prefix_Length,
        bacnet:IPv6_Zone_Index,
        bacnet:Link_Speed,
        bacnet:Link_Speed_Autonegotiate,
        bacnet:Link_Speeds,
        bacnet:MAC_Address,
        bacnet:Manual_Slave_Address_Binding,
        bacnet:Max_Info_Frames,
        bacnet:Max_Master,
        bacnet:Network_Interface_Name,
        bacnet:Network_Number,
        bacnet:Network_Number_Quality,
        bacnet:Network_Type,
        bacnet:Notification_Class,
        bacnet:Notify_Type,
        bacnet:Out_Of_Service,
        bacnet:Protocol_Level,
        bacnet:Reference_Port,
        bacnet:Reliability,
        bacnet:Reliability_Evaluation_Inhibit,
        bacnet:Routing_Table,
        bacnet:Slave_Address_Binding,
        bacnet:Slave_Proxy_Enable,
        bacnet:Status_Flags,
        bacnet:Virtual_MAC_Address_Table ;
    rdfs:subClassOf bacnet:StandardObject ;
    sh:property [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notification-class ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ListOfFDTEntry ;
            sh:path bacnet:bbmd-foreign-device-table ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ListOfAddressBinding ;
            sh:path bacnet:slave-address-binding ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:apdu-length ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfCharacterString ;
            sh:path bacnet:event-message-texts ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:reliability-evaluation-inhibit ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-state ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:ip-dhcp-lease-time ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:slave-proxy-enable ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-enable ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:HostNPort ;
            sh:path bacnet:bacnet-ip-global-address ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:maxInclusive "255"^^xsd:nonNegativeInteger ;
            sh:minCount 0 ;
            sh:path bacnet:max-info-frames ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:link-speed-autonegotiate ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfCharacterString ;
            sh:path bacnet:event-message-texts-config ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:maxInclusive "65535"^^xsd:nonNegativeInteger ;
            sh:minCount 0 ;
            sh:path bacnet:bacnet-ip-udp-port ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:ipv6-auto-addressing-enabled ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfOctetString ;
            sh:path bacnet:ip-dns-server ],
        [ sh:datatype xsd:hexBinary ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:ip-dhcp-server ],
        [ sh:datatype xsd:hexBinary ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:ipv6-dns-server ],
        [ sh:hasValue "network-port" ;
            sh:path bacnet:object-type ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:maxInclusive "65535"^^xsd:nonNegativeInteger ;
            sh:minCount 0 ;
            sh:path bacnet:bacnet-ipv6-udp-port ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:maxInclusive "255"^^xsd:nonNegativeInteger ;
            sh:minCount 0 ;
            sh:path bacnet:ipv6-prefix-length ],
        [ sh:datatype xsd:hexBinary ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:ip-subnet-mask ],
        [ sh:datatype xsd:hexBinary ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:ipv6-address ],
        [ sh:datatype xsd:hexBinary ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:ip-default-gateway ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:bacnet-ipv6-mode ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:acked-transitions ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:bacnet-ip-mode ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ListOfRouterEntry ;
            sh:path bacnet:routing-table ],
        [ sh:datatype xsd:hexBinary ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:ipv6-dhcp-server ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ListOfVMACEntry ;
            sh:path bacnet:virtual-mac-address-table ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:network-number-quality ],
        [ sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:link-speed ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:maxInclusive "255"^^xsd:nonNegativeInteger ;
            sh:minCount 0 ;
            sh:path bacnet:max-master ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:protocol-level ],
        [ sh:datatype xsd:hexBinary ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:ip-address ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:ipv6-dhcp-lease-time-remaining ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:network-interface-name ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:ip-dhcp-lease-time-remaining ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:changes-pending ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:reliability ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfTimeStamp ;
            sh:path bacnet:event-time-stamps ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:network-type ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:bbmd-accept-fd-registrations ],
        [ sh:datatype xsd:hexBinary ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:bacnet-ipv6-multicast-address ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ListOfBDTEntry ;
            sh:path bacnet:bbmd-broadcast-distribution-table ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-detection-enable ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:ip-dhcp-enable ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfReal ;
            sh:path bacnet:link-speeds ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:auto-slave-discovery ],
        [ sh:datatype xsd:hexBinary ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:bacnet-ip-multicast-address ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:ipv6-zone-index ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:HostNPort ;
            sh:path bacnet:fd-bbmd-address ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:bacnet-ip-nat-traversal ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ListOfAddressBinding ;
            sh:path bacnet:manual-slave-address-binding ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reference-port ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:command ],
        [ sh:datatype xsd:hexBinary ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:mac-address ],
        [ sh:datatype xsd:hexBinary ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:ipv6-default-gateway ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:out-of-service ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:maxInclusive "65535"^^xsd:nonNegativeInteger ;
            sh:minCount 0 ;
            sh:path bacnet:fd-subscription-lifetime ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:maxInclusive "65535"^^xsd:nonNegativeInteger ;
            sh:minCount 1 ;
            sh:path bacnet:network-number ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notify-type ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:ipv6-dhcp-lease-time ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:status-flags ] ;
    sh:targetClass bacnet:NetworkPortObject .

bacnet:NetworkSecurityObject a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Network Security Object" ;
    bacnet:hasProperty bacnet:Base_Device_Security_Policy,
        bacnet:Distribution_Key_Revision,
        bacnet:Do_Not_Hide,
        bacnet:Key_Sets,
        bacnet:Last_Key_Server,
        bacnet:Network_Access_Security_Policies,
        bacnet:Packet_Reorder_Time,
        bacnet:Security_PDU_Timeout,
        bacnet:Security_Time_Window,
        bacnet:Supported_Security_Algorithms,
        bacnet:Update_Key_Set_Timeout ;
    rdfs:subClassOf bacnet:StandardObject ;
    sh:property [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:packet-reorder-time ],
        [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:node bacnet:ListOfUnsigned ;
            sh:path bacnet:supported-security-algorithms ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:security-pdu-timeout ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:do-not-hide ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:distribution-key-revision ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:base-device-security-policy ],
        [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:node bacnet:ArrayOfNetworkSecurityPolicy ;
            sh:path bacnet:network-access-security-policies ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:security-time-window ],
        [ sh:hasValue "network-security" ;
            sh:path bacnet:object-type ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:update-key-set-timeout ],
        [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:node bacnet:AddressBinding ;
            sh:path bacnet:last-key-server ],
        [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:node bacnet:ArrayOfSecurityKeySet ;
            sh:path bacnet:key-sets ] ;
    sh:targetClass bacnet:NetworkSecurityObject .

bacnet:NetworkSecurityPolicy a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Network Security Policy" ;
    sh:property [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:port-id ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:security-level ] ;
    sh:targetClass bacnet:NetworkSecurityPolicy .

bacnet:Node a rdfs:Class,
        sh:NodeShape ;
    rdfs:comment "A node is a member of a network with an address." ;
    sh:property [ sh:description "Every node has an address that distinguishes it from the other nodes that are members of the same network." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:hasAddress ],
        [ sh:class bacnet:Network ;
            sh:description "Reference from a node to its network, the inverse of bacnet:hasNode." ;
            sh:path bacnet:isNodeOf ],
        [ sh:class bacnet:Port ;
            sh:description "" ;
            sh:path bacnet:portReference ],
        [ sh:class bacnet:Node ;
            sh:description "A network node may be 'stacked' on one or more nodes." ;
            sh:path bacnet:layeredAbove ],
        [ sh:class bacnet:Node ;
            sh:description "A network node may have one or more nodes 'stacked' on top." ;
            sh:path bacnet:layeredBelow ] ;
    sh:targetClass bacnet:Node .

bacnet:NotificationClassObject a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Notification Class Object" ;
    bacnet:hasProperty bacnet:Ack_Required,
        bacnet:Acked_Transitions,
        bacnet:Event_Detection_Enable,
        bacnet:Event_Enable,
        bacnet:Event_Message_Texts,
        bacnet:Event_Message_Texts_Config,
        bacnet:Event_State,
        bacnet:Event_Time_Stamps,
        bacnet:Notification_Class,
        bacnet:Notify_Type,
        bacnet:Priority,
        bacnet:Recipient_List,
        bacnet:Reliability,
        bacnet:Reliability_Evaluation_Inhibit,
        bacnet:Status_Flags ;
    rdfs:subClassOf bacnet:StandardObject ;
    sh:property [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notify-type ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:reliability-evaluation-inhibit ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfCharacterString ;
            sh:path bacnet:event-message-texts ],
        [ sh:hasValue "notification-class" ;
            sh:path bacnet:object-type ],
        [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:node bacnet:ListOfDestination ;
            sh:path bacnet:recipient-list ],
        [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:node bacnet:ArrayOfUnsigned ;
            sh:path bacnet:priority ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-enable ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfTimeStamp ;
            sh:path bacnet:event-time-stamps ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:acked-transitions ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-detection-enable ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfCharacterString ;
            sh:path bacnet:event-message-texts-config ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:ack-required ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:status-flags ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:notification-class ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-state ] ;
    sh:targetClass bacnet:NotificationClassObject .

bacnet:NotificationForwarderObject a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Notification Forwarder Object" ;
    bacnet:hasProperty bacnet:Local_Forwarding_Only,
        bacnet:Out_Of_Service,
        bacnet:Port_Filter,
        bacnet:Process_Identifier_Filter,
        bacnet:Recipient_List,
        bacnet:Reliability,
        bacnet:Reliability_Evaluation_Inhibit,
        bacnet:Status_Flags,
        bacnet:Subscribed_Recipients ;
    rdfs:subClassOf bacnet:StandardObject ;
    sh:property [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:local-forwarding-only ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:out-of-service ],
        [ sh:hasValue "notification-forwarder" ;
            sh:path bacnet:object-type ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:status-flags ],
        [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:node bacnet:ProcessIdSelection ;
            sh:path bacnet:process-identifier-filter ],
        [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:node bacnet:ListOfDestination ;
            sh:path bacnet:recipient-list ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:reliability ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfPortPermission ;
            sh:path bacnet:port-filter ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability-evaluation-inhibit ],
        [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:node bacnet:ListOfEventNotificationSubscription ;
            sh:path bacnet:subscribed-recipients ] ;
    sh:targetClass bacnet:NotificationForwarderObject .

bacnet:NotificationParameters a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Notification Parameters" ;
    sh:targetClass bacnet:NotificationParameters ;
    sh:xone ( [ sh:node bacnet:NotificationParametersChangeOfBitstring ;
                sh:path bacnet:change-of-bitstring ] [ sh:node bacnet:NotificationParametersChangeOfState ;
                sh:path bacnet:change-of-state ] [ sh:node bacnet:NotificationParametersChangeOfValue ;
                sh:path bacnet:change-of-value ] [ sh:node bacnet:NotificationParametersCommandFailure ;
                sh:path bacnet:command-failure ] [ sh:node bacnet:NotificationParametersFloatingLimit ;
                sh:path bacnet:floating-limit ] [ sh:node bacnet:NotificationParametersOutOfRange ;
                sh:path bacnet:out-of-range ] [ sh:node bacnet:NotificationParametersComplexEventType ;
                sh:path bacnet:complex-event-type ] [ sh:node bacnet:NotificationParametersChangeOfLifeSafety ;
                sh:path bacnet:change-of-life-safety ] [ sh:node bacnet:NotificationParametersExtended ;
                sh:path bacnet:extended ] [ sh:node bacnet:NotificationParametersBufferReady ;
                sh:path bacnet:buffer-ready ] [ sh:node bacnet:NotificationParametersUnsignedRange ;
                sh:path bacnet:unsigned-range ] [ sh:node bacnet:NotificationParametersAccessEventType ;
                sh:path bacnet:access-event ] [ sh:node bacnet:NotificationParametersDoubleOutOfRangeType ;
                sh:path bacnet:double-out-of-range ] [ sh:node bacnet:NotificationParametersSignedOutOfRangeType ;
                sh:path bacnet:signed-out-of-range ] [ sh:node bacnet:NotificationParametersUnsignedOutOfRangeType ;
                sh:path bacnet:unsigned-out-of-range ] [ sh:node bacnet:NotificationParametersChangeOfCharacterStringType ;
                sh:path bacnet:change-of-character-string ] [ sh:node bacnet:NotificationParametersChangeOfStatusFlagsType ;
                sh:path bacnet:change-of-status-flags ] [ sh:node bacnet:NotificationParametersChangeOfReliabilityType ;
                sh:path bacnet:change-of-reliability ] ) .

bacnet:NotificationParametersAccessEventType a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Notification Parameters Access Event Type" ;
    sh:property [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:access-event-tag ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:authenication-factor ],
        [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:node bacnet:DeviceObjectReference ;
            sh:path bacnet:access-credential ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:status-flags ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:access-event ],
        [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:node bacnet:TimeStamp ;
            sh:path bacnet:access-event-time ] ;
    sh:targetClass bacnet:NotificationParametersAccessEventType .

bacnet:NotificationParametersBufferReady a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Notification Parameters Buffer Ready" ;
    sh:property [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:previous-notification ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:current-notification ],
        [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:node bacnet:DeviceObjectPropertyReference ;
            sh:path bacnet:buffer-property ] ;
    sh:targetClass bacnet:NotificationParametersBufferReady .

bacnet:NotificationParametersChangeOfBitstring a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Notification Parameters Change Of Bitstring" ;
    sh:property [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:referenced-bitstring ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:status-flags ] ;
    sh:targetClass bacnet:NotificationParametersChangeOfBitstring .

bacnet:NotificationParametersChangeOfCharacterStringType a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Notification Parameters Change Of Character String Type" ;
    sh:property [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:alarm-value ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:status-flags ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:changed-value ] ;
    sh:targetClass bacnet:NotificationParametersChangeOfCharacterStringType .

bacnet:NotificationParametersChangeOfLifeSafety a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Notification Parameters Change Of Life Safety" ;
    sh:property [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:status-flags ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:new-state ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:new-mode ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:operation-expected ] ;
    sh:targetClass bacnet:NotificationParametersChangeOfLifeSafety .

bacnet:NotificationParametersChangeOfReliabilityType a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Notification Parameters Change Of Reliability Type" ;
    sh:property [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:node bacnet:SequenceOfPropertyValue ;
            sh:path bacnet:property-values ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:status-flags ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:reliability ] ;
    sh:targetClass bacnet:NotificationParametersChangeOfReliabilityType .

bacnet:NotificationParametersChangeOfState a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Notification Parameters Change Of State" ;
    sh:property [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:node bacnet:PropertyStates ;
            sh:path bacnet:new-state ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:status-flags ] ;
    sh:targetClass bacnet:NotificationParametersChangeOfState .

bacnet:NotificationParametersChangeOfStatusFlagsType a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Notification Parameters Change Of Status Flags Type" ;
    sh:property [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:present-value ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:referenced-flags ] ;
    sh:targetClass bacnet:NotificationParametersChangeOfStatusFlagsType .

bacnet:NotificationParametersChangeOfValue a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Notification Parameters Change Of Value" ;
    sh:property [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:node bacnet:NotificationParametersChangeOfValueNewValue ;
            sh:path bacnet:new-value ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:status-flags ] ;
    sh:targetClass bacnet:NotificationParametersChangeOfValue .

bacnet:NotificationParametersChangeOfValueNewValue a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Notification Parameters Change Of Value New Value" ;
    sh:targetClass bacnet:NotificationParametersChangeOfValueNewValue ;
    sh:xone ( [ sh:datatype xsd:string ;
                sh:path bacnet:changed-bits ] [ sh:datatype xsd:float ;
                sh:path bacnet:changed-value ] ) .

bacnet:NotificationParametersCommandFailure a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Notification Parameters Command Failure" ;
    sh:property [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:feedback-value ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:status-flags ],
        [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:command-value ] ;
    sh:targetClass bacnet:NotificationParametersCommandFailure .

bacnet:NotificationParametersComplexEventType a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Notification Parameters Complex Event Type" ;
    sh:property [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:node bacnet:PropertyValue ;
            sh:path bacnet:complex-event-type ] ;
    sh:targetClass bacnet:NotificationParametersComplexEventType .

bacnet:NotificationParametersDoubleOutOfRangeType a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Notification Parameters Double Out Of Range Type" ;
    sh:property [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:status-flags ],
        [ sh:datatype xsd:double ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:exceeding-value ],
        [ sh:datatype xsd:double ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:exceeded-limit ],
        [ sh:datatype xsd:double ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:deadband ] ;
    sh:targetClass bacnet:NotificationParametersDoubleOutOfRangeType .

bacnet:NotificationParametersExtended a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Notification Parameters Extended" ;
    sh:property [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:extended-event-type ],
        [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:node bacnet:NotificationParametersExtendedParametersType ;
            sh:path bacnet:parameters ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:vendor-id ] ;
    sh:targetClass bacnet:NotificationParametersExtended .

bacnet:NotificationParametersExtendedParametersType a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Notification Parameters Extended Parameters Type" ;
    sh:targetClass bacnet:NotificationParametersExtendedParametersType ;
    sh:xone ( [ sh:path bacnet:null ;
                sh:value bacnet:NULL ] [ sh:datatype xsd:float ;
                sh:path bacnet:real ] [ sh:datatype xsd:nonNegativeInteger ;
                sh:path bacnet:integer ] [ sh:datatype xsd:boolean ;
                sh:path bacnet:boolean ] [ sh:datatype xsd:double ;
                sh:path bacnet:double ] [ sh:datatype xsd:hexBinary ;
                sh:path bacnet:octet ] [ sh:datatype xsd:string ;
                sh:path bacnet:bitstring ] [ sh:datatype xsd:string ;
                sh:path bacnet:enum ] [ sh:node bacnet:DeviceObjectPropertyValue ;
                sh:path bacnet:property-value ] ) .

bacnet:NotificationParametersFloatingLimit a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Notification Parameters Floating Limit" ;
    sh:property [ sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:reference-value ],
        [ sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:error-limit ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:status-flags ],
        [ sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:setpoint-value ] ;
    sh:targetClass bacnet:NotificationParametersFloatingLimit .

bacnet:NotificationParametersOutOfRange a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Notification Parameters Out Of Range" ;
    sh:property [ sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:exceeded-limit ],
        [ sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:deadband ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:status-flags ],
        [ sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:exceeding-value ] ;
    sh:targetClass bacnet:NotificationParametersOutOfRange .

bacnet:NotificationParametersSignedOutOfRangeType a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Notification Parameters Signed Out Of Range Type" ;
    sh:property [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:status-flags ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:deadband ],
        [ sh:datatype xsd:integer ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:exceeding-value ],
        [ sh:datatype xsd:integer ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:exceeded-limit ] ;
    sh:targetClass bacnet:NotificationParametersSignedOutOfRangeType .

bacnet:NotificationParametersUnsignedOutOfRangeType a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Notification Parameters Unsigned Out Of Range Type" ;
    sh:property [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:exceeded-limit ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:deadband ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:status-flags ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:exceeding-value ] ;
    sh:targetClass bacnet:NotificationParametersUnsignedOutOfRangeType .

bacnet:NotificationParametersUnsignedRange a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Notification Parameters Unsigned Range" ;
    sh:property [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:status-flags ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:exceeding-value ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:exceeding-limit ] ;
    sh:targetClass bacnet:NotificationParametersUnsignedRange .

bacnet:Object a rdfs:Class,
        sh:NodeShape ;
    sh:property [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:minLength 1 ;
            sh:path bacnet:object-name ],
        [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-type ],
        [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:node bacnet:ArrayOfPropertyIdentifier ;
            sh:path bacnet:property-list ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfNameValue ;
            sh:path bacnet:tags ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:profile-location ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:profile-name ],
        [ sh:class bacnet:BACnetDevice ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:objectOf ],
        [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-identifier ;
            sh:pattern "^[A-Za-z0-9-]+:[0-9]+$" ] ;
    sh:targetClass bacnet:Object .

bacnet:ObjectClass a rdfs:Class ;
    rdfs:comment "The class of subclasses of Object." .

bacnet:ObjectPropertyReference a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Object Property Reference" ;
    sh:property [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:property-array-index ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:property-identifier ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-identifier ] ;
    sh:targetClass bacnet:ObjectPropertyReference .

bacnet:ObjectSelector a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Object Selector" ;
    sh:targetClass bacnet:ObjectSelector ;
    sh:xone ( [ sh:path bacnet:none ;
                sh:value bacnet:NULL ] [ sh:datatype xsd:string ;
                sh:path bacnet:object ] [ sh:datatype xsd:string ;
                sh:path bacnet:object-type ] ) .

bacnet:OctetStringValueObject a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Octet String Value Object" ;
    bacnet:hasProperty bacnet:Auditable_Priority_Filter,
        bacnet:Command_Time_Array,
        bacnet:Current_Command_Priority,
        bacnet:Event_State,
        bacnet:Last_Command_Time,
        bacnet:Out_Of_Service,
        bacnet:Present_Value,
        bacnet:Priority_Array,
        bacnet:Reliability,
        bacnet:Relinquish_Default,
        bacnet:Status_Flags,
        bacnet:Value_Source,
        bacnet:Value_Source_Array ;
    rdfs:subClassOf bacnet:StandardObject ;
    sh:property [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfValueSource ;
            sh:path bacnet:value-source-array ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:PriorityArray ;
            sh:path bacnet:priority-array ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-state ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:TimeStamp ;
            sh:path bacnet:last-command-time ],
        [ sh:hasValue "octetstring-value" ;
            sh:path bacnet:object-type ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:out-of-service ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:status-flags ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:present-value ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:OptionalUnsigned ;
            sh:path bacnet:current-command-priority ],
        [ sh:datatype xsd:hexBinary ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:relinquish-default ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfTimeStamp ;
            sh:path bacnet:command-time-array ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:OptionalPriorityFilter ;
            sh:path bacnet:auditable-priority-filter ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ValueSource ;
            sh:path bacnet:value-source ] ;
    sh:targetClass bacnet:OctetStringValueObject .

bacnet:OptionalBinaryPV a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Optional Binary PV" ;
    sh:targetClass bacnet:OptionalBinaryPV ;
    sh:xone ( [ sh:path bacnet:null ;
                sh:value bacnet:NULL ] [ sh:datatype xsd:string ;
                sh:path bacnet:binary-pV ] ) .

bacnet:OptionalCharacterString a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Optional Character String" ;
    sh:targetClass bacnet:OptionalCharacterString ;
    sh:xone ( [ sh:path bacnet:null ;
                sh:value bacnet:NULL ] [ sh:datatype xsd:string ;
                sh:path bacnet:character-string ] ) .

bacnet:OptionalPriorityFilter a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Optional Priority Filter" ;
    sh:targetClass bacnet:OptionalPriorityFilter ;
    sh:xone ( [ sh:path bacnet:null ;
                sh:value bacnet:NULL ] [ sh:datatype xsd:string ;
                sh:path bacnet:filter ] ) .

bacnet:OptionalReal a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Optional Real" ;
    sh:targetClass bacnet:OptionalReal ;
    sh:xone ( [ sh:path bacnet:null ;
                sh:value bacnet:NULL ] [ sh:datatype xsd:float ;
                sh:path bacnet:real ] ) .

bacnet:OptionalUnsigned a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Optional Unsigned" ;
    sh:targetClass bacnet:OptionalUnsigned ;
    sh:xone ( [ sh:path bacnet:null ;
                sh:value bacnet:NULL ] [ sh:datatype xsd:nonNegativeInteger ;
                sh:path bacnet:unsigned ] ) .

bacnet:PTPNetwork a rdfs:Class,
        sh:NodeShape ;
    rdfs:subClassOf bacnet:Network ;
    sh:property [ sh:class bacnet:PTPNode ;
            sh:path bacnet:hasNode ] ;
    sh:targetClass bacnet:PTPNetwork .

bacnet:PTPNode a rdfs:Class,
        sh:NodeShape ;
    rdfs:subClassOf bacnet:Node ;
    sh:property [ sh:maxCount 0 ;
            sh:minCount 0 ;
            sh:path bacnet:hasAddress ] ;
    sh:targetClass bacnet:PTPNode .

bacnet:Port a rdfs:Class,
        sh:NodeShape ;
    rdfs:comment "A port is a connection point used to connect one of more devices together." ;
    sh:targetClass bacnet:Port .

bacnet:PortPermission a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Port Permission" ;
    sh:property [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:enabled ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:port-id ] ;
    sh:targetClass bacnet:PortPermission .

bacnet:PositiveIntegerValueObject a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Positive Integer Value Object" ;
    bacnet:hasProperty bacnet:Acked_Transitions,
        bacnet:Auditable_Priority_Filter,
        bacnet:COV_Increment,
        bacnet:Command_Time_Array,
        bacnet:Current_Command_Priority,
        bacnet:Deadband,
        bacnet:Event_Algorithm_Inhibit,
        bacnet:Event_Algorithm_Inhibit_Ref,
        bacnet:Event_Detection_Enable,
        bacnet:Event_Enable,
        bacnet:Event_Message_Texts,
        bacnet:Event_Message_Texts_Config,
        bacnet:Event_State,
        bacnet:Event_Time_Stamps,
        bacnet:Fault_High_Limit,
        bacnet:Fault_Low_Limit,
        bacnet:High_Limit,
        bacnet:Last_Command_Time,
        bacnet:Limit_Enable,
        bacnet:Low_Limit,
        bacnet:Max_Pres_Value,
        bacnet:Min_Pres_Value,
        bacnet:Notification_Class,
        bacnet:Notify_Type,
        bacnet:Out_Of_Service,
        bacnet:Present_Value,
        bacnet:Priority_Array,
        bacnet:Reliability,
        bacnet:Reliability_Evaluation_Inhibit,
        bacnet:Relinquish_Default,
        bacnet:Resolution,
        bacnet:Status_Flags,
        bacnet:Time_Delay,
        bacnet:Time_Delay_Normal,
        bacnet:Units,
        bacnet:Value_Source,
        bacnet:Value_Source_Array ;
    rdfs:subClassOf bacnet:StandardObject ;
    sh:property [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:fault-high-limit ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:relinquish-default ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-algorithm-inhibit ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-enable ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfTimeStamp ;
            sh:path bacnet:command-time-array ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:units ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:out-of-service ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:max-pres-value ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notify-type ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:min-pres-value ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:status-flags ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:OptionalUnsigned ;
            sh:path bacnet:current-command-priority ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:time-delay ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfValueSource ;
            sh:path bacnet:value-source-array ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:high-limit ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfCharacterString ;
            sh:path bacnet:event-message-texts ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:acked-transitions ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:limit-enable ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-detection-enable ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ValueSource ;
            sh:path bacnet:value-source ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:time-delay-normal ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:cov-increment ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:resolution ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:OptionalPriorityFilter ;
            sh:path bacnet:auditable-priority-filter ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability-evaluation-inhibit ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:TimeStamp ;
            sh:path bacnet:last-command-time ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:present-value ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfTimeStamp ;
            sh:path bacnet:event-time-stamps ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notification-class ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfCharacterString ;
            sh:path bacnet:event-message-texts-config ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:fault-low-limit ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-state ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ObjectPropertyReference ;
            sh:path bacnet:event-algorithm-inhibit-ref ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:low-limit ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:deadband ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:PriorityArray ;
            sh:path bacnet:priority-array ],
        [ sh:hasValue "positive-integer-value" ;
            sh:path bacnet:object-type ] ;
    sh:targetClass bacnet:PositiveIntegerValueObject .

bacnet:Prescale a bacnet:Property,
        rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Prescale" ;
    bacnet:propertyOf bacnet:AccumulatorObject ;
    sh:property [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:multiplier ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:modulo-divide ] ;
    sh:targetClass bacnet:Prescale .

bacnet:PriorityValue a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Priority Value" ;
    sh:targetClass bacnet:PriorityValue ;
    sh:xone ( [ sh:path bacnet:null ;
                sh:value bacnet:NULL ] [ sh:datatype xsd:float ;
                sh:path bacnet:real ] [ sh:datatype xsd:string ;
                sh:path bacnet:enumerated ] [ sh:datatype xsd:nonNegativeInteger ;
                sh:path bacnet:unsigned ] [ sh:datatype xsd:boolean ;
                sh:path bacnet:boolean ] [ sh:datatype xsd:integer ;
                sh:path bacnet:integer ] [ sh:datatype xsd:double ;
                sh:path bacnet:double ] [ sh:datatype xsd:time ;
                sh:path bacnet:time ] [ sh:datatype xsd:string ;
                sh:path bacnet:character-string ] [ sh:datatype xsd:hexBinary ;
                sh:path bacnet:octet-string ] [ sh:datatype xsd:string ;
                sh:path bacnet:bit-string ] [ sh:datatype xsd:date ;
                sh:path bacnet:date ] [ sh:datatype xsd:string ;
                sh:path bacnet:objectidentifier ] [ sh:path bacnet:constructed-value ] [ sh:datatype xsd:dateTime ;
                sh:path bacnet:datetime ] ) .

bacnet:ProcessIdSelection a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Process Id Selection" ;
    sh:targetClass bacnet:ProcessIdSelection ;
    sh:xone ( [ sh:datatype xsd:nonNegativeInteger ;
                sh:path bacnet:process-identifier ] [ sh:path bacnet:null-value ;
                sh:value bacnet:NULL ] ) .

bacnet:ProgramObject a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Program Object" ;
    bacnet:hasProperty bacnet:Acked_Transitions,
        bacnet:Description_Of_Halt,
        bacnet:Event_Detection_Enable,
        bacnet:Event_Enable,
        bacnet:Event_Message_Texts,
        bacnet:Event_Message_Texts_Config,
        bacnet:Event_Time_Stamps,
        bacnet:Instance_Of,
        bacnet:Notification_Class,
        bacnet:Notify_Type,
        bacnet:Out_Of_Service,
        bacnet:Program_Change,
        bacnet:Program_Location,
        bacnet:Program_State,
        bacnet:Reason_For_Halt,
        bacnet:Reliability,
        bacnet:Reliability_Evaluation_Inhibit,
        bacnet:Status_Flags ;
    rdfs:subClassOf bacnet:StandardObject ;
    sh:property [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:acked-transitions ],
        [ sh:hasValue "program" ;
            sh:path bacnet:object-type ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:instance-of ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-detection-enable ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:program-state ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:program-change ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:program-location ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reason-for-halt ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfTimeStamp ;
            sh:path bacnet:event-time-stamps ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfCharacterString ;
            sh:path bacnet:event-message-texts ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notification-class ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:out-of-service ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notify-type ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfCharacterString ;
            sh:path bacnet:event-message-texts-config ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:description-of-halt ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:status-flags ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-enable ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability-evaluation-inhibit ] ;
    sh:targetClass bacnet:ProgramObject .

bacnet:PropertyAccessResult a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Property Access Result" ;
    sh:property [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:device-identifier ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-identifier ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:property-identifier ],
        [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:node bacnet:PropertyAccessResultAccessResult ;
            sh:path bacnet:access-result ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:property-array-index ] ;
    sh:targetClass bacnet:PropertyAccessResult .

bacnet:PropertyAccessResultAccessResult a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Property Access Result Access Result" ;
    sh:targetClass bacnet:PropertyAccessResultAccessResult ;
    sh:xone ( [ sh:path bacnet:property-value ] [ sh:node bacnet:ErrorType ;
                sh:path bacnet:property-access-error ] ) .

bacnet:PropertyReference a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Property Reference" ;
    sh:property [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:property-array-index ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:property-identifier ] ;
    sh:targetClass bacnet:PropertyReference .

bacnet:PropertyStates a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Property States" ;
    sh:targetClass bacnet:PropertyStates ;
    sh:xone ( [ sh:datatype xsd:boolean ;
                sh:path bacnet:boolean-value ] [ sh:datatype xsd:string ;
                sh:path bacnet:binary-value ] [ sh:datatype xsd:string ;
                sh:path bacnet:event-type ] [ sh:datatype xsd:string ;
                sh:path bacnet:polarity ] [ sh:datatype xsd:string ;
                sh:path bacnet:program-change ] [ sh:datatype xsd:string ;
                sh:path bacnet:program-state ] [ sh:datatype xsd:string ;
                sh:path bacnet:reason-for-halt ] [ sh:datatype xsd:string ;
                sh:path bacnet:reliability ] [ sh:datatype xsd:string ;
                sh:path bacnet:state ] [ sh:datatype xsd:string ;
                sh:path bacnet:system-status ] [ sh:datatype xsd:string ;
                sh:path bacnet:units ] [ sh:datatype xsd:nonNegativeInteger ;
                sh:path bacnet:unsigned-value ] [ sh:datatype xsd:string ;
                sh:path bacnet:life-safety-mode ] [ sh:datatype xsd:string ;
                sh:path bacnet:life-safety-state ] [ sh:datatype xsd:string ;
                sh:path bacnet:restart-reason ] [ sh:datatype xsd:string ;
                sh:path bacnet:door-alarm-state ] [ sh:datatype xsd:string ;
                sh:path bacnet:action ] [ sh:datatype xsd:string ;
                sh:path bacnet:door-secured-status ] [ sh:datatype xsd:string ;
                sh:path bacnet:door-status ] [ sh:datatype xsd:string ;
                sh:path bacnet:door-value ] [ sh:datatype xsd:string ;
                sh:path bacnet:file-access-method ] [ sh:datatype xsd:string ;
                sh:path bacnet:lock-status ] [ sh:datatype xsd:string ;
                sh:path bacnet:life-safety-operation ] [ sh:datatype xsd:string ;
                sh:path bacnet:maintenance ] [ sh:datatype xsd:string ;
                sh:path bacnet:node-type ] [ sh:datatype xsd:string ;
                sh:path bacnet:notify-type ] [ sh:datatype xsd:string ;
                sh:path bacnet:security-level ] [ sh:datatype xsd:string ;
                sh:path bacnet:shed-state ] [ sh:datatype xsd:string ;
                sh:path bacnet:silenced-state ] [ sh:datatype xsd:string ;
                sh:path bacnet:access-event ] [ sh:datatype xsd:string ;
                sh:path bacnet:zone-occupancy-state ] [ sh:datatype xsd:string ;
                sh:path bacnet:access-credential-disable-reason ] [ sh:datatype xsd:string ;
                sh:path bacnet:access-credential-disable ] [ sh:datatype xsd:string ;
                sh:path bacnet:authentication-status ] [ sh:datatype xsd:string ;
                sh:path bacnet:backup-state ] [ sh:datatype xsd:string ;
                sh:path bacnet:write-status ] [ sh:datatype xsd:string ;
                sh:path bacnet:lighting-in-progress ] [ sh:datatype xsd:string ;
                sh:path bacnet:lighting-operation ] [ sh:datatype xsd:string ;
                sh:path bacnet:lighting-transition ] ) .

bacnet:PropertyValue a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Property Value" ;
    sh:property [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:property-array-index ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:priority ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:property-identifier ],
        [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:value ] ;
    sh:targetClass bacnet:PropertyValue .

bacnet:ProprietaryBitString a rdfs:Class,
        sh:NodeShape ;
    rdfs:comment "A bit string type defined by a vendor." ;
    rdfs:subClassOf bacnet:BitString ;
    sh:property [ sh:class bacnet:Vendor ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:bitVendor ] .

bacnet:ProprietaryEnumerated a rdfs:Class,
        sh:NodeShape ;
    rdfs:comment "An enumerated type defined by a vendor." ;
    rdfs:subClassOf bacnet:Enumerated ;
    sh:property [ sh:class bacnet:ProprietaryEnumeration ;
            sh:path bacnet:hasMember ],
        [ sh:class bacnet:Vendor ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:enumVendor ] .

bacnet:ProprietaryEnumeration a rdfs:Class,
        sh:NodeShape ;
    rdfs:comment "An enumeration value defined by a vendor." ;
    rdfs:subClassOf bacnet:Enumeration ;
    sh:property [ sh:class bacnet:Vendor ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:enumVendor ] ;
    sh:targetClass bacnet:ProprietaryEnumeration .

bacnet:ProprietaryNetwork a rdfs:Class,
        sh:NodeShape ;
    rdfs:subClassOf bacnet:Network ;
    sh:property [ sh:class bacnet:ProprietaryNode ;
            sh:path bacnet:hasNode ] ;
    sh:targetClass bacnet:ProprietaryNetwork .

bacnet:ProprietaryNode a rdfs:Class,
        sh:NodeShape ;
    rdfs:subClassOf bacnet:Node ;
    sh:property [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:hasAddress ] ;
    sh:targetClass bacnet:ProprietaryNode .

bacnet:ProprietaryObject a rdfs:Class ;
    rdfs:subClassOf bacnet:Object ;
    sh:property [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:managedByVendor ] .

bacnet:PulseConverterObject a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Pulse Converter Object" ;
    bacnet:hasProperty bacnet:Acked_Transitions,
        bacnet:Adjust_Value,
        bacnet:COV_Increment,
        bacnet:COV_Period,
        bacnet:Count,
        bacnet:Count_Before_Change,
        bacnet:Count_Change_Time,
        bacnet:Deadband,
        bacnet:Event_Algorithm_Inhibit,
        bacnet:Event_Algorithm_Inhibit_Ref,
        bacnet:Event_Detection_Enable,
        bacnet:Event_Enable,
        bacnet:Event_Message_Texts,
        bacnet:Event_Message_Texts_Config,
        bacnet:Event_State,
        bacnet:Event_Time_Stamps,
        bacnet:High_Limit,
        bacnet:Input_Reference,
        bacnet:Limit_Enable,
        bacnet:Low_Limit,
        bacnet:Notification_Class,
        bacnet:Notify_Type,
        bacnet:Out_Of_Service,
        bacnet:Present_Value,
        bacnet:Reliability,
        bacnet:Reliability_Evaluation_Inhibit,
        bacnet:Scale_Factor,
        bacnet:Status_Flags,
        bacnet:Time_Delay,
        bacnet:Time_Delay_Normal,
        bacnet:Units,
        bacnet:Update_Time ;
    rdfs:subClassOf bacnet:StandardObject ;
    sh:property [ sh:datatype xsd:dateTime ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:count-change-time ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-algorithm-inhibit ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfCharacterString ;
            sh:path bacnet:event-message-texts-config ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:status-flags ],
        [ sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:high-limit ],
        [ sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:deadband ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-enable ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ObjectPropertyReference ;
            sh:path bacnet:input-reference ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:time-delay-normal ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:count ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:acked-transitions ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:limit-enable ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-detection-enable ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability-evaluation-inhibit ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notify-type ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:event-state ],
        [ sh:hasValue "pulse-converter" ;
            sh:path bacnet:object-type ],
        [ sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:low-limit ],
        [ sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:scale-factor ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:cov-period ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:count-before-change ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfCharacterString ;
            sh:path bacnet:event-message-texts ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:out-of-service ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfTimeStamp ;
            sh:path bacnet:event-time-stamps ],
        [ sh:datatype xsd:dateTime ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:update-time ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notification-class ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:units ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ObjectPropertyReference ;
            sh:path bacnet:event-algorithm-inhibit-ref ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:time-delay ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability ],
        [ sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:present-value ],
        [ sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:cov-increment ],
        [ sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:adjust-value ] ;
    sh:targetClass bacnet:PulseConverterObject .

bacnet:ReadAccessResult a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Read Access Result" ;
    sh:property [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-identifier ],
        [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:node bacnet:SequenceOfReadAccessResultElement ;
            sh:path bacnet:list-of-results ] ;
    sh:targetClass bacnet:ReadAccessResult .

bacnet:ReadAccessResultElement a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Read Access Result Element" ;
    sh:property [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:property-identifier ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:property-array-index ],
        [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:node bacnet:ReadAccessResultElementChoice ;
            sh:path bacnet:read-result ] ;
    sh:targetClass bacnet:ReadAccessResultElement .

bacnet:ReadAccessResultElementChoice a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Read Access Result Element Choice" ;
    sh:targetClass bacnet:ReadAccessResultElementChoice ;
    sh:xone ( [ sh:path bacnet:property-value ] [ sh:node bacnet:ErrorType ;
                sh:path bacnet:property-access-error ] ) .

bacnet:ReadAccessSpecification a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Read Access Specification" ;
    sh:property [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:node bacnet:SequenceOfPropertyReference ;
            sh:path bacnet:list-of-property-references ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:object-identifier ] ;
    sh:targetClass bacnet:ReadAccessSpecification .

bacnet:Recipient a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Recipient" ;
    sh:targetClass bacnet:Recipient ;
    sh:xone ( [ sh:datatype xsd:string ;
                sh:path bacnet:device ] [ sh:node bacnet:DeviceAddress ;
                sh:path bacnet:address ] ) .

bacnet:RecipientProcess a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Recipient Process" ;
    sh:property [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:process-identifier ],
        [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:node bacnet:Recipient ;
            sh:path bacnet:recipient ] ;
    sh:targetClass bacnet:RecipientProcess .

bacnet:Repeater a rdfs:Class ;
    rdfs:comment "A device that connects two or more physical segments at the physical layer." ;
    rdfs:subClassOf bacnet:Device .

bacnet:Router a rdfs:Class ;
    rdfs:comment "A device that connects two or more similar networks to form an intranetwork" ;
    rdfs:subClassOf bacnet:Device .

bacnet:RouterEntry a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Router Entry" ;
    sh:property [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:status ],
        [ sh:datatype xsd:hexBinary ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:mac-address ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:maxInclusive "65535"^^xsd:nonNegativeInteger ;
            sh:minCount 1 ;
            sh:path bacnet:network-number ] ;
    sh:targetClass bacnet:RouterEntry .

bacnet:Scale a bacnet:Property,
        rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Scale" ;
    bacnet:propertyOf bacnet:AccumulatorObject ;
    sh:targetClass bacnet:Scale ;
    sh:xone ( [ sh:datatype xsd:float ;
                sh:path bacnet:float-scale ] [ sh:datatype xsd:integer ;
                sh:path bacnet:integer-scale ] ) .

bacnet:ScheduleObject a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Schedule Object" ;
    bacnet:hasProperty bacnet:Acked_Transitions,
        bacnet:Effective_Period,
        bacnet:Event_Detection_Enable,
        bacnet:Event_Enable,
        bacnet:Event_Message_Texts,
        bacnet:Event_Message_Texts_Config,
        bacnet:Event_State,
        bacnet:Event_Time_Stamps,
        bacnet:Exception_Schedule,
        bacnet:List_Of_Object_Property_References,
        bacnet:Notification_Class,
        bacnet:Notify_Type,
        bacnet:Out_Of_Service,
        bacnet:Present_Value,
        bacnet:Priority_For_Writing,
        bacnet:Reliability,
        bacnet:Reliability_Evaluation_Inhibit,
        bacnet:Schedule_Default,
        bacnet:Status_Flags,
        bacnet:Weekly_Schedule ;
    rdfs:subClassOf bacnet:StandardObject ;
    sh:property [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-detection-enable ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfDailySchedule ;
            sh:path bacnet:weekly-schedule ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:acked-transitions ],
        [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:node bacnet:ListOfDeviceObjectPropertyReference ;
            sh:path bacnet:list-of-object-property-references ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notify-type ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfCharacterString ;
            sh:path bacnet:event-message-texts-config ],
        [ sh:hasValue "schedule" ;
            sh:path bacnet:object-type ],
        [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:present-value ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability-evaluation-inhibit ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:priority-for-writing ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notification-class ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:reliability ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfTimeStamp ;
            sh:path bacnet:event-time-stamps ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:status-flags ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfSpecialEvent ;
            sh:path bacnet:exception-schedule ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-enable ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:event-state ],
        [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:schedule-default ],
        [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:node bacnet:DateRange ;
            sh:path bacnet:effective-period ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:out-of-service ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfCharacterString ;
            sh:path bacnet:event-message-texts ] ;
    sh:targetClass bacnet:ScheduleObject .

bacnet:SecureConnectNetwork a rdfs:Class,
        sh:NodeShape ;
    rdfs:subClassOf bacnet:Network ;
    sh:property [ sh:class bacnet:SecureConnectNode ;
            sh:path bacnet:hasNode ] ;
    sh:targetClass bacnet:SecureConnectNetwork .

bacnet:SecureConnectNode a rdfs:Class,
        sh:NodeShape ;
    rdfs:subClassOf bacnet:Node ;
    sh:property [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:hasAddress ] ;
    sh:targetClass bacnet:SecureConnectNode .

bacnet:SecurityKeySet a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Security Key Set" ;
    sh:property [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:key-revision ],
        [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:node bacnet:SequenceOfKeyIdentifier ;
            sh:path bacnet:key-ids ],
        [ sh:datatype xsd:dateTime ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:expiration-time ],
        [ sh:datatype xsd:dateTime ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:activation-time ] ;
    sh:targetClass bacnet:SecurityKeySet .

bacnet:SerialNetwork a rdfs:Class,
        sh:NodeShape ;
    rdfs:subClassOf bacnet:Network ;
    sh:property [ sh:class bacnet:SerialNode ;
            sh:path bacnet:hasNode ] ;
    sh:targetClass bacnet:SerialNetwork .

bacnet:SerialNode a rdfs:Class,
        sh:NodeShape ;
    rdfs:subClassOf bacnet:Node ;
    sh:property [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:hasAddress ] ;
    sh:targetClass bacnet:SerialNode .

bacnet:SetpointReference a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Setpoint Reference" ;
    sh:property [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ObjectPropertyReference ;
            sh:path bacnet:setpoint-reference ] ;
    sh:targetClass bacnet:SetpointReference .

bacnet:ShedLevel a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Shed Level" ;
    sh:targetClass bacnet:ShedLevel ;
    sh:xone ( [ sh:datatype xsd:nonNegativeInteger ;
                sh:path bacnet:percent ] [ sh:datatype xsd:nonNegativeInteger ;
                sh:path bacnet:level ] [ sh:datatype xsd:float ;
                sh:path bacnet:amount ] ) .

bacnet:SpecialEvent a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Special Event" ;
    sh:property [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:node bacnet:SpecialEventPeriod ;
            sh:path bacnet:period ],
        [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:node bacnet:SequenceOfTimeValue ;
            sh:path bacnet:list-of-time-values ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:event-priority ] ;
    sh:targetClass bacnet:SpecialEvent .

bacnet:SpecialEventPeriod a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Special Event Period" ;
    sh:targetClass bacnet:SpecialEventPeriod ;
    sh:xone ( [ sh:node bacnet:CalendarEntry ;
                sh:path bacnet:calendar-entry ] [ sh:datatype xsd:string ;
                sh:path bacnet:calendar-reference ] ) .

bacnet:StageLimitValue a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Stage Limit Value" ;
    sh:property [ sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:deadband ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:values ],
        [ sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:limit ] ;
    sh:targetClass bacnet:StageLimitValue .

bacnet:StagingObject a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Staging Object" ;
    bacnet:hasProperty bacnet:Acked_Transitions,
        bacnet:COV_Increment,
        bacnet:Default_Present_Value,
        bacnet:Event_Detection_Enable,
        bacnet:Event_Enable,
        bacnet:Event_Message_Texts,
        bacnet:Event_Message_Texts_Config,
        bacnet:Event_State,
        bacnet:Event_Time_Stamps,
        bacnet:Max_Pres_Value,
        bacnet:Min_Pres_Value,
        bacnet:Notification_Class,
        bacnet:Notify_Type,
        bacnet:Out_Of_Service,
        bacnet:Present_Stage,
        bacnet:Present_Value,
        bacnet:Priority_For_Writing,
        bacnet:Reliability,
        bacnet:Reliability_Evaluation_Inhibit,
        bacnet:Stage_Names,
        bacnet:Stages,
        bacnet:Status_Flags,
        bacnet:Target_References,
        bacnet:Units,
        bacnet:Value_Source ;
    rdfs:subClassOf bacnet:StandardObject ;
    sh:property [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:status-flags ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:units ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notification-class ],
        [ sh:hasValue "staging" ;
            sh:path bacnet:object-type ],
        [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:node bacnet:ArrayOfDeviceObjectReference ;
            sh:path bacnet:target-references ],
        [ sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:max-pres-value ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-detection-enable ],
        [ sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:min-pres-value ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:event-state ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:priority-for-writing ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:acked-transitions ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability-evaluation-inhibit ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfCharacterString ;
            sh:path bacnet:stage-names ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfCharacterString ;
            sh:path bacnet:event-message-texts-config ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-enable ],
        [ sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:present-value ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notify-type ],
        [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:node bacnet:ArrayOfStageLimitValue ;
            sh:path bacnet:stages ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:out-of-service ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:present-stage ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ValueSource ;
            sh:path bacnet:value-source ],
        [ sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:cov-increment ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfCharacterString ;
            sh:path bacnet:event-message-texts ],
        [ sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:default-present-value ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfTimeStamp ;
            sh:path bacnet:event-time-stamps ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability ] ;
    sh:targetClass bacnet:StagingObject .

bacnet:StandardBitString a rdfs:Class ;
    rdfs:comment "The class of bit strings defined in the standard." ;
    rdfs:subClassOf bacnet:BitString .

bacnet:StandardEnumerated a rdfs:Class ;
    rdfs:comment "The class of enumerated types defined in the standard." ;
    rdfs:subClassOf bacnet:Enumerated ;
    sh:property [ sh:class bacnet:StandardEnumeration ;
            sh:path bacnet:hasMember ] .

bacnet:StandardEnumeration a rdfs:Class,
        sh:NodeShape ;
    rdfs:comment "An enumeration value defined in the standard." ;
    rdfs:subClassOf bacnet:Enumeration ;
    sh:targetClass bacnet:StandardEnumeration .

bacnet:StandardObject a rdfs:Class ;
    rdfs:subClassOf bacnet:Object .

bacnet:StructuredViewObject a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Structured View Object" ;
    bacnet:hasProperty bacnet:Default_Subordinate_Relationship,
        bacnet:Node_Subtype,
        bacnet:Node_Type,
        bacnet:Represents,
        bacnet:Subordinate_Annotations,
        bacnet:Subordinate_List,
        bacnet:Subordinate_Node_Types,
        bacnet:Subordinate_Relationships,
        bacnet:Subordinate_Tags ;
    rdfs:subClassOf bacnet:StandardObject ;
    sh:property [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:default-subordinate-relationship ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfCharacterString ;
            sh:path bacnet:subordinate-annotations ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfNameValueCollection ;
            sh:path bacnet:subordinate-tags ],
        [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:node bacnet:ArrayOfDeviceObjectReference ;
            sh:path bacnet:subordinate-list ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:node-type ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:DeviceObjectReference ;
            sh:path bacnet:represents ],
        [ sh:hasValue "structured-view" ;
            sh:path bacnet:object-type ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:node-subtype ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfRelationship ;
            sh:path bacnet:subordinate-relationships ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfNodeType ;
            sh:path bacnet:subordinate-node-types ] ;
    sh:targetClass bacnet:StructuredViewObject .

bacnet:TimePatternValueObject a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Time Pattern Value Object" ;
    bacnet:hasProperty bacnet:Acked_Transitions,
        bacnet:Auditable_Priority_Filter,
        bacnet:Command_Time_Array,
        bacnet:Current_Command_Priority,
        bacnet:Event_Detection_Enable,
        bacnet:Event_Enable,
        bacnet:Event_Message_Texts,
        bacnet:Event_Message_Texts_Config,
        bacnet:Event_State,
        bacnet:Event_Time_Stamps,
        bacnet:Last_Command_Time,
        bacnet:Notification_Class,
        bacnet:Notify_Type,
        bacnet:Out_Of_Service,
        bacnet:Present_Value,
        bacnet:Priority_Array,
        bacnet:Reliability,
        bacnet:Reliability_Evaluation_Inhibit,
        bacnet:Relinquish_Default,
        bacnet:Status_Flags,
        bacnet:Value_Source,
        bacnet:Value_Source_Array ;
    rdfs:subClassOf bacnet:StandardObject ;
    sh:property [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfCharacterString ;
            sh:path bacnet:event-message-texts-config ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-enable ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfTimeStamp ;
            sh:path bacnet:command-time-array ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ValueSource ;
            sh:path bacnet:value-source ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability-evaluation-inhibit ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:acked-transitions ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-detection-enable ],
        [ sh:datatype xsd:time ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:present-value ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:OptionalUnsigned ;
            sh:path bacnet:current-command-priority ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-state ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:status-flags ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:OptionalPriorityFilter ;
            sh:path bacnet:auditable-priority-filter ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfTimeStamp ;
            sh:path bacnet:event-time-stamps ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notification-class ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:PriorityArray ;
            sh:path bacnet:priority-array ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:out-of-service ],
        [ sh:hasValue "time-pattern-value" ;
            sh:path bacnet:object-type ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfValueSource ;
            sh:path bacnet:value-source-array ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfCharacterString ;
            sh:path bacnet:event-message-texts ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notify-type ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:TimeStamp ;
            sh:path bacnet:last-command-time ],
        [ sh:datatype xsd:time ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:relinquish-default ] ;
    sh:targetClass bacnet:TimePatternValueObject .

bacnet:TimeStamp a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Time Stamp" ;
    sh:targetClass bacnet:TimeStamp ;
    sh:xone ( [ sh:datatype xsd:time ;
                sh:path bacnet:time ] [ sh:datatype xsd:nonNegativeInteger ;
                sh:path bacnet:sequence-number ] [ sh:datatype xsd:dateTime ;
                sh:path bacnet:date-time ] ) .

bacnet:TimeValue a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Time Value" ;
    sh:property [ sh:datatype xsd:time ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:time ],
        [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:value ] ;
    sh:targetClass bacnet:TimeValue .

bacnet:TimeValueObject a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Time Value Object" ;
    bacnet:hasProperty bacnet:Acked_Transitions,
        bacnet:Auditable_Priority_Filter,
        bacnet:Command_Time_Array,
        bacnet:Current_Command_Priority,
        bacnet:Event_Detection_Enable,
        bacnet:Event_Enable,
        bacnet:Event_Message_Texts,
        bacnet:Event_Message_Texts_Config,
        bacnet:Event_State,
        bacnet:Event_Time_Stamps,
        bacnet:Last_Command_Time,
        bacnet:Notification_Class,
        bacnet:Notify_Type,
        bacnet:Out_Of_Service,
        bacnet:Present_Value,
        bacnet:Priority_Array,
        bacnet:Reliability,
        bacnet:Relinquish_Default,
        bacnet:Status_Flags,
        bacnet:Value_Source,
        bacnet:Value_Source_Array ;
    rdfs:subClassOf bacnet:StandardObject ;
    sh:property [ sh:datatype xsd:time ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:present-value ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:OptionalPriorityFilter ;
            sh:path bacnet:auditable-priority-filter ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfTimeStamp ;
            sh:path bacnet:command-time-array ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfValueSource ;
            sh:path bacnet:value-source-array ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ValueSource ;
            sh:path bacnet:value-source ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-state ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfTimeStamp ;
            sh:path bacnet:event-time-stamps ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:acked-transitions ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notification-class ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-enable ],
        [ sh:datatype xsd:time ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:relinquish-default ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-detection-enable ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:out-of-service ],
        [ sh:hasValue "time-value" ;
            sh:path bacnet:object-type ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:TimeStamp ;
            sh:path bacnet:last-command-time ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notify-type ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfCharacterString ;
            sh:path bacnet:event-message-texts-config ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfCharacterString ;
            sh:path bacnet:event-message-texts ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:status-flags ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:OptionalUnsigned ;
            sh:path bacnet:current-command-priority ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:PriorityArray ;
            sh:path bacnet:priority-array ] ;
    sh:targetClass bacnet:TimeValueObject .

bacnet:TimerObject a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Timer Object" ;
    bacnet:hasProperty bacnet:Acked_Transitions,
        bacnet:Alarm_Values,
        bacnet:Default_Timeout,
        bacnet:Event_Algorithm_Inhibit,
        bacnet:Event_Algorithm_Inhibit_Ref,
        bacnet:Event_Detection_Enable,
        bacnet:Event_Enable,
        bacnet:Event_Message_Texts,
        bacnet:Event_Message_Texts_Config,
        bacnet:Event_State,
        bacnet:Event_Time_Stamps,
        bacnet:Expiration_Time,
        bacnet:Initial_Timeout,
        bacnet:Last_State_Change,
        bacnet:List_Of_Object_Property_References,
        bacnet:Max_Pres_Value,
        bacnet:Min_Pres_Value,
        bacnet:Notification_Class,
        bacnet:Notify_Type,
        bacnet:Out_Of_Service,
        bacnet:Present_Value,
        bacnet:Priority_For_Writing,
        bacnet:Reliability,
        bacnet:Reliability_Evaluation_Inhibit,
        bacnet:Resolution,
        bacnet:State_Change_Values,
        bacnet:Status_Flags,
        bacnet:Time_Delay,
        bacnet:Time_Delay_Normal,
        bacnet:Timer_Running,
        bacnet:Timer_State,
        bacnet:Update_Time ;
    rdfs:subClassOf bacnet:StandardObject ;
    sh:property [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ListOfDeviceObjectPropertyReference ;
            sh:path bacnet:list-of-object-property-references ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-enable ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:timer-running ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ObjectPropertyReference ;
            sh:path bacnet:event-algorithm-inhibit-ref ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability-evaluation-inhibit ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-detection-enable ],
        [ sh:datatype xsd:dateTime ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:expiration-time ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-state ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:out-of-service ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:timer-state ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:resolution ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notify-type ],
        [ sh:hasValue "timer" ;
            sh:path bacnet:object-type ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:status-flags ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:max-pres-value ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:present-value ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfCharacterString ;
            sh:path bacnet:event-message-texts ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfTimeStamp ;
            sh:path bacnet:event-time-stamps ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:default-timeout ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:min-pres-value ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notification-class ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ListOfTimerState ;
            sh:path bacnet:alarm-values ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:initial-timeout ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:time-delay-normal ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:time-delay ],
        [ sh:datatype xsd:dateTime ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:update-time ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfTimerStateChangeValue ;
            sh:path bacnet:state-change-values ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-algorithm-inhibit ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfCharacterString ;
            sh:path bacnet:event-message-texts-config ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:acked-transitions ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:last-state-change ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:priority-for-writing ] ;
    sh:targetClass bacnet:TimerObject .

bacnet:TimerStateChangeValue a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Timer State Change Value" ;
    sh:targetClass bacnet:TimerStateChangeValue ;
    sh:xone ( [ sh:path bacnet:null ;
                sh:value bacnet:NULL ] [ sh:datatype xsd:boolean ;
                sh:path bacnet:boolean ] [ sh:datatype xsd:nonNegativeInteger ;
                sh:path bacnet:unsigned ] [ sh:datatype xsd:integer ;
                sh:path bacnet:integer ] [ sh:datatype xsd:float ;
                sh:path bacnet:real ] [ sh:datatype xsd:double ;
                sh:path bacnet:double ] [ sh:datatype xsd:hexBinary ;
                sh:path bacnet:octetstring ] [ sh:datatype xsd:string ;
                sh:path bacnet:characterstring ] [ sh:datatype xsd:string ;
                sh:path bacnet:bitstring ] [ sh:datatype xsd:string ;
                sh:path bacnet:enumerated ] [ sh:datatype xsd:date ;
                sh:path bacnet:date ] [ sh:datatype xsd:time ;
                sh:path bacnet:time ] [ sh:datatype xsd:string ;
                sh:path bacnet:objectidentifier ] [ sh:path bacnet:no-value ;
                sh:value bacnet:NULL ] [ sh:path bacnet:constructed-value ] [ sh:datatype xsd:dateTime ;
                sh:path bacnet:datetime ] [ sh:node bacnet:LightingCommand ;
                sh:path bacnet:lighting-command ] ) .

bacnet:TrendLogMultipleObject a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Trend Log Multiple Object" ;
    bacnet:hasProperty bacnet:Acked_Transitions,
        bacnet:Align_Intervals,
        bacnet:Buffer_Size,
        bacnet:Enable,
        bacnet:Event_Algorithm_Inhibit,
        bacnet:Event_Algorithm_Inhibit_Ref,
        bacnet:Event_Detection_Enable,
        bacnet:Event_Enable,
        bacnet:Event_Message_Texts,
        bacnet:Event_Message_Texts_Config,
        bacnet:Event_State,
        bacnet:Event_Time_Stamps,
        bacnet:Interval_Offset,
        bacnet:Last_Notify_Record,
        bacnet:Log_Buffer,
        bacnet:Log_Device_Object_Property,
        bacnet:Log_Interval,
        bacnet:Logging_Type,
        bacnet:Notification_Class,
        bacnet:Notification_Threshold,
        bacnet:Notify_Type,
        bacnet:Record_Count,
        bacnet:Records_Since_Notification,
        bacnet:Reliability,
        bacnet:Reliability_Evaluation_Inhibit,
        bacnet:Start_Time,
        bacnet:Status_Flags,
        bacnet:Stop_Time,
        bacnet:Stop_When_Full,
        bacnet:Total_Record_Count,
        bacnet:Trigger ;
    rdfs:subClassOf bacnet:StandardObject ;
    sh:property [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:node bacnet:ListOfLogMultipleRecord ;
            sh:path bacnet:log-buffer ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:logging-type ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ObjectPropertyReference ;
            sh:path bacnet:event-algorithm-inhibit-ref ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:record-count ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-detection-enable ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notification-class ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:total-record-count ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notify-type ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfCharacterString ;
            sh:path bacnet:event-message-texts ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:align-intervals ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:last-notify-record ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:buffer-size ],
        [ sh:datatype xsd:dateTime ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:stop-time ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability-evaluation-inhibit ],
        [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:node bacnet:ArrayOfDeviceObjectPropertyReference ;
            sh:path bacnet:log-device-object-property ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfTimeStamp ;
            sh:path bacnet:event-time-stamps ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:acked-transitions ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:trigger ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfCharacterString ;
            sh:path bacnet:event-message-texts-config ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:log-interval ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:records-since-notification ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-algorithm-inhibit ],
        [ sh:datatype xsd:dateTime ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:start-time ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:enable ],
        [ sh:hasValue "trend-log-multiple" ;
            sh:path bacnet:object-type ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:stop-when-full ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:status-flags ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notification-threshold ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-enable ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:event-state ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:interval-offset ] ;
    sh:targetClass bacnet:TrendLogMultipleObject .

bacnet:TrendLogObject a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Trend Log Object" ;
    bacnet:hasProperty bacnet:Acked_Transitions,
        bacnet:Align_Intervals,
        bacnet:Buffer_Size,
        bacnet:COV_Resubscription_Interval,
        bacnet:Client_COV_Increment,
        bacnet:Enable,
        bacnet:Event_Algorithm_Inhibit,
        bacnet:Event_Algorithm_Inhibit_Ref,
        bacnet:Event_Detection_Enable,
        bacnet:Event_Enable,
        bacnet:Event_Message_Texts,
        bacnet:Event_Message_Texts_Config,
        bacnet:Event_State,
        bacnet:Event_Time_Stamps,
        bacnet:Interval_Offset,
        bacnet:Last_Notify_Record,
        bacnet:Log_Buffer,
        bacnet:Log_Device_Object_Property,
        bacnet:Log_Interval,
        bacnet:Logging_Type,
        bacnet:Notification_Class,
        bacnet:Notification_Threshold,
        bacnet:Notify_Type,
        bacnet:Record_Count,
        bacnet:Records_Since_Notification,
        bacnet:Reliability,
        bacnet:Reliability_Evaluation_Inhibit,
        bacnet:Start_Time,
        bacnet:Status_Flags,
        bacnet:Stop_Time,
        bacnet:Stop_When_Full,
        bacnet:Total_Record_Count,
        bacnet:Trigger ;
    rdfs:subClassOf bacnet:StandardObject ;
    sh:property [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:event-state ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:event-state ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:records-since-notification ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:DeviceObjectPropertyReference ;
            sh:path bacnet:log-device-object-property ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ObjectPropertyReference ;
            sh:path bacnet:event-algorithm-inhibit-ref ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:status-flags ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:buffer-size ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:enable ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-detection-enable ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:stop-when-full ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:logging-type ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:total-record-count ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notification-threshold ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:acked-transitions ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notify-type ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:record-count ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ClientCOV ;
            sh:path bacnet:client-cov-increment ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability-evaluation-inhibit ],
        [ sh:hasValue "trend-log" ;
            sh:path bacnet:object-type ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfCharacterString ;
            sh:path bacnet:event-message-texts-config ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-enable ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:event-algorithm-inhibit ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:cov-resubscription-interval ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:status-flags ],
        [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:node bacnet:ListOfLogRecord ;
            sh:path bacnet:log-buffer ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfTimeStamp ;
            sh:path bacnet:event-time-stamps ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:last-notify-record ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:log-interval ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:reliability ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:notification-class ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:trigger ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:interval-offset ],
        [ sh:datatype xsd:boolean ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:align-intervals ],
        [ sh:datatype xsd:dateTime ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:start-time ],
        [ sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:node bacnet:ArrayOfCharacterString ;
            sh:path bacnet:event-message-texts ],
        [ sh:datatype xsd:dateTime ;
            sh:maxCount 1 ;
            sh:minCount 0 ;
            sh:path bacnet:stop-time ] ;
    sh:targetClass bacnet:TrendLogObject .

bacnet:VMACEntry a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "VMACEntry" ;
    sh:property [ sh:datatype xsd:hexBinary ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:virtual-mac-address ],
        [ sh:datatype xsd:hexBinary ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:native-mac-address ] ;
    sh:targetClass bacnet:VMACEntry .

bacnet:VTSession a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "VTSession" ;
    sh:property [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:node bacnet:DeviceAddress ;
            sh:path bacnet:remote-vt-address ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:local-vt-session-iD ],
        [ sh:datatype xsd:nonNegativeInteger ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:remote-vt-session-iD ] ;
    sh:targetClass bacnet:VTSession .

bacnet:ValueSource a rdfs:Class,
        sh:NodeShape ;
    rdfs:label "Value Source" ;
    sh:targetClass bacnet:ValueSource ;
    sh:xone ( [ sh:path bacnet:none ;
                sh:value bacnet:NULL ] [ sh:node bacnet:DeviceObjectReference ;
                sh:path bacnet:object ] [ sh:node bacnet:Address ;
                sh:path bacnet:Address ] ) .

bacnet:Vendor a rdfs:Class ;
    rdfs:comment "The class of vendors." .

bacnet:VirtualNetwork a rdfs:Class,
        sh:NodeShape ;
    rdfs:subClassOf bacnet:Network ;
    sh:property [ sh:class bacnet:VirtualNode ;
            sh:path bacnet:hasNode ] ;
    sh:targetClass bacnet:VirtualNetwork .

bacnet:VirtualNode a rdfs:Class,
        sh:NodeShape ;
    rdfs:subClassOf bacnet:Node ;
    sh:property [ sh:datatype xsd:hexBinary ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:hasAddress ] ;
    sh:targetClass bacnet:VirtualNode .

bacnet:ZigBeeNetwork a rdfs:Class,
        sh:NodeShape ;
    rdfs:subClassOf bacnet:Network ;
    sh:property [ sh:class bacnet:ZigBeeNode ;
            sh:path bacnet:hasNode ] ;
    sh:targetClass bacnet:ZigBeeNetwork .

bacnet:ZigBeeNode a rdfs:Class,
        sh:NodeShape ;
    rdfs:subClassOf bacnet:Node ;
    sh:property [ sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:hasAddress ] ;
    sh:targetClass bacnet:ZigBeeNode .

bacnet:ASHRAE a bacnet:Vendor ;
    bacnet:vendorId "0"^^xsd:nonNegativeInteger .

bacnet:ASHRAE-reserved-1111 a bacnet:Vendor ;
    bacnet:vendorId "1111"^^xsd:nonNegativeInteger ;
    rdfs:comment "Vendor identifier reserved by ASHRAE and not assigned to a vendor." .

bacnet:ASHRAE-reserved-555 a bacnet:Vendor ;
    bacnet:vendorId "555"^^xsd:nonNegativeInteger ;
    rdfs:comment "Vendor identifier reserved by ASHRAE and not assigned to a vendor." .

bacnet:ASHRAE-reserved-666 a bacnet:Vendor ;
    bacnet:vendorId "666"^^xsd:nonNegativeInteger ;
    rdfs:comment "Vendor identifier reserved by ASHRAE and not assigned to a vendor." .

bacnet:ASHRAE-reserved-777 a bacnet:Vendor ;
    bacnet:vendorId "777"^^xsd:nonNegativeInteger ;
    rdfs:comment "Vendor identifier reserved by ASHRAE and not assigned to a vendor." .

bacnet:ASHRAE-reserved-911 a bacnet:Vendor ;
    bacnet:vendorId "911"^^xsd:nonNegativeInteger ;
    rdfs:comment "Vendor identifier reserved by ASHRAE and not assigned to a vendor." .

bacnet:ASHRAE-reserved-999 a bacnet:Vendor ;
    bacnet:vendorId "999"^^xsd:nonNegativeInteger ;
    rdfs:comment "Vendor identifier reserved by ASHRAE and not assigned to a vendor." .

bacnet:AccessAuthenticationFactorDisable a bacnet:ExtendedEnumerated,
        bacnet:StandardEnumerated ;
    bacnet:enumVendorMaximum "65535"^^xsd:nonNegativeInteger ;
    bacnet:enumVendorMinimum "64"^^xsd:nonNegativeInteger ;
    bacnet:hasMember bacnet:AccessAuthenticationFactorDisable-disabled,
        bacnet:AccessAuthenticationFactorDisable-disabled-damaged,
        bacnet:AccessAuthenticationFactorDisable-disabled-destroyed,
        bacnet:AccessAuthenticationFactorDisable-disabled-lost,
        bacnet:AccessAuthenticationFactorDisable-disabled-stolen,
        bacnet:AccessAuthenticationFactorDisable-none .

bacnet:AccessCredentialDisable a bacnet:ExtendedEnumerated,
        bacnet:StandardEnumerated ;
    bacnet:enumVendorMaximum "65535"^^xsd:nonNegativeInteger ;
    bacnet:enumVendorMinimum "64"^^xsd:nonNegativeInteger ;
    bacnet:hasMember bacnet:AccessCredentialDisable-disable,
        bacnet:AccessCredentialDisable-disable-lockout,
        bacnet:AccessCredentialDisable-disable-manual,
        bacnet:AccessCredentialDisable-none .

bacnet:AccessCredentialDisableReason a bacnet:StandardEnumerated ;
    bacnet:hasMember bacnet:AccessCredentialDisableReason-disabled,
        bacnet:AccessCredentialDisableReason-disabled-expired,
        bacnet:AccessCredentialDisableReason-disabled-inactivity,
        bacnet:AccessCredentialDisableReason-disabled-lockout,
        bacnet:AccessCredentialDisableReason-disabled-manual,
        bacnet:AccessCredentialDisableReason-disabled-max-days,
        bacnet:AccessCredentialDisableReason-disabled-max-uses,
        bacnet:AccessCredentialDisableReason-disabled-needs-provisioning,
        bacnet:AccessCredentialDisableReason-disabled-not-yet-active,
        bacnet:AccessCredentialDisableReason-disabled-unassigned .

bacnet:AccessEvent a bacnet:ExtendedEnumerated,
        bacnet:StandardEnumerated ;
    bacnet:enumVendorMaximum "65535"^^xsd:nonNegativeInteger ;
    bacnet:enumVendorMinimum "512"^^xsd:nonNegativeInteger ;
    bacnet:hasMember bacnet:AccessEvent-accompaniment-by,
        bacnet:AccessEvent-authentication-factor-read,
        bacnet:AccessEvent-authorization-delayed,
        bacnet:AccessEvent-denied-authentication-factor-damaged,
        bacnet:AccessEvent-denied-authentication-factor-destroyed,
        bacnet:AccessEvent-denied-authentication-factor-disabled,
        bacnet:AccessEvent-denied-authentication-factor-error,
        bacnet:AccessEvent-denied-authentication-factor-lost,
        bacnet:AccessEvent-denied-authentication-factor-stolen,
        bacnet:AccessEvent-denied-authentication-factor-timeout,
        bacnet:AccessEvent-denied-authentication-unavailable,
        bacnet:AccessEvent-denied-credential-disabled,
        bacnet:AccessEvent-denied-credential-expired,
        bacnet:AccessEvent-denied-credential-inactivity,
        bacnet:AccessEvent-denied-credential-lockout,
        bacnet:AccessEvent-denied-credential-manual-disable,
        bacnet:AccessEvent-denied-credential-max-days,
        bacnet:AccessEvent-denied-credential-max-uses,
        bacnet:AccessEvent-denied-credential-not-provisioned,
        bacnet:AccessEvent-denied-credential-not-yet-active,
        bacnet:AccessEvent-denied-credential-unassigned,
        bacnet:AccessEvent-denied-deny-all,
        bacnet:AccessEvent-denied-incorrect-accompaniment,
        bacnet:AccessEvent-denied-incorrect-authentication-factor,
        bacnet:AccessEvent-denied-lockout,
        bacnet:AccessEvent-denied-lower-occupancy-limit,
        bacnet:AccessEvent-denied-max-attempts,
        bacnet:AccessEvent-denied-no-access-rights,
        bacnet:AccessEvent-denied-no-accompaniment,
        bacnet:AccessEvent-denied-other,
        bacnet:AccessEvent-denied-out-of-time-range,
        bacnet:AccessEvent-denied-passback,
        bacnet:AccessEvent-denied-point-no-access-rights,
        bacnet:AccessEvent-denied-threat-level,
        bacnet:AccessEvent-denied-unexpected-location-usage,
        bacnet:AccessEvent-denied-unknown-credential,
        bacnet:AccessEvent-denied-upper-occupancy-limit,
        bacnet:AccessEvent-denied-verification-failed,
        bacnet:AccessEvent-denied-verification-timeout,
        bacnet:AccessEvent-denied-zone-no-access-rights,
        bacnet:AccessEvent-duress,
        bacnet:AccessEvent-granted,
        bacnet:AccessEvent-locked-by-higher-priority,
        bacnet:AccessEvent-lockout-max-attempts,
        bacnet:AccessEvent-lockout-other,
        bacnet:AccessEvent-lockout-relinquished,
        bacnet:AccessEvent-muster,
        bacnet:AccessEvent-none,
        bacnet:AccessEvent-out-of-service,
        bacnet:AccessEvent-out-of-service-relinquished,
        bacnet:AccessEvent-passback-detected,
        bacnet:AccessEvent-trace,
        bacnet:AccessEvent-verification-required .

bacnet:AccessPassbackMode a bacnet:StandardEnumerated ;
    bacnet:hasMember bacnet:AccessPassbackMode-hard-passback,
        bacnet:AccessPassbackMode-passback-off,
        bacnet:AccessPassbackMode-soft-passback .

bacnet:AccessRuleLocationSpecifier a bacnet:StandardEnumerated ;
    bacnet:hasMember bacnet:AccessRuleLocationSpecifier-all,
        bacnet:AccessRuleLocationSpecifier-specified .

bacnet:AccessRuleTimeRangeSpecifier a bacnet:StandardEnumerated ;
    bacnet:hasMember bacnet:AccessRuleTimeRangeSpecifier-always,
        bacnet:AccessRuleTimeRangeSpecifier-specified .

bacnet:AccessUserType a bacnet:ExtendedEnumerated,
        bacnet:StandardEnumerated ;
    bacnet:enumVendorMaximum "65535"^^xsd:nonNegativeInteger ;
    bacnet:enumVendorMinimum "64"^^xsd:nonNegativeInteger ;
    bacnet:hasMember bacnet:AccessUserType-asset,
        bacnet:AccessUserType-group,
        bacnet:AccessUserType-person .

bacnet:AccessZoneOccupancyState a bacnet:ExtendedEnumerated,
        bacnet:StandardEnumerated ;
    bacnet:enumVendorMaximum "65535"^^xsd:nonNegativeInteger ;
    bacnet:enumVendorMinimum "64"^^xsd:nonNegativeInteger ;
    bacnet:hasMember bacnet:AccessZoneOccupancyState-above-upper-limit,
        bacnet:AccessZoneOccupancyState-at-lower-limit,
        bacnet:AccessZoneOccupancyState-at-upper-limit,
        bacnet:AccessZoneOccupancyState-below-lower-limit,
        bacnet:AccessZoneOccupancyState-disabled,
        bacnet:AccessZoneOccupancyState-normal,
        bacnet:AccessZoneOccupancyState-not-supported .

bacnet:AccumulatorRecordAccumulatorStatus a bacnet:StandardEnumerated ;
    bacnet:hasMember bacnet:AccumulatorRecordAccumulatorStatus-abnormal,
        bacnet:AccumulatorRecordAccumulatorStatus-failed,
        bacnet:AccumulatorRecordAccumulatorStatus-normal,
        bacnet:AccumulatorRecordAccumulatorStatus-recovered,
        bacnet:AccumulatorRecordAccumulatorStatus-starting .

bacnet:AuditLevel a bacnet:ExtendedEnumerated,
        bacnet:StandardEnumerated ;
    bacnet:enumVendorMaximum "255"^^xsd:nonNegativeInteger ;
    bacnet:enumVendorMinimum "128"^^xsd:nonNegativeInteger ;
    bacnet:hasMember bacnet:AuditLevel-audit-all,
        bacnet:AuditLevel-audit-config,
        bacnet:AuditLevel-default,
        bacnet:AuditLevel-none .

bacnet:AuditOperation a bacnet:ExtendedEnumerated,
        bacnet:StandardEnumerated ;
    bacnet:enumVendorMaximum "63"^^xsd:nonNegativeInteger ;
    bacnet:enumVendorMinimum "32"^^xsd:nonNegativeInteger ;
    bacnet:hasMember bacnet:AuditOperation-acknowledge-alarm,
        bacnet:AuditOperation-auditing-failure,
        bacnet:AuditOperation-create,
        bacnet:AuditOperation-delete,
        bacnet:AuditOperation-device-backup,
        bacnet:AuditOperation-device-disable-comm,
        bacnet:AuditOperation-device-enable-comm,
        bacnet:AuditOperation-device-reset,
        bacnet:AuditOperation-device-restore,
        bacnet:AuditOperation-general,
        bacnet:AuditOperation-life-safety,
        bacnet:AuditOperation-network-changes,
        bacnet:AuditOperation-notification,
        bacnet:AuditOperation-read,
        bacnet:AuditOperation-subscription,
        bacnet:AuditOperation-write .

bacnet:AuditOperationFlags a bacnet:BitString,
        bacnet:ExtendedBitString ;
    bacnet:bitVendorMaximum "63"^^xsd:nonNegativeInteger ;
    bacnet:bitVendorMinimum "32"^^xsd:nonNegativeInteger ;
    bacnet:hasMember bacnet:AuditOperationFlags-acknowledge-alarm,
        bacnet:AuditOperationFlags-auditing-failure,
        bacnet:AuditOperationFlags-create,
        bacnet:AuditOperationFlags-delete,
        bacnet:AuditOperationFlags-device-backup,
        bacnet:AuditOperationFlags-device-disable-comm,
        bacnet:AuditOperationFlags-device-enable-comm,
        bacnet:AuditOperationFlags-device-reset,
        bacnet:AuditOperationFlags-device-restore,
        bacnet:AuditOperationFlags-general,
        bacnet:AuditOperationFlags-life-safety,
        bacnet:AuditOperationFlags-network-changes,
        bacnet:AuditOperationFlags-notification,
        bacnet:AuditOperationFlags-read,
        bacnet:AuditOperationFlags-subscription,
        bacnet:AuditOperationFlags-write .

bacnet:AuthenticationFactorType a bacnet:StandardEnumerated ;
    bacnet:hasMember bacnet:AuthenticationFactorType-aba-track2,
        bacnet:AuthenticationFactorType-cbeffA,
        bacnet:AuthenticationFactorType-cbeffB,
        bacnet:AuthenticationFactorType-cbeffC,
        bacnet:AuthenticationFactorType-chuid,
        bacnet:AuthenticationFactorType-chuid-full,
        bacnet:AuthenticationFactorType-custom,
        bacnet:AuthenticationFactorType-error,
        bacnet:AuthenticationFactorType-facility16card32,
        bacnet:AuthenticationFactorType-facility32card32,
        bacnet:AuthenticationFactorType-fasc-nbcd,
        bacnet:AuthenticationFactorType-fasc-nlarge,
        bacnet:AuthenticationFactorType-fasc-nlarge-bcd,
        bacnet:AuthenticationFactorType-fascN,
        bacnet:AuthenticationFactorType-gsa75,
        bacnet:AuthenticationFactorType-guid,
        bacnet:AuthenticationFactorType-simple-alpha-numeric,
        bacnet:AuthenticationFactorType-simple-number16,
        bacnet:AuthenticationFactorType-simple-number32,
        bacnet:AuthenticationFactorType-simple-number56,
        bacnet:AuthenticationFactorType-undefined,
        bacnet:AuthenticationFactorType-user-password,
        bacnet:AuthenticationFactorType-wiegand26,
        bacnet:AuthenticationFactorType-wiegand37,
        bacnet:AuthenticationFactorType-wiegand37facility .

bacnet:AuthenticationStatus a bacnet:StandardEnumerated ;
    bacnet:hasMember bacnet:AuthenticationStatus-disabled,
        bacnet:AuthenticationStatus-in-progress,
        bacnet:AuthenticationStatus-not-ready,
        bacnet:AuthenticationStatus-ready,
        bacnet:AuthenticationStatus-waiting-for-accompaniment,
        bacnet:AuthenticationStatus-waiting-for-authentication-factor,
        bacnet:AuthenticationStatus-waiting-for-verification .

bacnet:AuthorizationException a bacnet:ExtendedEnumerated,
        bacnet:StandardEnumerated ;
    bacnet:enumVendorMaximum "255"^^xsd:nonNegativeInteger ;
    bacnet:enumVendorMinimum "64"^^xsd:nonNegativeInteger ;
    bacnet:hasMember bacnet:AuthorizationException-access-rights,
        bacnet:AuthorizationException-authorization-delay,
        bacnet:AuthorizationException-deny,
        bacnet:AuthorizationException-lockout,
        bacnet:AuthorizationException-occupancy-check,
        bacnet:AuthorizationException-passback,
        bacnet:AuthorizationException-verification .

bacnet:AuthorizationMode a bacnet:ExtendedEnumerated,
        bacnet:StandardEnumerated ;
    bacnet:enumVendorMaximum "65536"^^xsd:nonNegativeInteger ;
    bacnet:enumVendorMinimum "64"^^xsd:nonNegativeInteger ;
    bacnet:hasMember bacnet:AuthorizationMode-authorization-delayed,
        bacnet:AuthorizationMode-authorize,
        bacnet:AuthorizationMode-deny-all,
        bacnet:AuthorizationMode-grant-active,
        bacnet:AuthorizationMode-none,
        bacnet:AuthorizationMode-verification-required .

bacnet:BackupState a bacnet:StandardEnumerated ;
    bacnet:hasMember bacnet:BackupState-backup-failure,
        bacnet:BackupState-idle,
        bacnet:BackupState-performing-abackup,
        bacnet:BackupState-performing-arestore,
        bacnet:BackupState-preparing-for-backup,
        bacnet:BackupState-preparing-for-restore,
        bacnet:BackupState-restore-failure .

bacnet:BinaryLightingPV a bacnet:ExtendedEnumerated,
        bacnet:StandardEnumerated ;
    bacnet:enumVendorMaximum "255"^^xsd:nonNegativeInteger ;
    bacnet:enumVendorMinimum "64"^^xsd:nonNegativeInteger ;
    bacnet:hasMember bacnet:BinaryLightingPV-off,
        bacnet:BinaryLightingPV-on,
        bacnet:BinaryLightingPV-stop,
        bacnet:BinaryLightingPV-warn,
        bacnet:BinaryLightingPV-warn-off,
        bacnet:BinaryLightingPV-warn-relinquish .

bacnet:BinaryPV a bacnet:StandardEnumerated ;
    bacnet:hasMember bacnet:BinaryPV-active,
        bacnet:BinaryPV-inactive .

bacnet:DaysOfWeek a bacnet:BitString ;
    bacnet:hasMember bacnet:DaysOfWeek-friday,
        bacnet:DaysOfWeek-monday,
        bacnet:DaysOfWeek-saturday,
        bacnet:DaysOfWeek-sunday,
        bacnet:DaysOfWeek-thursday,
        bacnet:DaysOfWeek-tuesday,
        bacnet:DaysOfWeek-wednesday .

bacnet:DeviceStatus a bacnet:ExtendedEnumerated,
        bacnet:StandardEnumerated ;
    bacnet:enumVendorMaximum "65535"^^xsd:nonNegativeInteger ;
    bacnet:enumVendorMinimum "64"^^xsd:nonNegativeInteger ;
    bacnet:hasMember bacnet:DeviceStatus-backup-in-progress,
        bacnet:DeviceStatus-download-in-progress,
        bacnet:DeviceStatus-download-required,
        bacnet:DeviceStatus-non-operational,
        bacnet:DeviceStatus-operational,
        bacnet:DeviceStatus-operational-read-only .

bacnet:DoorAlarmState a bacnet:ExtendedEnumerated,
        bacnet:StandardEnumerated ;
    bacnet:enumVendorMaximum "65535"^^xsd:nonNegativeInteger ;
    bacnet:enumVendorMinimum "256"^^xsd:nonNegativeInteger ;
    bacnet:hasMember bacnet:DoorAlarmState-alarm,
        bacnet:DoorAlarmState-door-fault,
        bacnet:DoorAlarmState-door-open-too-long,
        bacnet:DoorAlarmState-egress-open,
        bacnet:DoorAlarmState-forced-open,
        bacnet:DoorAlarmState-free-access,
        bacnet:DoorAlarmState-lock-down,
        bacnet:DoorAlarmState-normal,
        bacnet:DoorAlarmState-tamper .

bacnet:DoorSecuredStatus a bacnet:StandardEnumerated ;
    bacnet:hasMember bacnet:DoorSecuredStatus-secured,
        bacnet:DoorSecuredStatus-unknown,
        bacnet:DoorSecuredStatus-unsecured .

bacnet:DoorStatus a bacnet:StandardEnumerated ;
    bacnet:hasMember bacnet:DoorStatus-closed,
        bacnet:DoorStatus-opened,
        bacnet:DoorStatus-unknown .

bacnet:DoorValue a bacnet:StandardEnumerated ;
    bacnet:hasMember bacnet:DoorValue-extended-pulse-unlock,
        bacnet:DoorValue-lock,
        bacnet:DoorValue-pulse-unlock,
        bacnet:DoorValue-unlock .

bacnet:EngineeringUnits a bacnet:ExtendedEnumerated,
        bacnet:StandardEnumerated ;
    bacnet:enumVendorMaximum "65535"^^xsd:nonNegativeInteger ;
    bacnet:enumVendorMinimum "256"^^xsd:nonNegativeInteger ;
    bacnet:hasMember bacnet:EngineeringUnits-ampere-seconds,
        bacnet:EngineeringUnits-ampere-square-hours,
        bacnet:EngineeringUnits-ampere-square-meters,
        bacnet:EngineeringUnits-amperes,
        bacnet:EngineeringUnits-amperes-per-meter,
        bacnet:EngineeringUnits-amperes-per-square-meter,
        bacnet:EngineeringUnits-bars,
        bacnet:EngineeringUnits-becquerels,
        bacnet:EngineeringUnits-btus,
        bacnet:EngineeringUnits-btus-per-hour,
        bacnet:EngineeringUnits-btus-per-pound,
        bacnet:EngineeringUnits-btus-per-pound-dry-air,
        bacnet:EngineeringUnits-candelas,
        bacnet:EngineeringUnits-candelas-per-square-meter,
        bacnet:EngineeringUnits-centimeters,
        bacnet:EngineeringUnits-centimeters-of-mercury,
        bacnet:EngineeringUnits-centimeters-of-water,
        bacnet:EngineeringUnits-cubic-feet,
        bacnet:EngineeringUnits-cubic-feet-per-day,
        bacnet:EngineeringUnits-cubic-feet-per-hour,
        bacnet:EngineeringUnits-cubic-feet-per-minute,
        bacnet:EngineeringUnits-cubic-feet-per-second,
        bacnet:EngineeringUnits-cubic-meters,
        bacnet:EngineeringUnits-cubic-meters-per-day,
        bacnet:EngineeringUnits-cubic-meters-per-hour,
        bacnet:EngineeringUnits-cubic-meters-per-minute,
        bacnet:EngineeringUnits-cubic-meters-per-second,
        bacnet:EngineeringUnits-currency1,
        bacnet:EngineeringUnits-currency10,
        bacnet:EngineeringUnits-currency2,
        bacnet:EngineeringUnits-currency3,
        bacnet:EngineeringUnits-currency4,
        bacnet:EngineeringUnits-currency5,
        bacnet:EngineeringUnits-currency6,
        bacnet:EngineeringUnits-currency7,
        bacnet:EngineeringUnits-currency8,
        bacnet:EngineeringUnits-currency9,
        bacnet:EngineeringUnits-cycles-per-hour,
        bacnet:EngineeringUnits-cycles-per-minute,
        bacnet:EngineeringUnits-days,
        bacnet:EngineeringUnits-decibels,
        bacnet:EngineeringUnits-decibels-millivolt,
        bacnet:EngineeringUnits-decibels-volt,
        bacnet:EngineeringUnits-decibelsA,
        bacnet:EngineeringUnits-degree-days-celsius,
        bacnet:EngineeringUnits-degree-days-fahrenheit,
        bacnet:EngineeringUnits-degrees-angular,
        bacnet:EngineeringUnits-degrees-celsius,
        bacnet:EngineeringUnits-degrees-celsius-per-hour,
        bacnet:EngineeringUnits-degrees-celsius-per-minute,
        bacnet:EngineeringUnits-degrees-fahrenheit,
        bacnet:EngineeringUnits-degrees-fahrenheit-per-hour,
        bacnet:EngineeringUnits-degrees-fahrenheit-per-minute,
        bacnet:EngineeringUnits-degrees-kelvin,
        bacnet:EngineeringUnits-degrees-kelvin-per-hour,
        bacnet:EngineeringUnits-degrees-kelvin-per-minute,
        bacnet:EngineeringUnits-degrees-phase,
        bacnet:EngineeringUnits-delta-degrees-fahrenheit,
        bacnet:EngineeringUnits-delta-degrees-kelvin,
        bacnet:EngineeringUnits-farads,
        bacnet:EngineeringUnits-feet,
        bacnet:EngineeringUnits-feet-per-minute,
        bacnet:EngineeringUnits-feet-per-second,
        bacnet:EngineeringUnits-foot-candles,
        bacnet:EngineeringUnits-grams,
        bacnet:EngineeringUnits-grams-of-water-per-kilogram-dry-air,
        bacnet:EngineeringUnits-grams-per-cubic-centimeter,
        bacnet:EngineeringUnits-grams-per-cubic-meter,
        bacnet:EngineeringUnits-grams-per-gram,
        bacnet:EngineeringUnits-grams-per-kilogram,
        bacnet:EngineeringUnits-grams-per-liter,
        bacnet:EngineeringUnits-grams-per-milliliter,
        bacnet:EngineeringUnits-grams-per-minute,
        bacnet:EngineeringUnits-grams-per-second,
        bacnet:EngineeringUnits-grams-per-square-meter,
        bacnet:EngineeringUnits-gray,
        bacnet:EngineeringUnits-hectopascals,
        bacnet:EngineeringUnits-henrys,
        bacnet:EngineeringUnits-hertz,
        bacnet:EngineeringUnits-horsepower,
        bacnet:EngineeringUnits-hours,
        bacnet:EngineeringUnits-hundredths-seconds,
        bacnet:EngineeringUnits-imperial-gallons,
        bacnet:EngineeringUnits-imperial-gallons-per-minute,
        bacnet:EngineeringUnits-inches,
        bacnet:EngineeringUnits-inches-of-mercury,
        bacnet:EngineeringUnits-inches-of-water,
        bacnet:EngineeringUnits-joule-seconds,
        bacnet:EngineeringUnits-joules,
        bacnet:EngineeringUnits-joules-per-cubic-meter,
        bacnet:EngineeringUnits-joules-per-degree-kelvin,
        bacnet:EngineeringUnits-joules-per-hours,
        bacnet:EngineeringUnits-joules-per-kilogram-degree-kelvin,
        bacnet:EngineeringUnits-joules-per-kilogram-dry-air,
        bacnet:EngineeringUnits-kilo-btus,
        bacnet:EngineeringUnits-kilo-btus-per-hour,
        bacnet:EngineeringUnits-kilobecquerels,
        bacnet:EngineeringUnits-kilograms,
        bacnet:EngineeringUnits-kilograms-per-cubic-meter,
        bacnet:EngineeringUnits-kilograms-per-hour,
        bacnet:EngineeringUnits-kilograms-per-kilogram,
        bacnet:EngineeringUnits-kilograms-per-minute,
        bacnet:EngineeringUnits-kilograms-per-second,
        bacnet:EngineeringUnits-kilohertz,
        bacnet:EngineeringUnits-kilohms,
        bacnet:EngineeringUnits-kilojoules,
        bacnet:EngineeringUnits-kilojoules-per-degree-kelvin,
        bacnet:EngineeringUnits-kilojoules-per-kilogram,
        bacnet:EngineeringUnits-kilojoules-per-kilogram-dry-air,
        bacnet:EngineeringUnits-kilometers,
        bacnet:EngineeringUnits-kilometers-per-hour,
        bacnet:EngineeringUnits-kilopascals,
        bacnet:EngineeringUnits-kilovolt-ampere-hours,
        bacnet:EngineeringUnits-kilovolt-ampere-hours-reactive,
        bacnet:EngineeringUnits-kilovolt-amperes,
        bacnet:EngineeringUnits-kilovolt-amperes-reactive,
        bacnet:EngineeringUnits-kilovolts,
        bacnet:EngineeringUnits-kilowatt-hours,
        bacnet:EngineeringUnits-kilowatt-hours-per-square-foot,
        bacnet:EngineeringUnits-kilowatt-hours-per-square-meter,
        bacnet:EngineeringUnits-kilowatt-hours-reactive,
        bacnet:EngineeringUnits-kilowatts,
        bacnet:EngineeringUnits-liters,
        bacnet:EngineeringUnits-liters-per-hour,
        bacnet:EngineeringUnits-liters-per-minute,
        bacnet:EngineeringUnits-liters-per-second,
        bacnet:EngineeringUnits-lumens,
        bacnet:EngineeringUnits-luxes,
        bacnet:EngineeringUnits-mega-btus,
        bacnet:EngineeringUnits-megabecquerels,
        bacnet:EngineeringUnits-megahertz,
        bacnet:EngineeringUnits-megajoules,
        bacnet:EngineeringUnits-megajoules-per-degree-kelvin,
        bacnet:EngineeringUnits-megajoules-per-kilogram-dry-air,
        bacnet:EngineeringUnits-megajoules-per-square-foot,
        bacnet:EngineeringUnits-megajoules-per-square-meter,
        bacnet:EngineeringUnits-megavolt-ampere-hours,
        bacnet:EngineeringUnits-megavolt-ampere-hours-reactive,
        bacnet:EngineeringUnits-megavolt-amperes,
        bacnet:EngineeringUnits-megavolt-amperes-reactive,
        bacnet:EngineeringUnits-megavolts,
        bacnet:EngineeringUnits-megawatt-hours,
        bacnet:EngineeringUnits-megawatt-hours-reactive,
        bacnet:EngineeringUnits-megawatts,
        bacnet:EngineeringUnits-megohms,
        bacnet:EngineeringUnits-meters,
        bacnet:EngineeringUnits-meters-per-hour,
        bacnet:EngineeringUnits-meters-per-minute,
        bacnet:EngineeringUnits-meters-per-second,
        bacnet:EngineeringUnits-meters-per-second-per-second,
        bacnet:EngineeringUnits-micro-siemens,
        bacnet:EngineeringUnits-micrograms-per-cubic-meter,
        bacnet:EngineeringUnits-micrograms-per-liter,
        bacnet:EngineeringUnits-microgray,
        bacnet:EngineeringUnits-micrometers,
        bacnet:EngineeringUnits-microsieverts,
        bacnet:EngineeringUnits-microsieverts-per-hour,
        bacnet:EngineeringUnits-miles-per-hour,
        bacnet:EngineeringUnits-milliamperes,
        bacnet:EngineeringUnits-millibars,
        bacnet:EngineeringUnits-milligrams,
        bacnet:EngineeringUnits-milligrams-per-cubic-meter,
        bacnet:EngineeringUnits-milligrams-per-gram,
        bacnet:EngineeringUnits-milligrams-per-kilogram,
        bacnet:EngineeringUnits-milligrams-per-liter,
        bacnet:EngineeringUnits-milligray,
        bacnet:EngineeringUnits-milliliters,
        bacnet:EngineeringUnits-milliliters-per-second,
        bacnet:EngineeringUnits-millimeters,
        bacnet:EngineeringUnits-millimeters-of-mercury,
        bacnet:EngineeringUnits-millimeters-of-water,
        bacnet:EngineeringUnits-millimeters-per-minute,
        bacnet:EngineeringUnits-millimeters-per-second,
        bacnet:EngineeringUnits-milliohms,
        bacnet:EngineeringUnits-milliseconds,
        bacnet:EngineeringUnits-millisiemens,
        bacnet:EngineeringUnits-millisieverts,
        bacnet:EngineeringUnits-millivolts,
        bacnet:EngineeringUnits-milliwatts,
        bacnet:EngineeringUnits-minutes,
        bacnet:EngineeringUnits-minutes-per-degree-kelvin,
        bacnet:EngineeringUnits-months,
        bacnet:EngineeringUnits-nanograms-per-cubic-meter,
        bacnet:EngineeringUnits-nephelometric-turbidity-unit,
        bacnet:EngineeringUnits-newton,
        bacnet:EngineeringUnits-newton-meters,
        bacnet:EngineeringUnits-newton-seconds,
        bacnet:EngineeringUnits-newtons-per-meter,
        bacnet:EngineeringUnits-no-units,
        bacnet:EngineeringUnits-ohm-meter-per-square-meter,
        bacnet:EngineeringUnits-ohm-meters,
        bacnet:EngineeringUnits-ohms,
        bacnet:EngineeringUnits-pH,
        bacnet:EngineeringUnits-parts-per-billion,
        bacnet:EngineeringUnits-parts-per-million,
        bacnet:EngineeringUnits-pascal-seconds,
        bacnet:EngineeringUnits-pascals,
        bacnet:EngineeringUnits-per-hour,
        bacnet:EngineeringUnits-per-mille,
        bacnet:EngineeringUnits-per-minute,
        bacnet:EngineeringUnits-per-second,
        bacnet:EngineeringUnits-percent,
        bacnet:EngineeringUnits-percent-obscuration-per-foot,
        bacnet:EngineeringUnits-percent-obscuration-per-meter,
        bacnet:EngineeringUnits-percent-per-second,
        bacnet:EngineeringUnits-percent-relative-humidity,
        bacnet:EngineeringUnits-pounds-force-per-square-inch,
        bacnet:EngineeringUnits-pounds-mass,
        bacnet:EngineeringUnits-pounds-mass-per-hour,
        bacnet:EngineeringUnits-pounds-mass-per-minute,
        bacnet:EngineeringUnits-pounds-mass-per-second,
        bacnet:EngineeringUnits-power-factor,
        bacnet:EngineeringUnits-psi-per-degree-fahrenheit,
        bacnet:EngineeringUnits-radians,
        bacnet:EngineeringUnits-radians-per-second,
        bacnet:EngineeringUnits-revolutions-per-minute,
        bacnet:EngineeringUnits-seconds,
        bacnet:EngineeringUnits-siemens,
        bacnet:EngineeringUnits-siemens-per-meter,
        bacnet:EngineeringUnits-sieverts,
        bacnet:EngineeringUnits-square-centimeters,
        bacnet:EngineeringUnits-square-feet,
        bacnet:EngineeringUnits-square-inches,
        bacnet:EngineeringUnits-square-meters,
        bacnet:EngineeringUnits-square-meters-per-newton,
        bacnet:EngineeringUnits-teslas,
        bacnet:EngineeringUnits-therms,
        bacnet:EngineeringUnits-ton-hours,
        bacnet:EngineeringUnits-tons,
        bacnet:EngineeringUnits-tons-per-hour,
        bacnet:EngineeringUnits-tons-refrigeration,
        bacnet:EngineeringUnits-us-gallons,
        bacnet:EngineeringUnits-us-gallons-per-hour,
        bacnet:EngineeringUnits-us-gallons-per-minute,
        bacnet:EngineeringUnits-volt-ampere-hours,
        bacnet:EngineeringUnits-volt-ampere-hours-reactive,
        bacnet:EngineeringUnits-volt-amperes,
        bacnet:EngineeringUnits-volt-amperes-reactive,
        bacnet:EngineeringUnits-volts,
        bacnet:EngineeringUnits-volts-per-degree-kelvin,
        bacnet:EngineeringUnits-volts-per-meter,
        bacnet:EngineeringUnits-volts-square-hours,
        bacnet:EngineeringUnits-watt-hours,
        bacnet:EngineeringUnits-watt-hours-per-cubic-meter,
        bacnet:EngineeringUnits-watt-hours-reactive,
        bacnet:EngineeringUnits-watts,
        bacnet:EngineeringUnits-watts-per-meter-per-degree-kelvin,
        bacnet:EngineeringUnits-watts-per-square-foot,
        bacnet:EngineeringUnits-watts-per-square-meter,
        bacnet:EngineeringUnits-watts-per-square-meter-degree-kelvin,
        bacnet:EngineeringUnits-webers,
        bacnet:EngineeringUnits-weeks,
        bacnet:EngineeringUnits-years .

bacnet:ErrorClass a bacnet:StandardEnumerated ;
    bacnet:hasMember bacnet:ErrorClass-communication,
        bacnet:ErrorClass-device,
        bacnet:ErrorClass-object,
        bacnet:ErrorClass-property,
        bacnet:ErrorClass-resources,
        bacnet:ErrorClass-security,
        bacnet:ErrorClass-services,
        bacnet:ErrorClass-vt .

bacnet:ErrorCode a bacnet:StandardEnumerated ;
    bacnet:hasMember bacnet:ErrorCode-abort-apdu-too-long,
        bacnet:ErrorCode-abort-application-exceeded-reply-time,
        bacnet:ErrorCode-abort-buffer-overflow,
        bacnet:ErrorCode-abort-insufficient-security,
        bacnet:ErrorCode-abort-invalid-apdu-in-this-state,
        bacnet:ErrorCode-abort-other,
        bacnet:ErrorCode-abort-out-of-resources,
        bacnet:ErrorCode-abort-preempted-by-higher-priority-task,
        bacnet:ErrorCode-abort-proprietary,
        bacnet:ErrorCode-abort-security-error,
        bacnet:ErrorCode-abort-segmentation-not-supported,
        bacnet:ErrorCode-abort-tsm-timeout,
        bacnet:ErrorCode-abort-window-size-out-of-range,
        bacnet:ErrorCode-access-denied,
        bacnet:ErrorCode-addressing-error,
        bacnet:ErrorCode-bad-destination-address,
        bacnet:ErrorCode-bad-destination-device-id,
        bacnet:ErrorCode-bad-signature,
        bacnet:ErrorCode-bad-source-address,
        bacnet:ErrorCode-bad-timestamp,
        bacnet:ErrorCode-busy,
        bacnet:ErrorCode-cannot-use-key,
        bacnet:ErrorCode-cannot-verify-message-id,
        bacnet:ErrorCode-character-set-not-supported,
        bacnet:ErrorCode-communication-disabled,
        bacnet:ErrorCode-configuration-in-progress,
        bacnet:ErrorCode-correct-key-revision,
        bacnet:ErrorCode-cov-subscription-failed,
        bacnet:ErrorCode-datatype-not-supported,
        bacnet:ErrorCode-delete-fdt-entry-failed,
        bacnet:ErrorCode-destination-device-id-required,
        bacnet:ErrorCode-device-busy,
        bacnet:ErrorCode-distribute-broadcast-failed,
        bacnet:ErrorCode-duplicate-message,
        bacnet:ErrorCode-duplicate-name,
        bacnet:ErrorCode-duplicate-object-id,
        bacnet:ErrorCode-dynamic-creation-not-supported,
        bacnet:ErrorCode-encryption-not-configured,
        bacnet:ErrorCode-encryption-required,
        bacnet:ErrorCode-file-access-denied,
        bacnet:ErrorCode-file-full,
        bacnet:ErrorCode-inconsistent-configuration,
        bacnet:ErrorCode-inconsistent-object-type,
        bacnet:ErrorCode-inconsistent-parameters,
        bacnet:ErrorCode-inconsistent-selection-criterion,
        bacnet:ErrorCode-incorrect-key,
        bacnet:ErrorCode-internal-error,
        bacnet:ErrorCode-invalid-array-index,
        bacnet:ErrorCode-invalid-configuration-data,
        bacnet:ErrorCode-invalid-data-type,
        bacnet:ErrorCode-invalid-event-state,
        bacnet:ErrorCode-invalid-file-access-method,
        bacnet:ErrorCode-invalid-file-start-position,
        bacnet:ErrorCode-invalid-key-data,
        bacnet:ErrorCode-invalid-parameter-data-type,
        bacnet:ErrorCode-invalid-tag,
        bacnet:ErrorCode-invalid-time-stamp,
        bacnet:ErrorCode-key-update-in-progress,
        bacnet:ErrorCode-list-element-not-found,
        bacnet:ErrorCode-log-buffer-full,
        bacnet:ErrorCode-logged-value-purged,
        bacnet:ErrorCode-malformed-message,
        bacnet:ErrorCode-message-too-long,
        bacnet:ErrorCode-missing-required-parameter,
        bacnet:ErrorCode-network-down,
        bacnet:ErrorCode-no-alarm-configured,
        bacnet:ErrorCode-no-objects-of-specified-type,
        bacnet:ErrorCode-no-property-specified,
        bacnet:ErrorCode-no-space-for-object,
        bacnet:ErrorCode-no-space-to-add-list-element,
        bacnet:ErrorCode-no-space-to-write-property,
        bacnet:ErrorCode-no-vt-sessions-available,
        bacnet:ErrorCode-not-configured,
        bacnet:ErrorCode-not-configured-for-triggered-logging,
        bacnet:ErrorCode-not-cov-property,
        bacnet:ErrorCode-not-key-server,
        bacnet:ErrorCode-not-router-to-dnet,
        bacnet:ErrorCode-object-deletion-not-permitted,
        bacnet:ErrorCode-object-identifier-already-exists,
        bacnet:ErrorCode-operational-problem,
        bacnet:ErrorCode-optional-functionality-not-supported,
        bacnet:ErrorCode-other,
        bacnet:ErrorCode-out-of-memory,
        bacnet:ErrorCode-parameter-out-of-range,
        bacnet:ErrorCode-password-failure,
        bacnet:ErrorCode-property-is-not-alist,
        bacnet:ErrorCode-property-is-not-an-array,
        bacnet:ErrorCode-read-access-denied,
        bacnet:ErrorCode-read-bdt-failed,
        bacnet:ErrorCode-read-fdt-failed,
        bacnet:ErrorCode-register-foreign-device-failed,
        bacnet:ErrorCode-reject-buffer-overflow,
        bacnet:ErrorCode-reject-inconsistent-parameters,
        bacnet:ErrorCode-reject-invalid-parameter-data-type,
        bacnet:ErrorCode-reject-invalid-tag,
        bacnet:ErrorCode-reject-missing-required-parameter,
        bacnet:ErrorCode-reject-other,
        bacnet:ErrorCode-reject-parameter-out-of-range,
        bacnet:ErrorCode-reject-proprietary,
        bacnet:ErrorCode-reject-too-many-arguments,
        bacnet:ErrorCode-reject-undefined-enumeration,
        bacnet:ErrorCode-reject-unrecognized-service,
        bacnet:ErrorCode-router-busy,
        bacnet:ErrorCode-security-error,
        bacnet:ErrorCode-security-not-configured,
        bacnet:ErrorCode-service-request-denied,
        bacnet:ErrorCode-source-security-required,
        bacnet:ErrorCode-success,
        bacnet:ErrorCode-timeout,
        bacnet:ErrorCode-too-many-keys,
        bacnet:ErrorCode-umknown-route,
        bacnet:ErrorCode-unknown-authentication-type,
        bacnet:ErrorCode-unknown-device,
        bacnet:ErrorCode-unknown-file-size,
        bacnet:ErrorCode-unknown-key,
        bacnet:ErrorCode-unknown-key-revision,
        bacnet:ErrorCode-unknown-network-message,
        bacnet:ErrorCode-unknown-object,
        bacnet:ErrorCode-unknown-property,
        bacnet:ErrorCode-unknown-source-message,
        bacnet:ErrorCode-unknown-subscription,
        bacnet:ErrorCode-unknown-vt-class,
        bacnet:ErrorCode-unknown-vt-session,
        bacnet:ErrorCode-unsupported-object-type,
        bacnet:ErrorCode-value-not-initialized,
        bacnet:ErrorCode-value-out-of-range,
        bacnet:ErrorCode-value-too-long,
        bacnet:ErrorCode-vt-session-already-closed,
        bacnet:ErrorCode-vt-session-termination-failure,
        bacnet:ErrorCode-write-access-denied,
        bacnet:ErrorCode-write-bdt-failed .

bacnet:EscalatorMode a bacnet:ExtendedEnumerated,
        bacnet:StandardEnumerated ;
    bacnet:enumVendorMaximum "65535"^^xsd:nonNegativeInteger ;
    bacnet:enumVendorMinimum "1024"^^xsd:nonNegativeInteger ;
    bacnet:hasMember bacnet:EscalatorMode-down,
        bacnet:EscalatorMode-inspection,
        bacnet:EscalatorMode-out-of-service,
        bacnet:EscalatorMode-stop,
        bacnet:EscalatorMode-unknown,
        bacnet:EscalatorMode-up .

bacnet:EscalatorOperationDirection a bacnet:ExtendedEnumerated,
        bacnet:StandardEnumerated ;
    bacnet:enumVendorMaximum "65535"^^xsd:nonNegativeInteger ;
    bacnet:enumVendorMinimum "1024"^^xsd:nonNegativeInteger ;
    bacnet:hasMember bacnet:EscalatorOperationDirection-down-rated-speed,
        bacnet:EscalatorOperationDirection-down-reduced-speed,
        bacnet:EscalatorOperationDirection-stopped,
        bacnet:EscalatorOperationDirection-unknown,
        bacnet:EscalatorOperationDirection-up-rated-speed,
        bacnet:EscalatorOperationDirection-up-reduced-speed .

bacnet:EventState a bacnet:ExtendedEnumerated,
        bacnet:StandardEnumerated ;
    bacnet:enumVendorMaximum "65535"^^xsd:nonNegativeInteger ;
    bacnet:enumVendorMinimum "64"^^xsd:nonNegativeInteger ;
    bacnet:hasMember bacnet:EventState-fault,
        bacnet:EventState-high-limit,
        bacnet:EventState-life-safety-alarm,
        bacnet:EventState-low-limit,
        bacnet:EventState-normal,
        bacnet:EventState-offnormal .

bacnet:EventTransitionBits a bacnet:BitString ;
    bacnet:hasMember bacnet:EventTransitionBits-to-fault,
        bacnet:EventTransitionBits-to-normal,
        bacnet:EventTransitionBits-to-offnormal .

bacnet:EventType a bacnet:ExtendedEnumerated,
        bacnet:StandardEnumerated ;
    bacnet:enumVendorMaximum "65535"^^xsd:nonNegativeInteger ;
    bacnet:enumVendorMinimum "64"^^xsd:nonNegativeInteger ;
    bacnet:hasMember bacnet:EventType-access-event,
        bacnet:EventType-buffer-ready,
        bacnet:EventType-change-of-bitstring,
        bacnet:EventType-change-of-characterstring,
        bacnet:EventType-change-of-life-safety,
        bacnet:EventType-change-of-reliability,
        bacnet:EventType-change-of-state,
        bacnet:EventType-change-of-status-flags,
        bacnet:EventType-change-of-value,
        bacnet:EventType-command-failure,
        bacnet:EventType-double-out-of-range,
        bacnet:EventType-extended,
        bacnet:EventType-floating-limit,
        bacnet:EventType-out-of-range,
        bacnet:EventType-signed-out-of-range,
        bacnet:EventType-unsigned-out-of-range,
        bacnet:EventType-unsigned-range .

bacnet:FaultType a bacnet:StandardEnumerated ;
    bacnet:hasMember bacnet:FaultType-fault-characterstring,
        bacnet:FaultType-fault-extended,
        bacnet:FaultType-fault-life-safety,
        bacnet:FaultType-fault-state,
        bacnet:FaultType-fault-status-flags,
        bacnet:FaultType-none .

bacnet:FileAccessMethod a bacnet:StandardEnumerated ;
    bacnet:hasMember bacnet:FileAccessMethod-record-access,
        bacnet:FileAccessMethod-stream-access .

bacnet:IPMode a bacnet:StandardEnumerated ;
    bacnet:hasMember bacnet:IPMode-bbmd,
        bacnet:IPMode-foreign,
        bacnet:IPMode-normal .

bacnet:LifeSafetyMode a bacnet:StandardEnumerated ;
    bacnet:hasMember bacnet:LifeSafetyMode-armed,
        bacnet:LifeSafetyMode-automatic-release-disabled,
        bacnet:LifeSafetyMode-default,
        bacnet:LifeSafetyMode-disabled,
        bacnet:LifeSafetyMode-disarmed,
        bacnet:LifeSafetyMode-disconnected,
        bacnet:LifeSafetyMode-enabled,
        bacnet:LifeSafetyMode-fast,
        bacnet:LifeSafetyMode-manned,
        bacnet:LifeSafetyMode-off,
        bacnet:LifeSafetyMode-on,
        bacnet:LifeSafetyMode-prearmed,
        bacnet:LifeSafetyMode-slow,
        bacnet:LifeSafetyMode-test,
        bacnet:LifeSafetyMode-unmanned .

bacnet:LifeSafetyOperation a bacnet:ExtendedEnumerated,
        bacnet:StandardEnumerated ;
    bacnet:enumVendorMaximum "65535"^^xsd:nonNegativeInteger ;
    bacnet:enumVendorMinimum "64"^^xsd:nonNegativeInteger ;
    bacnet:hasMember bacnet:LifeSafetyOperation-none,
        bacnet:LifeSafetyOperation-reset,
        bacnet:LifeSafetyOperation-reset-alarm,
        bacnet:LifeSafetyOperation-reset-fault,
        bacnet:LifeSafetyOperation-silence,
        bacnet:LifeSafetyOperation-silence-audible,
        bacnet:LifeSafetyOperation-silence-visual,
        bacnet:LifeSafetyOperation-unsilence,
        bacnet:LifeSafetyOperation-unsilence-audible,
        bacnet:LifeSafetyOperation-unsilence-visual .

bacnet:LifeSafetyState a bacnet:StandardEnumerated ;
    bacnet:hasMember bacnet:LifeSafetyState-abnormal,
        bacnet:LifeSafetyState-active,
        bacnet:LifeSafetyState-alarm,
        bacnet:LifeSafetyState-blocked,
        bacnet:LifeSafetyState-delayed,
        bacnet:LifeSafetyState-duress,
        bacnet:LifeSafetyState-emergency-power,
        bacnet:LifeSafetyState-fault,
        bacnet:LifeSafetyState-fault-alarm,
        bacnet:LifeSafetyState-fault-pre-alarm,
        bacnet:LifeSafetyState-general-alarm,
        bacnet:LifeSafetyState-holdup,
        bacnet:LifeSafetyState-local-alarm,
        bacnet:LifeSafetyState-not-ready,
        bacnet:LifeSafetyState-pre-alarm,
        bacnet:LifeSafetyState-quiet,
        bacnet:LifeSafetyState-supervisory,
        bacnet:LifeSafetyState-tamper,
        bacnet:LifeSafetyState-tamper-alarm,
        bacnet:LifeSafetyState-test-active,
        bacnet:LifeSafetyState-test-alarm,
        bacnet:LifeSafetyState-test-fault,
        bacnet:LifeSafetyState-test-fault-alarm,
        bacnet:LifeSafetyState-test-supervisory .

bacnet:LiftCarDirection a bacnet:ExtendedEnumerated,
        bacnet:StandardEnumerated ;
    bacnet:enumVendorMaximum "65535"^^xsd:nonNegativeInteger ;
    bacnet:enumVendorMinimum "1024"^^xsd:nonNegativeInteger ;
    bacnet:hasMember bacnet:LiftCarDirection-down,
        bacnet:LiftCarDirection-none,
        bacnet:LiftCarDirection-stopped,
        bacnet:LiftCarDirection-unknown,
        bacnet:LiftCarDirection-up,
        bacnet:LiftCarDirection-up-and-down .

bacnet:LiftCarDoorCommand a bacnet:StandardEnumerated ;
    bacnet:hasMember bacnet:LiftCarDoorCommand-close,
        bacnet:LiftCarDoorCommand-none,
        bacnet:LiftCarDoorCommand-open .

bacnet:LiftCarDriveStatus a bacnet:ExtendedEnumerated,
        bacnet:StandardEnumerated ;
    bacnet:enumVendorMaximum "65535"^^xsd:nonNegativeInteger ;
    bacnet:enumVendorMinimum "1024"^^xsd:nonNegativeInteger ;
    bacnet:hasMember bacnet:LiftCarDriveStatus-accelerate,
        bacnet:LiftCarDriveStatus-braking,
        bacnet:LiftCarDriveStatus-decelerate,
        bacnet:LiftCarDriveStatus-multi-floor-jump,
        bacnet:LiftCarDriveStatus-rated-speed,
        bacnet:LiftCarDriveStatus-single-floor-jump,
        bacnet:LiftCarDriveStatus-stationary,
        bacnet:LiftCarDriveStatus-three-floor-jump,
        bacnet:LiftCarDriveStatus-two-floor-jump,
        bacnet:LiftCarDriveStatus-unknown .

bacnet:LiftCarMode a bacnet:ExtendedEnumerated,
        bacnet:StandardEnumerated ;
    bacnet:enumVendorMaximum "65535"^^xsd:nonNegativeInteger ;
    bacnet:enumVendorMinimum "1024"^^xsd:nonNegativeInteger ;
    bacnet:hasMember bacnet:LiftCarMode-attendant-control,
        bacnet:LiftCarMode-cabinet-recall,
        bacnet:LiftCarMode-earthquake-operation,
        bacnet:LiftCarMode-emergency-power,
        bacnet:LiftCarMode-fire-operation,
        bacnet:LiftCarMode-firefighter-control,
        bacnet:LiftCarMode-homing,
        bacnet:LiftCarMode-inspection,
        bacnet:LiftCarMode-normal,
        bacnet:LiftCarMode-occupant-evacuation,
        bacnet:LiftCarMode-out-of-service,
        bacnet:LiftCarMode-parking,
        bacnet:LiftCarMode-unknown,
        bacnet:LiftCarMode-vip .

bacnet:LiftFault a bacnet:ExtendedEnumerated,
        bacnet:StandardEnumerated ;
    bacnet:enumVendorMaximum "65535"^^xsd:nonNegativeInteger ;
    bacnet:enumVendorMinimum "1024"^^xsd:nonNegativeInteger ;
    bacnet:hasMember bacnet:LiftFault-call-button-stuck,
        bacnet:LiftFault-car-stopped-outside-landing-zone,
        bacnet:LiftFault-controller-fault,
        bacnet:LiftFault-controller-supply-fault,
        bacnet:LiftFault-door-closing-fault,
        bacnet:LiftFault-door-opening-fault,
        bacnet:LiftFault-drive-and-motor-fault,
        bacnet:LiftFault-drive-temperature-exceeded,
        bacnet:LiftFault-governor-and-safety-gear-fault,
        bacnet:LiftFault-lift-shaft-device-fault,
        bacnet:LiftFault-load-measurement-fault,
        bacnet:LiftFault-position-lost,
        bacnet:LiftFault-power-supply-fault,
        bacnet:LiftFault-runtime-limit-exceeded,
        bacnet:LiftFault-safety-interlock-fault,
        bacnet:LiftFault-self-test-failure,
        bacnet:LiftFault-start-failure .

bacnet:LiftGroupMode a bacnet:StandardEnumerated ;
    bacnet:hasMember bacnet:LiftGroupMode-down-peak,
        bacnet:LiftGroupMode-emergency-power,
        bacnet:LiftGroupMode-four-way,
        bacnet:LiftGroupMode-normal,
        bacnet:LiftGroupMode-two-way,
        bacnet:LiftGroupMode-unknown,
        bacnet:LiftGroupMode-up-peak .

bacnet:LightingInProgress a bacnet:StandardEnumerated ;
    bacnet:hasMember bacnet:LightingInProgress-fade-active,
        bacnet:LightingInProgress-idle,
        bacnet:LightingInProgress-not-controlled,
        bacnet:LightingInProgress-other,
        bacnet:LightingInProgress-ramp-active .

bacnet:LightingOperation a bacnet:ExtendedEnumerated,
        bacnet:StandardEnumerated ;
    bacnet:enumVendorMaximum "65535"^^xsd:nonNegativeInteger ;
    bacnet:enumVendorMinimum "256"^^xsd:nonNegativeInteger ;
    bacnet:hasMember bacnet:LightingOperation-fade-to,
        bacnet:LightingOperation-none,
        bacnet:LightingOperation-ramp-to,
        bacnet:LightingOperation-step-down,
        bacnet:LightingOperation-step-off,
        bacnet:LightingOperation-step-on,
        bacnet:LightingOperation-step-up,
        bacnet:LightingOperation-stop,
        bacnet:LightingOperation-warn,
        bacnet:LightingOperation-warn-off,
        bacnet:LightingOperation-warn-relinquish .

bacnet:LightingTransition a bacnet:ExtendedEnumerated,
        bacnet:StandardEnumerated ;
    bacnet:enumVendorMaximum "255"^^xsd:nonNegativeInteger ;
    bacnet:enumVendorMinimum "64"^^xsd:nonNegativeInteger ;
    bacnet:hasMember bacnet:LightingTransition-fade,
        bacnet:LightingTransition-none,
        bacnet:LightingTransition-ramp .

bacnet:LimitEnable a bacnet:BitString ;
    bacnet:hasMember bacnet:LimitEnable-high-limit-enable,
        bacnet:LimitEnable-low-limit-enable .

bacnet:LockStatus a bacnet:StandardEnumerated ;
    bacnet:hasMember bacnet:LockStatus-fault,
        bacnet:LockStatus-locked,
        bacnet:LockStatus-unknown,
        bacnet:LockStatus-unlocked .

bacnet:LogStatus a bacnet:BitString ;
    bacnet:hasMember bacnet:LogStatus-buffer-purged,
        bacnet:LogStatus-log-disabled,
        bacnet:LogStatus-log-interrupted .

bacnet:LoggingType a bacnet:ExtendedEnumerated,
        bacnet:StandardEnumerated ;
    bacnet:enumVendorMaximum "255"^^xsd:nonNegativeInteger ;
    bacnet:enumVendorMinimum "64"^^xsd:nonNegativeInteger ;
    bacnet:hasMember bacnet:LoggingType-cov,
        bacnet:LoggingType-polled,
        bacnet:LoggingType-triggered .

bacnet:Maintenance a bacnet:ExtendedEnumerated,
        bacnet:StandardEnumerated ;
    bacnet:enumVendorMaximum "65535"^^xsd:nonNegativeInteger ;
    bacnet:enumVendorMinimum "256"^^xsd:nonNegativeInteger ;
    bacnet:hasMember bacnet:Maintenance-need-service-inoperative,
        bacnet:Maintenance-need-service-operational,
        bacnet:Maintenance-none,
        bacnet:Maintenance-periodic-test .

bacnet:NetworkNumberQuality a bacnet:StandardEnumerated ;
    bacnet:hasMember bacnet:NetworkNumberQuality-configured,
        bacnet:NetworkNumberQuality-learned,
        bacnet:NetworkNumberQuality-learned-configured,
        bacnet:NetworkNumberQuality-unknown .

bacnet:NetworkPortCommand a bacnet:StandardEnumerated ;
    bacnet:hasMember bacnet:NetworkPortCommand-discard-changes,
        bacnet:NetworkPortCommand-disconnect,
        bacnet:NetworkPortCommand-idle,
        bacnet:NetworkPortCommand-renew-dhcP,
        bacnet:NetworkPortCommand-renew-fd-dregistration,
        bacnet:NetworkPortCommand-restart-autonegotiation,
        bacnet:NetworkPortCommand-restart-port,
        bacnet:NetworkPortCommand-restart-slave-discovery .

bacnet:NetworkType a bacnet:StandardEnumerated ;
    bacnet:hasMember bacnet:NetworkType-arcnet,
        bacnet:NetworkType-ethernet,
        bacnet:NetworkType-ipv4,
        bacnet:NetworkType-ipv6,
        bacnet:NetworkType-lontalk,
        bacnet:NetworkType-mstp,
        bacnet:NetworkType-ptp,
        bacnet:NetworkType-serial,
        bacnet:NetworkType-virtual,
        bacnet:NetworkType-zigbee .

bacnet:NodeType a bacnet:StandardEnumerated ;
    bacnet:hasMember bacnet:NodeType-area,
        bacnet:NodeType-collection,
        bacnet:NodeType-device,
        bacnet:NodeType-equipment,
        bacnet:NodeType-functional,
        bacnet:NodeType-network,
        bacnet:NodeType-organizational,
        bacnet:NodeType-other,
        bacnet:NodeType-point,
        bacnet:NodeType-property,
        bacnet:NodeType-system,
        bacnet:NodeType-unknown .

bacnet:NotifyType a bacnet:StandardEnumerated ;
    bacnet:hasMember bacnet:NotifyType-ack-notification,
        bacnet:NotifyType-alarm,
        bacnet:NotifyType-event .

bacnet:ObjectType a bacnet:ExtendedEnumerated,
        bacnet:StandardEnumerated ;
    bacnet:enumVendorMaximum "1023"^^xsd:nonNegativeInteger ;
    bacnet:enumVendorMinimum "128"^^xsd:nonNegativeInteger ;
    bacnet:hasMember bacnet:ObjectType-access-credential,
        bacnet:ObjectType-access-door,
        bacnet:ObjectType-access-point,
        bacnet:ObjectType-access-rights,
        bacnet:ObjectType-access-user,
        bacnet:ObjectType-access-zone,
        bacnet:ObjectType-accumulator,
        bacnet:ObjectType-alert-enrollment,
        bacnet:ObjectType-analog-input,
        bacnet:ObjectType-analog-output,
        bacnet:ObjectType-analog-value,
        bacnet:ObjectType-audit-log,
        bacnet:ObjectType-audit-reporter,
        bacnet:ObjectType-averaging,
        bacnet:ObjectType-binary-input,
        bacnet:ObjectType-binary-lighting-output,
        bacnet:ObjectType-binary-output,
        bacnet:ObjectType-binary-value,
        bacnet:ObjectType-bitstring-value,
        bacnet:ObjectType-calendar,
        bacnet:ObjectType-channel,
        bacnet:ObjectType-characterstring-value,
        bacnet:ObjectType-command,
        bacnet:ObjectType-credential-data-input,
        bacnet:ObjectType-date-pattern-value,
        bacnet:ObjectType-date-value,
        bacnet:ObjectType-datetime-pattern-value,
        bacnet:ObjectType-datetime-value,
        bacnet:ObjectType-device,
        bacnet:ObjectType-elevator-group,
        bacnet:ObjectType-escalator,
        bacnet:ObjectType-event-enrollment,
        bacnet:ObjectType-event-log,
        bacnet:ObjectType-file,
        bacnet:ObjectType-global-group,
        bacnet:ObjectType-group,
        bacnet:ObjectType-integer-value,
        bacnet:ObjectType-large-analog-value,
        bacnet:ObjectType-life-safety-point,
        bacnet:ObjectType-life-safety-zone,
        bacnet:ObjectType-lift,
        bacnet:ObjectType-lighting-output,
        bacnet:ObjectType-load-control,
        bacnet:ObjectType-loop,
        bacnet:ObjectType-multi-state-input,
        bacnet:ObjectType-multi-state-output,
        bacnet:ObjectType-multi-state-value,
        bacnet:ObjectType-network-port,
        bacnet:ObjectType-network-security,
        bacnet:ObjectType-notification-class,
        bacnet:ObjectType-notification-forwarder,
        bacnet:ObjectType-octetstring-value,
        bacnet:ObjectType-positive-integer-value,
        bacnet:ObjectType-program,
        bacnet:ObjectType-pulse-converter,
        bacnet:ObjectType-schedule,
        bacnet:ObjectType-structured-view,
        bacnet:ObjectType-time-pattern-value,
        bacnet:ObjectType-time-value,
        bacnet:ObjectType-timer,
        bacnet:ObjectType-trend-log,
        bacnet:ObjectType-trend-log-multiple .

bacnet:ObjectTypesSupported a bacnet:BitString ;
    bacnet:hasMember bacnet:ObjectTypesSupported-access-credential,
        bacnet:ObjectTypesSupported-access-door,
        bacnet:ObjectTypesSupported-access-point,
        bacnet:ObjectTypesSupported-access-rights,
        bacnet:ObjectTypesSupported-access-user,
        bacnet:ObjectTypesSupported-access-zone,
        bacnet:ObjectTypesSupported-accumulator,
        bacnet:ObjectTypesSupported-alert-enrollment,
        bacnet:ObjectTypesSupported-analog-input,
        bacnet:ObjectTypesSupported-analog-output,
        bacnet:ObjectTypesSupported-analog-value,
        bacnet:ObjectTypesSupported-averaging,
        bacnet:ObjectTypesSupported-binary-input,
        bacnet:ObjectTypesSupported-binary-output,
        bacnet:ObjectTypesSupported-binary-value,
        bacnet:ObjectTypesSupported-bitstring-value,
        bacnet:ObjectTypesSupported-calendar,
        bacnet:ObjectTypesSupported-channel,
        bacnet:ObjectTypesSupported-characterstring-value,
        bacnet:ObjectTypesSupported-command,
        bacnet:ObjectTypesSupported-credential-data-input,
        bacnet:ObjectTypesSupported-date-pattern-value,
        bacnet:ObjectTypesSupported-date-value,
        bacnet:ObjectTypesSupported-datetime-pattern-value,
        bacnet:ObjectTypesSupported-datetime-value,
        bacnet:ObjectTypesSupported-device,
        bacnet:ObjectTypesSupported-event-enrollment,
        bacnet:ObjectTypesSupported-event-log,
        bacnet:ObjectTypesSupported-file,
        bacnet:ObjectTypesSupported-global-group,
        bacnet:ObjectTypesSupported-group,
        bacnet:ObjectTypesSupported-integer-value,
        bacnet:ObjectTypesSupported-large-analog-value,
        bacnet:ObjectTypesSupported-life-safety-point,
        bacnet:ObjectTypesSupported-life-safety-zone,
        bacnet:ObjectTypesSupported-lighting-output,
        bacnet:ObjectTypesSupported-load-control,
        bacnet:ObjectTypesSupported-loop,
        bacnet:ObjectTypesSupported-multi-state-input,
        bacnet:ObjectTypesSupported-multi-state-output,
        bacnet:ObjectTypesSupported-multi-state-value,
        bacnet:ObjectTypesSupported-network-port,
        bacnet:ObjectTypesSupported-network-security,
        bacnet:ObjectTypesSupported-notification-class,
        bacnet:ObjectTypesSupported-notification-forwarder,
        bacnet:ObjectTypesSupported-octetstring-value,
        bacnet:ObjectTypesSupported-positive-integer-value,
        bacnet:ObjectTypesSupported-program,
        bacnet:ObjectTypesSupported-pulse-converter,
        bacnet:ObjectTypesSupported-schedule,
        bacnet:ObjectTypesSupported-structured-view,
        bacnet:ObjectTypesSupported-time-pattern-value,
        bacnet:ObjectTypesSupported-time-value,
        bacnet:ObjectTypesSupported-trend-log,
        bacnet:ObjectTypesSupported-trend-log-multiple .

bacnet:PriorityFilter a bacnet:BitString ;
    bacnet:hasMember bacnet:PriorityFilter-automatic-life-safety,
        bacnet:PriorityFilter-critical-equipment-controls,
        bacnet:PriorityFilter-manual-life-safety,
        bacnet:PriorityFilter-manual-operator,
        bacnet:PriorityFilter-minimum-on-off,
        bacnet:PriorityFilter-priority10,
        bacnet:PriorityFilter-priority11,
        bacnet:PriorityFilter-priority12,
        bacnet:PriorityFilter-priority13,
        bacnet:PriorityFilter-priority14,
        bacnet:PriorityFilter-priority15,
        bacnet:PriorityFilter-priority16,
        bacnet:PriorityFilter-priority3,
        bacnet:PriorityFilter-priority4,
        bacnet:PriorityFilter-priority7,
        bacnet:PriorityFilter-priority9 .

bacnet:ProgramError a bacnet:ExtendedEnumerated,
        bacnet:StandardEnumerated ;
    bacnet:enumVendorMaximum "65535"^^xsd:nonNegativeInteger ;
    bacnet:enumVendorMinimum "64"^^xsd:nonNegativeInteger ;
    bacnet:hasMember bacnet:ProgramError-internal,
        bacnet:ProgramError-load-failed,
        bacnet:ProgramError-normal,
        bacnet:ProgramError-other,
        bacnet:ProgramError-program .

bacnet:ProgramRequest a bacnet:StandardEnumerated ;
    bacnet:hasMember bacnet:ProgramRequest-halt,
        bacnet:ProgramRequest-load,
        bacnet:ProgramRequest-ready,
        bacnet:ProgramRequest-restart,
        bacnet:ProgramRequest-run,
        bacnet:ProgramRequest-unload .

bacnet:ProgramState a bacnet:StandardEnumerated ;
    bacnet:hasMember bacnet:ProgramState-halted,
        bacnet:ProgramState-idle,
        bacnet:ProgramState-loading,
        bacnet:ProgramState-running,
        bacnet:ProgramState-unloading,
        bacnet:ProgramState-waiting .

bacnet:ProprietaryProperty a rdf:Property ;
    rdfs:subPropertyOf bacnet:Property .

bacnet:ProtocolLevel a bacnet:StandardEnumerated ;
    bacnet:hasMember bacnet:ProtocolLevel-bacnet-application,
        bacnet:ProtocolLevel-non-bacnet-application,
        bacnet:ProtocolLevel-physical,
        bacnet:ProtocolLevel-protocol .

bacnet:Relationship a bacnet:ExtendedEnumerated,
        bacnet:StandardEnumerated ;
    bacnet:enumVendorMaximum "65535"^^xsd:nonNegativeInteger ;
    bacnet:enumVendorMinimum "1024"^^xsd:nonNegativeInteger ;
    bacnet:hasMember bacnet:Relationship-adjusted-by,
        bacnet:Relationship-adjusts,
        bacnet:Relationship-commanded-by,
        bacnet:Relationship-commands,
        bacnet:Relationship-contained-by,
        bacnet:Relationship-contains,
        bacnet:Relationship-default,
        bacnet:Relationship-egress,
        bacnet:Relationship-ingress,
        bacnet:Relationship-receives-air,
        bacnet:Relationship-receives-cool-air,
        bacnet:Relationship-receives-cool-water,
        bacnet:Relationship-receives-gas,
        bacnet:Relationship-receives-hot-air,
        bacnet:Relationship-receives-hot-water,
        bacnet:Relationship-receives-power,
        bacnet:Relationship-receives-steam,
        bacnet:Relationship-receives-water,
        bacnet:Relationship-supplies-air,
        bacnet:Relationship-supplies-cool-air,
        bacnet:Relationship-supplies-cool-water,
        bacnet:Relationship-supplies-gas,
        bacnet:Relationship-supplies-hot-air,
        bacnet:Relationship-supplies-hot-water,
        bacnet:Relationship-supplies-power,
        bacnet:Relationship-supplies-steam,
        bacnet:Relationship-supplies-water,
        bacnet:Relationship-unknown,
        bacnet:Relationship-used-by,
        bacnet:Relationship-uses .

bacnet:RestartReason a bacnet:ExtendedEnumerated,
        bacnet:StandardEnumerated ;
    bacnet:enumVendorMaximum "255"^^xsd:nonNegativeInteger ;
    bacnet:enumVendorMinimum "64"^^xsd:nonNegativeInteger ;
    bacnet:hasMember bacnet:RestartReason-coldstart,
        bacnet:RestartReason-detected-power-lost,
        bacnet:RestartReason-detected-powered-off,
        bacnet:RestartReason-hardware-watchdog,
        bacnet:RestartReason-software-watchdog,
        bacnet:RestartReason-suspended,
        bacnet:RestartReason-unknown,
        bacnet:RestartReason-warmstart .

bacnet:RouterEntryStatus a bacnet:StandardEnumerated ;
    bacnet:hasMember bacnet:RouterEntryStatus-available,
        bacnet:RouterEntryStatus-busy,
        bacnet:RouterEntryStatus-disconnected .

bacnet:SecurityLevel a bacnet:StandardEnumerated ;
    bacnet:hasMember bacnet:SecurityLevel-encrypted,
        bacnet:SecurityLevel-encrypted-end-to-end,
        bacnet:SecurityLevel-incapable,
        bacnet:SecurityLevel-plain,
        bacnet:SecurityLevel-signed,
        bacnet:SecurityLevel-signed-end-to-end .

bacnet:SecurityPolicy a bacnet:StandardEnumerated ;
    bacnet:hasMember bacnet:SecurityPolicy-encrypted-trusted,
        bacnet:SecurityPolicy-plain-non-trusted,
        bacnet:SecurityPolicy-plain-trusted,
        bacnet:SecurityPolicy-signed-trusted .

bacnet:Segmentation a bacnet:StandardEnumerated ;
    bacnet:hasMember bacnet:Segmentation-no-segmentation,
        bacnet:Segmentation-segmented-both,
        bacnet:Segmentation-segmented-receive,
        bacnet:Segmentation-segmented-transmit .

bacnet:ServicesSupported a bacnet:BitString ;
    bacnet:hasMember bacnet:ServicesSupported-acknowledge-alarm,
        bacnet:ServicesSupported-add-list-element,
        bacnet:ServicesSupported-atomic-read-file,
        bacnet:ServicesSupported-atomic-write-file,
        bacnet:ServicesSupported-confirmed-cov-notification,
        bacnet:ServicesSupported-confirmed-event-notification,
        bacnet:ServicesSupported-confirmed-private-transfer,
        bacnet:ServicesSupported-confirmed-text-message,
        bacnet:ServicesSupported-create-object,
        bacnet:ServicesSupported-delete-object,
        bacnet:ServicesSupported-device-communication-control,
        bacnet:ServicesSupported-get-alarm-summary,
        bacnet:ServicesSupported-get-enrollment-summary,
        bacnet:ServicesSupported-get-event-information,
        bacnet:ServicesSupported-i-am,
        bacnet:ServicesSupported-i-have,
        bacnet:ServicesSupported-life-safety-operation,
        bacnet:ServicesSupported-read-property,
        bacnet:ServicesSupported-read-property-multiple,
        bacnet:ServicesSupported-read-range,
        bacnet:ServicesSupported-reinitialize-device,
        bacnet:ServicesSupported-remove-list-element,
        bacnet:ServicesSupported-subscribe-coV,
        bacnet:ServicesSupported-subscribe-cov-property,
        bacnet:ServicesSupported-time-synchronization,
        bacnet:ServicesSupported-unconfirmed-cov-notification,
        bacnet:ServicesSupported-unconfirmed-event-notification,
        bacnet:ServicesSupported-unconfirmed-private-transfer,
        bacnet:ServicesSupported-unconfirmed-text-message,
        bacnet:ServicesSupported-utc-time-synchronization,
        bacnet:ServicesSupported-vt-close,
        bacnet:ServicesSupported-vt-data,
        bacnet:ServicesSupported-vt-open,
        bacnet:ServicesSupported-who-has,
        bacnet:ServicesSupported-who-is,
        bacnet:ServicesSupported-write-group,
        bacnet:ServicesSupported-write-property,
        bacnet:ServicesSupported-write-property-multiple .

bacnet:ShedState a bacnet:StandardEnumerated ;
    bacnet:hasMember bacnet:ShedState-shed-compliant,
        bacnet:ShedState-shed-inactive,
        bacnet:ShedState-shed-non-compliant,
        bacnet:ShedState-shed-request-pending .

bacnet:SilencedState a bacnet:ExtendedEnumerated,
        bacnet:StandardEnumerated ;
    bacnet:enumVendorMaximum "65535"^^xsd:nonNegativeInteger ;
    bacnet:enumVendorMinimum "64"^^xsd:nonNegativeInteger ;
    bacnet:hasMember bacnet:SilencedState-all-silenced,
        bacnet:SilencedState-audible-silenced,
        bacnet:SilencedState-unsilenced,
        bacnet:SilencedState-visible-silenced .

bacnet:StatusFlags a bacnet:BitString ;
    bacnet:hasMember bacnet:StatusFlags-fault,
        bacnet:StatusFlags-in-alarm,
        bacnet:StatusFlags-out-of-service,
        bacnet:StatusFlags-overridden .

bacnet:TimerState a bacnet:StandardEnumerated ;
    bacnet:hasMember bacnet:TimerState-expired,
        bacnet:TimerState-idle,
        bacnet:TimerState-running .

bacnet:TimerTransition a bacnet:StandardEnumerated ;
    bacnet:hasMember bacnet:TimerTransition-expired-to-idle,
        bacnet:TimerTransition-expired-to-running,
        bacnet:TimerTransition-forced-to-expired,
        bacnet:TimerTransition-idle-to-running,
        bacnet:TimerTransition-none,
        bacnet:TimerTransition-running-to-expired,
        bacnet:TimerTransition-running-to-idle,
        bacnet:TimerTransition-running-to-running .

bacnet:VTClass a bacnet:ExtendedEnumerated,
        bacnet:StandardEnumerated ;
    bacnet:enumVendorMaximum "65535"^^xsd:nonNegativeInteger ;
    bacnet:enumVendorMinimum "64"^^xsd:nonNegativeInteger ;
    bacnet:hasMember bacnet:VTClass-ansi-x3-64,
        bacnet:VTClass-dec-vt100,
        bacnet:VTClass-dec-vt220,
        bacnet:VTClass-dec-vt52,
        bacnet:VTClass-default-terminal,
        bacnet:VTClass-hp-700-94,
        bacnet:VTClass-ibm-3130 .

bacnet:WritableProperty a rdf:Property ;
    rdfs:comment "The property is required to be present, readable, and writable using BACnet services." ;
    rdfs:subPropertyOf bacnet:StandardProperty .

bacnet:WriteStatus a bacnet:StandardEnumerated ;
    bacnet:hasMember bacnet:WriteStatus-failed,
        bacnet:WriteStatus-idle,
        bacnet:WriteStatus-in-progress,
        bacnet:WriteStatus-successful .

bacnet:all a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-all ;
    bacnet:propertyName "all" ;
    bacnet:propertyRef bacnet:All .

bacnet:bitVendorMaximum a rdf:Property ;
    rdfs:comment "The maximum value a vendor may use for a bit to extend a standard bit string." ;
    rdfs:domain bacnet:ExtendedEnumerated ;
    rdfs:range xsd:nonNegativeInteger .

bacnet:bitVendorMinimum a rdf:Property ;
    rdfs:comment "The minimum value a vendor may use for a bit to extend a standard bit string." ;
    rdfs:domain bacnet:ExtendedEnumerated ;
    rdfs:range xsd:nonNegativeInteger .

bacnet:description a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-description ;
    bacnet:propertyName "description" ;
    bacnet:propertyRef bacnet:Description .

bacnet:enumVendorMaximum a rdf:Property ;
    rdfs:comment "The maximum value a vendor may use for an enumeration used to extend an extended enumerated." ;
    rdfs:domain bacnet:ExtendedEnumerated ;
    rdfs:range xsd:nonNegativeInteger .

bacnet:enumVendorMinimum a rdf:Property ;
    rdfs:comment "The minimum value a vendor may use for an enumeration used to extend an extended enumerated." ;
    rdfs:domain bacnet:ExtendedEnumerated ;
    rdfs:range xsd:nonNegativeInteger .

bacnet:list-of-session-keys a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-list-of-session-keys ;
    bacnet:propertyName "list-of-session-keys" ;
    bacnet:propertyRef bacnet:List_Of_Session_Keys .

bacnet:master-exemption a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-master-exemption ;
    bacnet:propertyName "master-exemption" ;
    bacnet:propertyRef bacnet:Master_Exemption .

bacnet:occupancy-exemption a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-occupancy-exemption ;
    bacnet:propertyName "occupancy-exemption" ;
    bacnet:propertyRef bacnet:Occupancy_Exemption .

bacnet:optional a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-optional ;
    bacnet:propertyName "optional" ;
    bacnet:propertyRef bacnet:Optional .

bacnet:passback-exemption a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-passback-exemption ;
    bacnet:propertyName "passback-exemption" ;
    bacnet:propertyRef bacnet:Passback_Exemption .

bacnet:required a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-required ;
    bacnet:propertyName "required" ;
    bacnet:propertyRef bacnet:Required .

bacnet:vendorId a rdf:Property ;
    rdfs:comment "The vendor identifier assigned to the vendor by ASHRAE." ;
    rdfs:domain bacnet:Vendor ;
    rdfs:range xsd:nonNegativeInteger .

unit:DEG_C a qudt:Unit ;
    rdfs:label "Degree Celsius"@en ;
    qudt:hasQuantityKind quantitykind:Temperature ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

unit:DEG_F a qudt:Unit ;
    rdfs:label "Degree Fahrenheit"@en ;
    qudt:hasQuantityKind quantitykind:Temperature ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/unit> .

bacnet:AccessAuthenticationFactorDisable-disabled a bacnet:StandardEnumeration ;
    bacnet:enumName "disabled" ;
    bacnet:enumValue "1"^^xsd:nonNegativeInteger .

bacnet:AccessAuthenticationFactorDisable-disabled-damaged a bacnet:StandardEnumeration ;
    bacnet:enumName "disabled-damaged" ;
    bacnet:enumValue "4"^^xsd:nonNegativeInteger .

bacnet:AccessAuthenticationFactorDisable-disabled-destroyed a bacnet:StandardEnumeration ;
    bacnet:enumName "disabled-destroyed" ;
    bacnet:enumValue "5"^^xsd:nonNegativeInteger .

bacnet:AccessAuthenticationFactorDisable-disabled-lost a bacnet:StandardEnumeration ;
    bacnet:enumName "disabled-lost" ;
    bacnet:enumValue "2"^^xsd:nonNegativeInteger .

bacnet:AccessAuthenticationFactorDisable-disabled-stolen a bacnet:StandardEnumeration ;
    bacnet:enumName "disabled-stolen" ;
    bacnet:enumValue "3"^^xsd:nonNegativeInteger .

bacnet:AccessAuthenticationFactorDisable-none a bacnet:StandardEnumeration ;
    bacnet:enumName "none" ;
    bacnet:enumValue "0"^^xsd:nonNegativeInteger .

bacnet:AccessCredentialDisable-disable a bacnet:StandardEnumeration ;
    bacnet:enumName "disable" ;
    bacnet:enumValue "1"^^xsd:nonNegativeInteger .

bacnet:AccessCredentialDisable-disable-lockout a bacnet:StandardEnumeration ;
    bacnet:enumName "disable-lockout" ;
    bacnet:enumValue "3"^^xsd:nonNegativeInteger .

bacnet:AccessCredentialDisable-disable-manual a bacnet:StandardEnumeration ;
    bacnet:enumName "disable-manual" ;
    bacnet:enumValue "2"^^xsd:nonNegativeInteger .

bacnet:AccessCredentialDisable-none a bacnet:StandardEnumeration ;
    bacnet:enumName "none" ;
    bacnet:enumValue "0"^^xsd:nonNegativeInteger .

bacnet:AccessCredentialDisableReason-disabled a bacnet:StandardEnumeration ;
    bacnet:enumName "disabled" ;
    bacnet:enumValue "0"^^xsd:nonNegativeInteger .

bacnet:AccessCredentialDisableReason-disabled-expired a bacnet:StandardEnumeration ;
    bacnet:enumName "disabled-expired" ;
    bacnet:enumValue "4"^^xsd:nonNegativeInteger .

bacnet:AccessCredentialDisableReason-disabled-inactivity a bacnet:StandardEnumeration ;
    bacnet:enumName "disabled-inactivity" ;
    bacnet:enumValue "8"^^xsd:nonNegativeInteger .

bacnet:AccessCredentialDisableReason-disabled-lockout a bacnet:StandardEnumeration ;
    bacnet:enumName "disabled-lockout" ;
    bacnet:enumValue "5"^^xsd:nonNegativeInteger .

bacnet:AccessCredentialDisableReason-disabled-manual a bacnet:StandardEnumeration ;
    bacnet:enumName "disabled-manual" ;
    bacnet:enumValue "9"^^xsd:nonNegativeInteger .

bacnet:AccessCredentialDisableReason-disabled-max-days a bacnet:StandardEnumeration ;
    bacnet:enumName "disabled-max-days" ;
    bacnet:enumValue "6"^^xsd:nonNegativeInteger .

bacnet:AccessCredentialDisableReason-disabled-max-uses a bacnet:StandardEnumeration ;
    bacnet:enumName "disabled-max-uses" ;
    bacnet:enumValue "7"^^xsd:nonNegativeInteger .

bacnet:AccessCredentialDisableReason-disabled-needs-provisioning a bacnet:StandardEnumeration ;
    bacnet:enumName "disabled-needs-provisioning" ;
    bacnet:enumValue "1"^^xsd:nonNegativeInteger .

bacnet:AccessCredentialDisableReason-disabled-not-yet-active a bacnet:StandardEnumeration ;
    bacnet:enumName "disabled-not-yet-active" ;
    bacnet:enumValue "3"^^xsd:nonNegativeInteger .

bacnet:AccessCredentialDisableReason-disabled-unassigned a bacnet:StandardEnumeration ;
    bacnet:enumName "disabled-unassigned" ;
    bacnet:enumValue "2"^^xsd:nonNegativeInteger .

bacnet:AccessEvent-accompaniment-by a bacnet:StandardEnumeration ;
    bacnet:enumName "accompaniment-by" ;
    bacnet:enumValue "12"^^xsd:nonNegativeInteger .

bacnet:AccessEvent-authentication-factor-read a bacnet:StandardEnumeration ;
    bacnet:enumName "authentication-factor-read" ;
    bacnet:enumValue "13"^^xsd:nonNegativeInteger .

bacnet:AccessEvent-authorization-delayed a bacnet:StandardEnumeration ;
    bacnet:enumName "authorization-delayed" ;
    bacnet:enumValue "14"^^xsd:nonNegativeInteger .

bacnet:AccessEvent-denied-authentication-factor-damaged a bacnet:StandardEnumeration ;
    bacnet:enumName "denied-authentication-factor-damaged" ;
    bacnet:enumValue "145"^^xsd:nonNegativeInteger .

bacnet:AccessEvent-denied-authentication-factor-destroyed a bacnet:StandardEnumeration ;
    bacnet:enumName "denied-authentication-factor-destroyed" ;
    bacnet:enumValue "146"^^xsd:nonNegativeInteger .

bacnet:AccessEvent-denied-authentication-factor-disabled a bacnet:StandardEnumeration ;
    bacnet:enumName "denied-authentication-factor-disabled" ;
    bacnet:enumValue "147"^^xsd:nonNegativeInteger .

bacnet:AccessEvent-denied-authentication-factor-error a bacnet:StandardEnumeration ;
    bacnet:enumName "denied-authentication-factor-error" ;
    bacnet:enumValue "148"^^xsd:nonNegativeInteger .

bacnet:AccessEvent-denied-authentication-factor-lost a bacnet:StandardEnumeration ;
    bacnet:enumName "denied-authentication-factor-lost" ;
    bacnet:enumValue "143"^^xsd:nonNegativeInteger .

bacnet:AccessEvent-denied-authentication-factor-stolen a bacnet:StandardEnumeration ;
    bacnet:enumName "denied-authentication-factor-stolen" ;
    bacnet:enumValue "144"^^xsd:nonNegativeInteger .

bacnet:AccessEvent-denied-authentication-factor-timeout a bacnet:StandardEnumeration ;
    bacnet:enumName "denied-authentication-factor-timeout" ;
    bacnet:enumValue "131"^^xsd:nonNegativeInteger .

bacnet:AccessEvent-denied-authentication-unavailable a bacnet:StandardEnumeration ;
    bacnet:enumName "denied-authentication-unavailable" ;
    bacnet:enumValue "130"^^xsd:nonNegativeInteger .

bacnet:AccessEvent-denied-credential-disabled a bacnet:StandardEnumeration ;
    bacnet:enumName "denied-credential-disabled" ;
    bacnet:enumValue "158"^^xsd:nonNegativeInteger .

bacnet:AccessEvent-denied-credential-expired a bacnet:StandardEnumeration ;
    bacnet:enumName "denied-credential-expired" ;
    bacnet:enumValue "152"^^xsd:nonNegativeInteger .

bacnet:AccessEvent-denied-credential-inactivity a bacnet:StandardEnumeration ;
    bacnet:enumName "denied-credential-inactivity" ;
    bacnet:enumValue "157"^^xsd:nonNegativeInteger .

bacnet:AccessEvent-denied-credential-lockout a bacnet:StandardEnumeration ;
    bacnet:enumName "denied-credential-lockout" ;
    bacnet:enumValue "154"^^xsd:nonNegativeInteger .

bacnet:AccessEvent-denied-credential-manual-disable a bacnet:StandardEnumeration ;
    bacnet:enumName "denied-credential-manual-disable" ;
    bacnet:enumValue "153"^^xsd:nonNegativeInteger .

bacnet:AccessEvent-denied-credential-max-days a bacnet:StandardEnumeration ;
    bacnet:enumName "denied-credential-max-days" ;
    bacnet:enumValue "155"^^xsd:nonNegativeInteger .

bacnet:AccessEvent-denied-credential-max-uses a bacnet:StandardEnumeration ;
    bacnet:enumName "denied-credential-max-uses" ;
    bacnet:enumValue "156"^^xsd:nonNegativeInteger .

bacnet:AccessEvent-denied-credential-not-provisioned a bacnet:StandardEnumeration ;
    bacnet:enumName "denied-credential-not-provisioned" ;
    bacnet:enumValue "150"^^xsd:nonNegativeInteger .

bacnet:AccessEvent-denied-credential-not-yet-active a bacnet:StandardEnumeration ;
    bacnet:enumName "denied-credential-not-yet-active" ;
    bacnet:enumValue "151"^^xsd:nonNegativeInteger .

bacnet:AccessEvent-denied-credential-unassigned a bacnet:StandardEnumeration ;
    bacnet:enumName "denied-credential-unassigned" ;
    bacnet:enumValue "149"^^xsd:nonNegativeInteger .

bacnet:AccessEvent-denied-deny-all a bacnet:StandardEnumeration ;
    bacnet:enumName "denied-deny-all" ;
    bacnet:enumValue "128"^^xsd:nonNegativeInteger .

bacnet:AccessEvent-denied-incorrect-accompaniment a bacnet:StandardEnumeration ;
    bacnet:enumName "denied-incorrect-accompaniment" ;
    bacnet:enumValue "160"^^xsd:nonNegativeInteger .

bacnet:AccessEvent-denied-incorrect-authentication-factor a bacnet:StandardEnumeration ;
    bacnet:enumName "denied-incorrect-authentication-factor" ;
    bacnet:enumValue "132"^^xsd:nonNegativeInteger .

bacnet:AccessEvent-denied-lockout a bacnet:StandardEnumeration ;
    bacnet:enumName "denied-lockout" ;
    bacnet:enumValue "161"^^xsd:nonNegativeInteger .

bacnet:AccessEvent-denied-lower-occupancy-limit a bacnet:StandardEnumeration ;
    bacnet:enumName "denied-lower-occupancy-limit" ;
    bacnet:enumValue "141"^^xsd:nonNegativeInteger .

bacnet:AccessEvent-denied-max-attempts a bacnet:StandardEnumeration ;
    bacnet:enumName "denied-max-attempts" ;
    bacnet:enumValue "140"^^xsd:nonNegativeInteger .

bacnet:AccessEvent-denied-no-access-rights a bacnet:StandardEnumeration ;
    bacnet:enumName "denied-no-access-rights" ;
    bacnet:enumValue "135"^^xsd:nonNegativeInteger .

bacnet:AccessEvent-denied-no-accompaniment a bacnet:StandardEnumeration ;
    bacnet:enumName "denied-no-accompaniment" ;
    bacnet:enumValue "159"^^xsd:nonNegativeInteger .

bacnet:AccessEvent-denied-other a bacnet:StandardEnumeration ;
    bacnet:enumName "denied-other" ;
    bacnet:enumValue "164"^^xsd:nonNegativeInteger .

bacnet:AccessEvent-denied-out-of-time-range a bacnet:StandardEnumeration ;
    bacnet:enumName "denied-out-of-time-range" ;
    bacnet:enumValue "136"^^xsd:nonNegativeInteger .

bacnet:AccessEvent-denied-passback a bacnet:StandardEnumeration ;
    bacnet:enumName "denied-passback" ;
    bacnet:enumValue "138"^^xsd:nonNegativeInteger .

bacnet:AccessEvent-denied-point-no-access-rights a bacnet:StandardEnumeration ;
    bacnet:enumName "denied-point-no-access-rights" ;
    bacnet:enumValue "134"^^xsd:nonNegativeInteger .

bacnet:AccessEvent-denied-threat-level a bacnet:StandardEnumeration ;
    bacnet:enumName "denied-threat-level" ;
    bacnet:enumValue "137"^^xsd:nonNegativeInteger .

bacnet:AccessEvent-denied-unexpected-location-usage a bacnet:StandardEnumeration ;
    bacnet:enumName "denied-unexpected-location-usage" ;
    bacnet:enumValue "139"^^xsd:nonNegativeInteger .

bacnet:AccessEvent-denied-unknown-credential a bacnet:StandardEnumeration ;
    bacnet:enumName "denied-unknown-credential" ;
    bacnet:enumValue "129"^^xsd:nonNegativeInteger .

bacnet:AccessEvent-denied-upper-occupancy-limit a bacnet:StandardEnumeration ;
    bacnet:enumName "denied-upper-occupancy-limit" ;
    bacnet:enumValue "142"^^xsd:nonNegativeInteger .

bacnet:AccessEvent-denied-verification-failed a bacnet:StandardEnumeration ;
    bacnet:enumName "denied-verification-failed" ;
    bacnet:enumValue "162"^^xsd:nonNegativeInteger .

bacnet:AccessEvent-denied-verification-timeout a bacnet:StandardEnumeration ;
    bacnet:enumName "denied-verification-timeout" ;
    bacnet:enumValue "163"^^xsd:nonNegativeInteger .

bacnet:AccessEvent-denied-zone-no-access-rights a bacnet:StandardEnumeration ;
    bacnet:enumName "denied-zone-no-access-rights" ;
    bacnet:enumValue "133"^^xsd:nonNegativeInteger .

bacnet:AccessEvent-duress a bacnet:StandardEnumeration ;
    bacnet:enumName "duress" ;
    bacnet:enumValue "4"^^xsd:nonNegativeInteger .

bacnet:AccessEvent-granted a bacnet:StandardEnumeration ;
    bacnet:enumName "granted" ;
    bacnet:enumValue "1"^^xsd:nonNegativeInteger .

bacnet:AccessEvent-locked-by-higher-priority a bacnet:StandardEnumeration ;
    bacnet:enumName "locked-by-higher-priority" ;
    bacnet:enumValue "9"^^xsd:nonNegativeInteger .

bacnet:AccessEvent-lockout-max-attempts a bacnet:StandardEnumeration ;
    bacnet:enumName "lockout-max-attempts" ;
    bacnet:enumValue "6"^^xsd:nonNegativeInteger .

bacnet:AccessEvent-lockout-other a bacnet:StandardEnumeration ;
    bacnet:enumName "lockout-other" ;
    bacnet:enumValue "7"^^xsd:nonNegativeInteger .

bacnet:AccessEvent-lockout-relinquished a bacnet:StandardEnumeration ;
    bacnet:enumName "lockout-relinquished" ;
    bacnet:enumValue "8"^^xsd:nonNegativeInteger .

bacnet:AccessEvent-muster a bacnet:StandardEnumeration ;
    bacnet:enumName "muster" ;
    bacnet:enumValue "2"^^xsd:nonNegativeInteger .

bacnet:AccessEvent-none a bacnet:StandardEnumeration ;
    bacnet:enumName "none" ;
    bacnet:enumValue "0"^^xsd:nonNegativeInteger .

bacnet:AccessEvent-out-of-service a bacnet:StandardEnumeration ;
    bacnet:enumName "out-of-service" ;
    bacnet:enumValue "10"^^xsd:nonNegativeInteger .

bacnet:AccessEvent-out-of-service-relinquished a bacnet:StandardEnumeration ;
    bacnet:enumName "out-of-service-relinquished" ;
    bacnet:enumValue "11"^^xsd:nonNegativeInteger .

bacnet:AccessEvent-passback-detected a bacnet:StandardEnumeration ;
    bacnet:enumName "passback-detected" ;
    bacnet:enumValue "3"^^xsd:nonNegativeInteger .

bacnet:AccessEvent-trace a bacnet:StandardEnumeration ;
    bacnet:enumName "trace" ;
    bacnet:enumValue "5"^^xsd:nonNegativeInteger .

bacnet:AccessEvent-verification-required a bacnet:StandardEnumeration ;
    bacnet:enumName "verification-required" ;
    bacnet:enumValue "15"^^xsd:nonNegativeInteger .

bacnet:AccessPassbackMode-hard-passback a bacnet:StandardEnumeration ;
    bacnet:enumName "hard-passback" ;
    bacnet:enumValue "1"^^xsd:nonNegativeInteger .

bacnet:AccessPassbackMode-passback-off a bacnet:StandardEnumeration ;
    bacnet:enumName "passback-off" ;
    bacnet:enumValue "0"^^xsd:nonNegativeInteger .

bacnet:AccessPassbackMode-soft-passback a bacnet:StandardEnumeration ;
    bacnet:enumName "soft-passback" ;
    bacnet:enumValue "2"^^xsd:nonNegativeInteger .

bacnet:AccessRuleLocationSpecifier-all a bacnet:StandardEnumeration ;
    bacnet:enumName "all" ;
    bacnet:enumValue "1"^^xsd:nonNegativeInteger .

bacnet:AccessRuleLocationSpecifier-specified a bacnet:StandardEnumeration ;
    bacnet:enumName "specified" ;
    bacnet:enumValue "0"^^xsd:nonNegativeInteger .

bacnet:AccessRuleTimeRangeSpecifier-always a bacnet:StandardEnumeration ;
    bacnet:enumName "always" ;
    bacnet:enumValue "1"^^xsd:nonNegativeInteger .

bacnet:AccessRuleTimeRangeSpecifier-specified a bacnet:StandardEnumeration ;
    bacnet:enumName "specified" ;
    bacnet:enumValue "0"^^xsd:nonNegativeInteger .

bacnet:AccessUserType-asset a bacnet:StandardEnumeration ;
    bacnet:enumName "asset" ;
    bacnet:enumValue "0"^^xsd:nonNegativeInteger .

bacnet:AccessUserType-group a bacnet:StandardEnumeration ;
    bacnet:enumName "group" ;
    bacnet:enumValue "1"^^xsd:nonNegativeInteger .

bacnet:AccessUserType-person a bacnet:StandardEnumeration ;
    bacnet:enumName "person" ;
    bacnet:enumValue "2"^^xsd:nonNegativeInteger .

bacnet:AccessZoneOccupancyState-above-upper-limit a bacnet:StandardEnumeration ;
    bacnet:enumName "above-upper-limit" ;
    bacnet:enumValue "4"^^xsd:nonNegativeInteger .

bacnet:AccessZoneOccupancyState-at-lower-limit a bacnet:StandardEnumeration ;
    bacnet:enumName "at-lower-limit" ;
    bacnet:enumValue "2"^^xsd:nonNegativeInteger .

bacnet:AccessZoneOccupancyState-at-upper-limit a bacnet:StandardEnumeration ;
    bacnet:enumName "at-upper-limit" ;
    bacnet:enumValue "3"^^xsd:nonNegativeInteger .

bacnet:AccessZoneOccupancyState-below-lower-limit a bacnet:StandardEnumeration ;
    bacnet:enumName "below-lower-limit" ;
    bacnet:enumValue "1"^^xsd:nonNegativeInteger .

bacnet:AccessZoneOccupancyState-disabled a bacnet:StandardEnumeration ;
    bacnet:enumName "disabled" ;
    bacnet:enumValue "5"^^xsd:nonNegativeInteger .

bacnet:AccessZoneOccupancyState-normal a bacnet:StandardEnumeration ;
    bacnet:enumName "normal" ;
    bacnet:enumValue "0"^^xsd:nonNegativeInteger .

bacnet:AccessZoneOccupancyState-not-supported a bacnet:StandardEnumeration ;
    bacnet:enumName "not-supported" ;
    bacnet:enumValue "6"^^xsd:nonNegativeInteger .

bacnet:AccumulatorRecordAccumulatorStatus-abnormal a bacnet:StandardEnumeration ;
    bacnet:enumName "abnormal" ;
    bacnet:enumValue "3"^^xsd:nonNegativeInteger .

bacnet:AccumulatorRecordAccumulatorStatus-failed a bacnet:StandardEnumeration ;
    bacnet:enumName "failed" ;
    bacnet:enumValue "4"^^xsd:nonNegativeInteger .

bacnet:AccumulatorRecordAccumulatorStatus-normal a bacnet:StandardEnumeration ;
    bacnet:enumName "normal" ;
    bacnet:enumValue "0"^^xsd:nonNegativeInteger .

bacnet:AccumulatorRecordAccumulatorStatus-recovered a bacnet:StandardEnumeration ;
    bacnet:enumName "recovered" ;
    bacnet:enumValue "2"^^xsd:nonNegativeInteger .

bacnet:AccumulatorRecordAccumulatorStatus-starting a bacnet:StandardEnumeration ;
    bacnet:enumName "starting" ;
    bacnet:enumValue "1"^^xsd:nonNegativeInteger .

bacnet:Action-direct a bacnet:StandardEnumeration ;
    bacnet:enumName "direct" ;
    bacnet:enumValue "0"^^xsd:nonNegativeInteger .

bacnet:Action-reverse a bacnet:StandardEnumeration ;
    bacnet:enumName "reverse" ;
    bacnet:enumValue "1"^^xsd:nonNegativeInteger .

bacnet:All a bacnet:Property .

bacnet:ArrayOfActionList a sh:NodeShape ;
    rdfs:comment "Array Of Action List" ;
    rdfs:subClassOf bacnet:Array ;
    sh:property [ sh:node bacnet:ActionList ;
            sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] .

bacnet:ArrayOfAssignedAccessRights a sh:NodeShape ;
    rdfs:comment "Array Of Assigned Access Rights" ;
    rdfs:subClassOf bacnet:Array ;
    sh:property [ sh:node bacnet:AssignedAccessRights ;
            sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] .

bacnet:ArrayOfAssignedLandingCalls a sh:NodeShape ;
    rdfs:comment "Array Of Assigned Landing Calls" ;
    rdfs:subClassOf bacnet:Array ;
    sh:property [ sh:node bacnet:AssignedLandingCalls ;
            sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] .

bacnet:ArrayOfAuthenticationFactorFormat a sh:NodeShape ;
    rdfs:comment "Array Of Authentication Factor Format" ;
    rdfs:subClassOf bacnet:Array ;
    sh:property [ sh:node bacnet:AuthenticationFactorFormat ;
            sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] .

bacnet:ArrayOfAuthenticationPolicy a sh:NodeShape ;
    rdfs:comment "Array Of Authentication Policy" ;
    rdfs:subClassOf bacnet:Array ;
    sh:property [ sh:node bacnet:AuthenticationPolicy ;
            sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] .

bacnet:ArrayOfBitString a sh:NodeShape ;
    rdfs:comment "Array Of Bit String" ;
    rdfs:subClassOf bacnet:Array ;
    sh:property [ sh:datatype xsd:string ;
            sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] .

bacnet:ArrayOfCredentialAuthenticationFactor a sh:NodeShape ;
    rdfs:comment "Array Of Credential Authentication Factor" ;
    rdfs:subClassOf bacnet:Array ;
    sh:property [ sh:node bacnet:CredentialAuthenticationFactor ;
            sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] .

bacnet:ArrayOfDailySchedule a sh:NodeShape ;
    rdfs:comment "Array Of Daily Schedule" ;
    rdfs:subClassOf bacnet:Array ;
    sh:property [ sh:node bacnet:DailySchedule ;
            sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] .

bacnet:ArrayOfDoorStatus a sh:NodeShape ;
    rdfs:comment "Array Of Door Status" ;
    rdfs:subClassOf bacnet:Array ;
    sh:property [ sh:datatype xsd:string ;
            sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] .

bacnet:ArrayOfLandingDoorStatus a sh:NodeShape ;
    rdfs:comment "Array Of Landing Door Status" ;
    rdfs:subClassOf bacnet:Array ;
    sh:property [ sh:node bacnet:LandingDoorStatus ;
            sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] .

bacnet:ArrayOfLiftCarCallList a sh:NodeShape ;
    rdfs:comment "Array Of Lift Car Call List" ;
    rdfs:subClassOf bacnet:Array ;
    sh:property [ sh:node bacnet:LiftCarCallList ;
            sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] .

bacnet:ArrayOfLiftCarDoorCommand a sh:NodeShape ;
    rdfs:comment "Array Of Lift Car Door Command" ;
    rdfs:subClassOf bacnet:Array ;
    sh:property [ sh:datatype xsd:string ;
            sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] .

bacnet:ArrayOfNameValue a sh:NodeShape ;
    rdfs:comment "Array Of Name Value" ;
    rdfs:subClassOf bacnet:Array ;
    sh:property [ sh:datatype bacnet:NameValue ;
            sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] .

bacnet:ArrayOfNameValueCollection a sh:NodeShape ;
    rdfs:comment "Array Of Name Value Collection" ;
    rdfs:subClassOf bacnet:Array ;
    sh:property [ sh:node bacnet:NameValueCollection ;
            sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] .

bacnet:ArrayOfNetworkSecurityPolicy a sh:NodeShape ;
    rdfs:comment "Array Of Network Security Policy" ;
    rdfs:subClassOf bacnet:Array ;
    sh:property [ sh:node bacnet:NetworkSecurityPolicy ;
            sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] .

bacnet:ArrayOfNodeType a sh:NodeShape ;
    rdfs:comment "Array Of Node Type" ;
    rdfs:subClassOf bacnet:Array ;
    sh:property [ sh:datatype xsd:string ;
            sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] .

bacnet:ArrayOfObjectSelector a sh:NodeShape ;
    rdfs:comment "Array Of Object Selector" ;
    rdfs:subClassOf bacnet:Array ;
    sh:property [ sh:node bacnet:ObjectSelector ;
            sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] .

bacnet:ArrayOfOctetString a sh:NodeShape ;
    rdfs:comment "Array Of Octet String" ;
    rdfs:subClassOf bacnet:Array ;
    sh:property [ sh:datatype xsd:hexBinary ;
            sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] .

bacnet:ArrayOfPortPermission a sh:NodeShape ;
    rdfs:comment "Array Of Port Permission" ;
    rdfs:subClassOf bacnet:Array ;
    sh:property [ sh:node bacnet:PortPermission ;
            sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] .

bacnet:ArrayOfPropertyAccessResult a sh:NodeShape ;
    rdfs:comment "Array Of Property Access Result" ;
    rdfs:subClassOf bacnet:Array ;
    sh:property [ sh:node bacnet:PropertyAccessResult ;
            sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] .

bacnet:ArrayOfPropertyIdentifier a sh:NodeShape ;
    rdfs:comment "Array Of Property Identifier" ;
    rdfs:subClassOf bacnet:Array ;
    sh:property [ sh:class bacnet:PropertyIdentifier ;
            sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] .

bacnet:ArrayOfReal a sh:NodeShape ;
    rdfs:comment "Array Of Real" ;
    rdfs:subClassOf bacnet:Array ;
    sh:property [ sh:datatype xsd:float ;
            sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] .

bacnet:ArrayOfRelationship a sh:NodeShape ;
    rdfs:comment "Array Of Relationship" ;
    rdfs:subClassOf bacnet:Array ;
    sh:property [ sh:datatype xsd:string ;
            sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] .

bacnet:ArrayOfSecurityKeySet a sh:NodeShape ;
    rdfs:comment "Array Of Security Key Set" ;
    rdfs:subClassOf bacnet:Array ;
    sh:property [ sh:node bacnet:SecurityKeySet ;
            sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] .

bacnet:ArrayOfSpecialEvent a sh:NodeShape ;
    rdfs:comment "Array Of Special Event" ;
    rdfs:subClassOf bacnet:Array ;
    sh:property [ sh:node bacnet:SpecialEvent ;
            sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] .

bacnet:ArrayOfStageLimitValue a sh:NodeShape ;
    rdfs:comment "Array Of Stage Limit Value" ;
    rdfs:subClassOf bacnet:Array ;
    sh:property [ sh:node bacnet:StageLimitValue ;
            sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] .

bacnet:ArrayOfTimerStateChangeValue a sh:NodeShape ;
    rdfs:comment "Array Of Timer State Change Value" ;
    rdfs:subClassOf bacnet:Array ;
    sh:property [ sh:node bacnet:TimerStateChangeValue ;
            sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] .

bacnet:ArrayOfUnsigned8 a sh:NodeShape ;
    rdfs:comment "Array Of Unsigned8" ;
    rdfs:subClassOf bacnet:Array ;
    sh:property [ sh:node bacnet:Unsigned8 ;
            sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] .

bacnet:AuditLevel-audit-all a bacnet:StandardEnumeration ;
    bacnet:enumName "audit-all" ;
    bacnet:enumValue "1"^^xsd:nonNegativeInteger .

bacnet:AuditLevel-audit-config a bacnet:StandardEnumeration ;
    bacnet:enumName "audit-config" ;
    bacnet:enumValue "2"^^xsd:nonNegativeInteger .

bacnet:AuditLevel-default a bacnet:StandardEnumeration ;
    bacnet:enumName "default" ;
    bacnet:enumValue "3"^^xsd:nonNegativeInteger .

bacnet:AuditLevel-none a bacnet:StandardEnumeration ;
    bacnet:enumName "none" ;
    bacnet:enumValue "0"^^xsd:nonNegativeInteger .

bacnet:AuditOperation-acknowledge-alarm a bacnet:StandardEnumeration ;
    bacnet:enumName "acknowledge-alarm" ;
    bacnet:enumValue "5"^^xsd:nonNegativeInteger .

bacnet:AuditOperation-auditing-failure a bacnet:StandardEnumeration ;
    bacnet:enumName "auditing-failure" ;
    bacnet:enumValue "13"^^xsd:nonNegativeInteger .

bacnet:AuditOperation-create a bacnet:StandardEnumeration ;
    bacnet:enumName "create" ;
    bacnet:enumValue "2"^^xsd:nonNegativeInteger .

bacnet:AuditOperation-delete a bacnet:StandardEnumeration ;
    bacnet:enumName "delete" ;
    bacnet:enumValue "3"^^xsd:nonNegativeInteger .

bacnet:AuditOperation-device-backup a bacnet:StandardEnumeration ;
    bacnet:enumName "device-backup" ;
    bacnet:enumValue "9"^^xsd:nonNegativeInteger .

bacnet:AuditOperation-device-disable-comm a bacnet:StandardEnumeration ;
    bacnet:enumName "device-disable-comm" ;
    bacnet:enumValue "6"^^xsd:nonNegativeInteger .

bacnet:AuditOperation-device-enable-comm a bacnet:StandardEnumeration ;
    bacnet:enumName "device-enable-comm" ;
    bacnet:enumValue "7"^^xsd:nonNegativeInteger .

bacnet:AuditOperation-device-reset a bacnet:StandardEnumeration ;
    bacnet:enumName "device-reset" ;
    bacnet:enumValue "8"^^xsd:nonNegativeInteger .

bacnet:AuditOperation-device-restore a bacnet:StandardEnumeration ;
    bacnet:enumName "device-restore" ;
    bacnet:enumValue "10"^^xsd:nonNegativeInteger .

bacnet:AuditOperation-general a bacnet:StandardEnumeration ;
    bacnet:enumName "general" ;
    bacnet:enumValue "15"^^xsd:nonNegativeInteger .

bacnet:AuditOperation-life-safety a bacnet:StandardEnumeration ;
    bacnet:enumName "life-safety" ;
    bacnet:enumValue "4"^^xsd:nonNegativeInteger .

bacnet:AuditOperation-network-changes a bacnet:StandardEnumeration ;
    bacnet:enumName "network-changes" ;
    bacnet:enumValue "14"^^xsd:nonNegativeInteger .

bacnet:AuditOperation-notification a bacnet:StandardEnumeration ;
    bacnet:enumName "notification" ;
    bacnet:enumValue "12"^^xsd:nonNegativeInteger .

bacnet:AuditOperation-read a bacnet:StandardEnumeration ;
    bacnet:enumName "read" ;
    bacnet:enumValue "0"^^xsd:nonNegativeInteger .

bacnet:AuditOperation-subscription a bacnet:StandardEnumeration ;
    bacnet:enumName "subscription" ;
    bacnet:enumValue "11"^^xsd:nonNegativeInteger .

bacnet:AuditOperation-write a bacnet:StandardEnumeration ;
    bacnet:enumName "write" ;
    bacnet:enumValue "1"^^xsd:nonNegativeInteger .

bacnet:AuditOperationFlags-acknowledge-alarm a bacnet:Bit ;
    bacnet:bitName "acknowledge-alarm" ;
    bacnet:bitValue "5"^^xsd:nonNegativeInteger .

bacnet:AuditOperationFlags-auditing-failure a bacnet:Bit ;
    bacnet:bitName "auditing-failure" ;
    bacnet:bitValue "13"^^xsd:nonNegativeInteger .

bacnet:AuditOperationFlags-create a bacnet:Bit ;
    bacnet:bitName "create" ;
    bacnet:bitValue "2"^^xsd:nonNegativeInteger .

bacnet:AuditOperationFlags-delete a bacnet:Bit ;
    bacnet:bitName "delete" ;
    bacnet:bitValue "3"^^xsd:nonNegativeInteger .

bacnet:AuditOperationFlags-device-backup a bacnet:Bit ;
    bacnet:bitName "device-backup" ;
    bacnet:bitValue "9"^^xsd:nonNegativeInteger .

bacnet:AuditOperationFlags-device-disable-comm a bacnet:Bit ;
    bacnet:bitName "device-disable-comm" ;
    bacnet:bitValue "6"^^xsd:nonNegativeInteger .

bacnet:AuditOperationFlags-device-enable-comm a bacnet:Bit ;
    bacnet:bitName "device-enable-comm" ;
    bacnet:bitValue "7"^^xsd:nonNegativeInteger .

bacnet:AuditOperationFlags-device-reset a bacnet:Bit ;
    bacnet:bitName "device-reset" ;
    bacnet:bitValue "8"^^xsd:nonNegativeInteger .

bacnet:AuditOperationFlags-device-restore a bacnet:Bit ;
    bacnet:bitName "device-restore" ;
    bacnet:bitValue "10"^^xsd:nonNegativeInteger .

bacnet:AuditOperationFlags-general a bacnet:Bit ;
    bacnet:bitName "general" ;
    bacnet:bitValue "15"^^xsd:nonNegativeInteger .

bacnet:AuditOperationFlags-life-safety a bacnet:Bit ;
    bacnet:bitName "life-safety" ;
    bacnet:bitValue "4"^^xsd:nonNegativeInteger .

bacnet:AuditOperationFlags-network-changes a bacnet:Bit ;
    bacnet:bitName "network-changes" ;
    bacnet:bitValue "14"^^xsd:nonNegativeInteger .

bacnet:AuditOperationFlags-notification a bacnet:Bit ;
    bacnet:bitName "notification" ;
    bacnet:bitValue "12"^^xsd:nonNegativeInteger .

bacnet:AuditOperationFlags-read a bacnet:Bit ;
    bacnet:bitName "read" ;
    bacnet:bitValue "0"^^xsd:nonNegativeInteger .

bacnet:AuditOperationFlags-subscription a bacnet:Bit ;
    bacnet:bitName "subscription" ;
    bacnet:bitValue "11"^^xsd:nonNegativeInteger .

bacnet:AuditOperationFlags-write a bacnet:Bit ;
    bacnet:bitName "write" ;
    bacnet:bitValue "1"^^xsd:nonNegativeInteger .

bacnet:AuthenticationFactorType-aba-track2 a bacnet:StandardEnumeration ;
    bacnet:enumName "aba-track2" ;
    bacnet:enumValue "7"^^xsd:nonNegativeInteger .

bacnet:AuthenticationFactorType-cbeffA a bacnet:StandardEnumeration ;
    bacnet:enumName "cbeffA" ;
    bacnet:enumValue "21"^^xsd:nonNegativeInteger .

bacnet:AuthenticationFactorType-cbeffB a bacnet:StandardEnumeration ;
    bacnet:enumName "cbeffB" ;
    bacnet:enumValue "22"^^xsd:nonNegativeInteger .

bacnet:AuthenticationFactorType-cbeffC a bacnet:StandardEnumeration ;
    bacnet:enumName "cbeffC" ;
    bacnet:enumValue "23"^^xsd:nonNegativeInteger .

bacnet:AuthenticationFactorType-chuid a bacnet:StandardEnumeration ;
    bacnet:enumName "chuid" ;
    bacnet:enumValue "18"^^xsd:nonNegativeInteger .

bacnet:AuthenticationFactorType-chuid-full a bacnet:StandardEnumeration ;
    bacnet:enumName "chuid-full" ;
    bacnet:enumValue "19"^^xsd:nonNegativeInteger .

bacnet:AuthenticationFactorType-custom a bacnet:StandardEnumeration ;
    bacnet:enumName "custom" ;
    bacnet:enumValue "2"^^xsd:nonNegativeInteger .

bacnet:AuthenticationFactorType-error a bacnet:StandardEnumeration ;
    bacnet:enumName "error" ;
    bacnet:enumValue "1"^^xsd:nonNegativeInteger .

bacnet:AuthenticationFactorType-facility16card32 a bacnet:StandardEnumeration ;
    bacnet:enumName "facility16card32" ;
    bacnet:enumValue "11"^^xsd:nonNegativeInteger .

bacnet:AuthenticationFactorType-facility32card32 a bacnet:StandardEnumeration ;
    bacnet:enumName "facility32card32" ;
    bacnet:enumValue "12"^^xsd:nonNegativeInteger .

bacnet:AuthenticationFactorType-fasc-nbcd a bacnet:StandardEnumeration ;
    bacnet:enumName "fasc-nbcd" ;
    bacnet:enumValue "14"^^xsd:nonNegativeInteger .

bacnet:AuthenticationFactorType-fasc-nlarge a bacnet:StandardEnumeration ;
    bacnet:enumName "fasc-nlarge" ;
    bacnet:enumValue "15"^^xsd:nonNegativeInteger .

bacnet:AuthenticationFactorType-fasc-nlarge-bcd a bacnet:StandardEnumeration ;
    bacnet:enumName "fasc-nlarge-bcd" ;
    bacnet:enumValue "16"^^xsd:nonNegativeInteger .

bacnet:AuthenticationFactorType-fascN a bacnet:StandardEnumeration ;
    bacnet:enumName "fascN" ;
    bacnet:enumValue "13"^^xsd:nonNegativeInteger .

bacnet:AuthenticationFactorType-gsa75 a bacnet:StandardEnumeration ;
    bacnet:enumName "gsa75" ;
    bacnet:enumValue "17"^^xsd:nonNegativeInteger .

bacnet:AuthenticationFactorType-guid a bacnet:StandardEnumeration ;
    bacnet:enumName "guid" ;
    bacnet:enumValue "20"^^xsd:nonNegativeInteger .

bacnet:AuthenticationFactorType-simple-alpha-numeric a bacnet:StandardEnumeration ;
    bacnet:enumName "simple-alpha-numeric" ;
    bacnet:enumValue "6"^^xsd:nonNegativeInteger .

bacnet:AuthenticationFactorType-simple-number16 a bacnet:StandardEnumeration ;
    bacnet:enumName "simple-number16" ;
    bacnet:enumValue "3"^^xsd:nonNegativeInteger .

bacnet:AuthenticationFactorType-simple-number32 a bacnet:StandardEnumeration ;
    bacnet:enumName "simple-number32" ;
    bacnet:enumValue "4"^^xsd:nonNegativeInteger .

bacnet:AuthenticationFactorType-simple-number56 a bacnet:StandardEnumeration ;
    bacnet:enumName "simple-number56" ;
    bacnet:enumValue "5"^^xsd:nonNegativeInteger .

bacnet:AuthenticationFactorType-undefined a bacnet:StandardEnumeration ;
    bacnet:enumName "undefined" ;
    bacnet:enumValue "0"^^xsd:nonNegativeInteger .

bacnet:AuthenticationFactorType-user-password a bacnet:StandardEnumeration ;
    bacnet:enumName "user-password" ;
    bacnet:enumValue "24"^^xsd:nonNegativeInteger .

bacnet:AuthenticationFactorType-wiegand26 a bacnet:StandardEnumeration ;
    bacnet:enumName "wiegand26" ;
    bacnet:enumValue "8"^^xsd:nonNegativeInteger .

bacnet:AuthenticationFactorType-wiegand37 a bacnet:StandardEnumeration ;
    bacnet:enumName "wiegand37" ;
    bacnet:enumValue "9"^^xsd:nonNegativeInteger .

bacnet:AuthenticationFactorType-wiegand37facility a bacnet:StandardEnumeration ;
    bacnet:enumName "wiegand37facility" ;
    bacnet:enumValue "10"^^xsd:nonNegativeInteger .

bacnet:AuthenticationStatus-disabled a bacnet:StandardEnumeration ;
    bacnet:enumName "disabled" ;
    bacnet:enumValue "2"^^xsd:nonNegativeInteger .

bacnet:AuthenticationStatus-in-progress a bacnet:StandardEnumeration ;
    bacnet:enumName "in-progress" ;
    bacnet:enumValue "6"^^xsd:nonNegativeInteger .

bacnet:AuthenticationStatus-not-ready a bacnet:StandardEnumeration ;
    bacnet:enumName "not-ready" ;
    bacnet:enumValue "0"^^xsd:nonNegativeInteger .

bacnet:AuthenticationStatus-ready a bacnet:StandardEnumeration ;
    bacnet:enumName "ready" ;
    bacnet:enumValue "1"^^xsd:nonNegativeInteger .

bacnet:AuthenticationStatus-waiting-for-accompaniment a bacnet:StandardEnumeration ;
    bacnet:enumName "waiting-for-accompaniment" ;
    bacnet:enumValue "4"^^xsd:nonNegativeInteger .

bacnet:AuthenticationStatus-waiting-for-authentication-factor a bacnet:StandardEnumeration ;
    bacnet:enumName "waiting-for-authentication-factor" ;
    bacnet:enumValue "3"^^xsd:nonNegativeInteger .

bacnet:AuthenticationStatus-waiting-for-verification a bacnet:StandardEnumeration ;
    bacnet:enumName "waiting-for-verification" ;
    bacnet:enumValue "5"^^xsd:nonNegativeInteger .

bacnet:AuthorizationException-access-rights a bacnet:StandardEnumeration ;
    bacnet:enumName "access-rights" ;
    bacnet:enumValue "2"^^xsd:nonNegativeInteger .

bacnet:AuthorizationException-authorization-delay a bacnet:StandardEnumeration ;
    bacnet:enumName "authorization-delay" ;
    bacnet:enumValue "6"^^xsd:nonNegativeInteger .

bacnet:AuthorizationException-deny a bacnet:StandardEnumeration ;
    bacnet:enumName "deny" ;
    bacnet:enumValue "4"^^xsd:nonNegativeInteger .

bacnet:AuthorizationException-lockout a bacnet:StandardEnumeration ;
    bacnet:enumName "lockout" ;
    bacnet:enumValue "3"^^xsd:nonNegativeInteger .

bacnet:AuthorizationException-occupancy-check a bacnet:StandardEnumeration ;
    bacnet:enumName "occupancy-check" ;
    bacnet:enumValue "1"^^xsd:nonNegativeInteger .

bacnet:AuthorizationException-passback a bacnet:StandardEnumeration ;
    bacnet:enumName "passback" ;
    bacnet:enumValue "0"^^xsd:nonNegativeInteger .

bacnet:AuthorizationException-verification a bacnet:StandardEnumeration ;
    bacnet:enumName "verification" ;
    bacnet:enumValue "5"^^xsd:nonNegativeInteger .

bacnet:AuthorizationMode-authorization-delayed a bacnet:StandardEnumeration ;
    bacnet:enumName "authorization-delayed" ;
    bacnet:enumValue "4"^^xsd:nonNegativeInteger .

bacnet:AuthorizationMode-authorize a bacnet:StandardEnumeration ;
    bacnet:enumName "authorize" ;
    bacnet:enumValue "0"^^xsd:nonNegativeInteger .

bacnet:AuthorizationMode-deny-all a bacnet:StandardEnumeration ;
    bacnet:enumName "deny-all" ;
    bacnet:enumValue "2"^^xsd:nonNegativeInteger .

bacnet:AuthorizationMode-grant-active a bacnet:StandardEnumeration ;
    bacnet:enumName "grant-active" ;
    bacnet:enumValue "1"^^xsd:nonNegativeInteger .

bacnet:AuthorizationMode-none a bacnet:StandardEnumeration ;
    bacnet:enumName "none" ;
    bacnet:enumValue "5"^^xsd:nonNegativeInteger .

bacnet:AuthorizationMode-verification-required a bacnet:StandardEnumeration ;
    bacnet:enumName "verification-required" ;
    bacnet:enumValue "3"^^xsd:nonNegativeInteger .

bacnet:BackupState-backup-failure a bacnet:StandardEnumeration ;
    bacnet:enumName "backup-failure" ;
    bacnet:enumValue "5"^^xsd:nonNegativeInteger .

bacnet:BackupState-idle a bacnet:StandardEnumeration ;
    bacnet:enumName "idle" ;
    bacnet:enumValue "0"^^xsd:nonNegativeInteger .

bacnet:BackupState-performing-abackup a bacnet:StandardEnumeration ;
    bacnet:enumName "performing-abackup" ;
    bacnet:enumValue "3"^^xsd:nonNegativeInteger .

bacnet:BackupState-performing-arestore a bacnet:StandardEnumeration ;
    bacnet:enumName "performing-arestore" ;
    bacnet:enumValue "4"^^xsd:nonNegativeInteger .

bacnet:BackupState-preparing-for-backup a bacnet:StandardEnumeration ;
    bacnet:enumName "preparing-for-backup" ;
    bacnet:enumValue "1"^^xsd:nonNegativeInteger .

bacnet:BackupState-preparing-for-restore a bacnet:StandardEnumeration ;
    bacnet:enumName "preparing-for-restore" ;
    bacnet:enumValue "2"^^xsd:nonNegativeInteger .

bacnet:BackupState-restore-failure a bacnet:StandardEnumeration ;
    bacnet:enumName "restore-failure" ;
    bacnet:enumValue "6"^^xsd:nonNegativeInteger .

bacnet:BinaryLightingPV-off a bacnet:StandardEnumeration ;
    bacnet:enumName "off" ;
    bacnet:enumValue "0"^^xsd:nonNegativeInteger .

bacnet:BinaryLightingPV-on a bacnet:StandardEnumeration ;
    bacnet:enumName "on" ;
    bacnet:enumValue "1"^^xsd:nonNegativeInteger .

bacnet:BinaryLightingPV-stop a bacnet:StandardEnumeration ;
    bacnet:enumName "stop" ;
    bacnet:enumValue "5"^^xsd:nonNegativeInteger .

bacnet:BinaryLightingPV-warn a bacnet:StandardEnumeration ;
    bacnet:enumName "warn" ;
    bacnet:enumValue "2"^^xsd:nonNegativeInteger .

bacnet:BinaryLightingPV-warn-off a bacnet:StandardEnumeration ;
    bacnet:enumName "warn-off" ;
    bacnet:enumValue "3"^^xsd:nonNegativeInteger .

bacnet:BinaryLightingPV-warn-relinquish a bacnet:StandardEnumeration ;
    bacnet:enumName "warn-relinquish" ;
    bacnet:enumValue "4"^^xsd:nonNegativeInteger .

bacnet:BinaryPV-active a bacnet:StandardEnumeration ;
    bacnet:enumName "active" ;
    bacnet:enumValue "1"^^xsd:nonNegativeInteger .

bacnet:BinaryPV-inactive a bacnet:StandardEnumeration ;
    bacnet:enumName "inactive" ;
    bacnet:enumValue "0"^^xsd:nonNegativeInteger .

bacnet:DaysOfWeek-friday a bacnet:Bit ;
    bacnet:bitName "friday" ;
    bacnet:bitValue "4"^^xsd:nonNegativeInteger .

bacnet:DaysOfWeek-monday a bacnet:Bit ;
    bacnet:bitName "monday" ;
    bacnet:bitValue "0"^^xsd:nonNegativeInteger .

bacnet:DaysOfWeek-saturday a bacnet:Bit ;
    bacnet:bitName "saturday" ;
    bacnet:bitValue "5"^^xsd:nonNegativeInteger .

bacnet:DaysOfWeek-sunday a bacnet:Bit ;
    bacnet:bitName "sunday" ;
    bacnet:bitValue "6"^^xsd:nonNegativeInteger .

bacnet:DaysOfWeek-thursday a bacnet:Bit ;
    bacnet:bitName "thursday" ;
    bacnet:bitValue "3"^^xsd:nonNegativeInteger .

bacnet:DaysOfWeek-tuesday a bacnet:Bit ;
    bacnet:bitName "tuesday" ;
    bacnet:bitValue "1"^^xsd:nonNegativeInteger .

bacnet:DaysOfWeek-wednesday a bacnet:Bit ;
    bacnet:bitName "wednesday" ;
    bacnet:bitValue "2"^^xsd:nonNegativeInteger .

bacnet:Description a bacnet:Property .

bacnet:DeviceStatus-backup-in-progress a bacnet:StandardEnumeration ;
    bacnet:enumName "backup-in-progress" ;
    bacnet:enumValue "5"^^xsd:nonNegativeInteger .

bacnet:DeviceStatus-download-in-progress a bacnet:StandardEnumeration ;
    bacnet:enumName "download-in-progress" ;
    bacnet:enumValue "3"^^xsd:nonNegativeInteger .

bacnet:DeviceStatus-download-required a bacnet:StandardEnumeration ;
    bacnet:enumName "download-required" ;
    bacnet:enumValue "2"^^xsd:nonNegativeInteger .

bacnet:DeviceStatus-non-operational a bacnet:StandardEnumeration ;
    bacnet:enumName "non-operational" ;
    bacnet:enumValue "4"^^xsd:nonNegativeInteger .

bacnet:DeviceStatus-operational a bacnet:StandardEnumeration ;
    bacnet:enumName "operational" ;
    bacnet:enumValue "0"^^xsd:nonNegativeInteger .

bacnet:DeviceStatus-operational-read-only a bacnet:StandardEnumeration ;
    bacnet:enumName "operational-read-only" ;
    bacnet:enumValue "1"^^xsd:nonNegativeInteger .

bacnet:DoorAlarmState-alarm a bacnet:StandardEnumeration ;
    bacnet:enumName "alarm" ;
    bacnet:enumValue "1"^^xsd:nonNegativeInteger .

bacnet:DoorAlarmState-door-fault a bacnet:StandardEnumeration ;
    bacnet:enumName "door-fault" ;
    bacnet:enumValue "5"^^xsd:nonNegativeInteger .

bacnet:DoorAlarmState-door-open-too-long a bacnet:StandardEnumeration ;
    bacnet:enumName "door-open-too-long" ;
    bacnet:enumValue "2"^^xsd:nonNegativeInteger .

bacnet:DoorAlarmState-egress-open a bacnet:StandardEnumeration ;
    bacnet:enumName "egress-open" ;
    bacnet:enumValue "8"^^xsd:nonNegativeInteger .

bacnet:DoorAlarmState-forced-open a bacnet:StandardEnumeration ;
    bacnet:enumName "forced-open" ;
    bacnet:enumValue "3"^^xsd:nonNegativeInteger .

bacnet:DoorAlarmState-free-access a bacnet:StandardEnumeration ;
    bacnet:enumName "free-access" ;
    bacnet:enumValue "7"^^xsd:nonNegativeInteger .

bacnet:DoorAlarmState-lock-down a bacnet:StandardEnumeration ;
    bacnet:enumName "lock-down" ;
    bacnet:enumValue "6"^^xsd:nonNegativeInteger .

bacnet:DoorAlarmState-normal a bacnet:StandardEnumeration ;
    bacnet:enumName "normal" ;
    bacnet:enumValue "0"^^xsd:nonNegativeInteger .

bacnet:DoorAlarmState-tamper a bacnet:StandardEnumeration ;
    bacnet:enumName "tamper" ;
    bacnet:enumValue "4"^^xsd:nonNegativeInteger .

bacnet:DoorSecuredStatus-secured a bacnet:StandardEnumeration ;
    bacnet:enumName "secured" ;
    bacnet:enumValue "0"^^xsd:nonNegativeInteger .

bacnet:DoorSecuredStatus-unknown a bacnet:StandardEnumeration ;
    bacnet:enumName "unknown" ;
    bacnet:enumValue "2"^^xsd:nonNegativeInteger .

bacnet:DoorSecuredStatus-unsecured a bacnet:StandardEnumeration ;
    bacnet:enumName "unsecured" ;
    bacnet:enumValue "1"^^xsd:nonNegativeInteger .

bacnet:DoorStatus-closed a bacnet:StandardEnumeration ;
    bacnet:enumName "closed" ;
    bacnet:enumValue "0"^^xsd:nonNegativeInteger .

bacnet:DoorStatus-opened a bacnet:StandardEnumeration ;
    bacnet:enumName "opened" ;
    bacnet:enumValue "1"^^xsd:nonNegativeInteger .

bacnet:DoorStatus-unknown a bacnet:StandardEnumeration ;
    bacnet:enumName "unknown" ;
    bacnet:enumValue "2"^^xsd:nonNegativeInteger .

bacnet:DoorValue-extended-pulse-unlock a bacnet:StandardEnumeration ;
    bacnet:enumName "extended-pulse-unlock" ;
    bacnet:enumValue "3"^^xsd:nonNegativeInteger .

bacnet:DoorValue-lock a bacnet:StandardEnumeration ;
    bacnet:enumName "lock" ;
    bacnet:enumValue "0"^^xsd:nonNegativeInteger .

bacnet:DoorValue-pulse-unlock a bacnet:StandardEnumeration ;
    bacnet:enumName "pulse-unlock" ;
    bacnet:enumValue "2"^^xsd:nonNegativeInteger .

bacnet:DoorValue-unlock a bacnet:StandardEnumeration ;
    bacnet:enumName "unlock" ;
    bacnet:enumValue "1"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-ampere-seconds a bacnet:StandardEnumeration ;
    bacnet:enumName "ampere-seconds" ;
    bacnet:enumValue "238"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-ampere-square-hours a bacnet:StandardEnumeration ;
    bacnet:enumName "ampere-square-hours" ;
    bacnet:enumValue "246"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-ampere-square-meters a bacnet:StandardEnumeration ;
    bacnet:enumName "ampere-square-meters" ;
    bacnet:enumValue "169"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-amperes a bacnet:StandardEnumeration ;
    bacnet:enumName "amperes" ;
    bacnet:enumValue "3"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-amperes-per-meter a bacnet:StandardEnumeration ;
    bacnet:enumName "amperes-per-meter" ;
    bacnet:enumValue "167"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-amperes-per-square-meter a bacnet:StandardEnumeration ;
    bacnet:enumName "amperes-per-square-meter" ;
    bacnet:enumValue "168"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-bars a bacnet:StandardEnumeration ;
    bacnet:enumName "bars" ;
    bacnet:enumValue "55"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-becquerels a bacnet:StandardEnumeration ;
    bacnet:enumName "becquerels" ;
    bacnet:enumValue "222"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-btus a bacnet:StandardEnumeration ;
    bacnet:enumName "btus" ;
    bacnet:enumValue "20"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-btus-per-hour a bacnet:StandardEnumeration ;
    bacnet:enumName "btus-per-hour" ;
    bacnet:enumValue "50"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-btus-per-pound a bacnet:StandardEnumeration ;
    bacnet:enumName "btus-per-pound" ;
    bacnet:enumValue "117"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-btus-per-pound-dry-air a bacnet:StandardEnumeration ;
    bacnet:enumName "btus-per-pound-dry-air" ;
    bacnet:enumValue "24"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-candelas a bacnet:StandardEnumeration ;
    bacnet:enumName "candelas" ;
    bacnet:enumValue "179"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-candelas-per-square-meter a bacnet:StandardEnumeration ;
    bacnet:enumName "candelas-per-square-meter" ;
    bacnet:enumValue "180"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-centimeters a bacnet:StandardEnumeration ;
    bacnet:enumName "centimeters" ;
    bacnet:enumValue "118"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-centimeters-of-mercury a bacnet:StandardEnumeration ;
    bacnet:enumName "centimeters-of-mercury" ;
    bacnet:enumValue "60"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-centimeters-of-water a bacnet:StandardEnumeration ;
    bacnet:enumName "centimeters-of-water" ;
    bacnet:enumValue "57"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-cubic-feet a bacnet:StandardEnumeration ;
    bacnet:enumName "cubic-feet" ;
    bacnet:enumValue "79"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-cubic-feet-per-day a bacnet:StandardEnumeration ;
    bacnet:enumName "cubic-feet-per-day" ;
    bacnet:enumValue "248"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-cubic-feet-per-hour a bacnet:StandardEnumeration ;
    bacnet:enumName "cubic-feet-per-hour" ;
    bacnet:enumValue "191"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-cubic-feet-per-minute a bacnet:StandardEnumeration ;
    bacnet:enumName "cubic-feet-per-minute" ;
    bacnet:enumValue "84"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-cubic-feet-per-second a bacnet:StandardEnumeration ;
    bacnet:enumName "cubic-feet-per-second" ;
    bacnet:enumValue "142"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-cubic-meters a bacnet:StandardEnumeration ;
    bacnet:enumName "cubic-meters" ;
    bacnet:enumValue "80"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-cubic-meters-per-day a bacnet:StandardEnumeration ;
    bacnet:enumName "cubic-meters-per-day" ;
    bacnet:enumValue "249"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-cubic-meters-per-hour a bacnet:StandardEnumeration ;
    bacnet:enumName "cubic-meters-per-hour" ;
    bacnet:enumValue "135"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-cubic-meters-per-minute a bacnet:StandardEnumeration ;
    bacnet:enumName "cubic-meters-per-minute" ;
    bacnet:enumValue "165"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-cubic-meters-per-second a bacnet:StandardEnumeration ;
    bacnet:enumName "cubic-meters-per-second" ;
    bacnet:enumValue "85"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-currency1 a bacnet:StandardEnumeration ;
    bacnet:enumName "currency1" ;
    bacnet:enumValue "105"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-currency10 a bacnet:StandardEnumeration ;
    bacnet:enumName "currency10" ;
    bacnet:enumValue "114"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-currency2 a bacnet:StandardEnumeration ;
    bacnet:enumName "currency2" ;
    bacnet:enumValue "106"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-currency3 a bacnet:StandardEnumeration ;
    bacnet:enumName "currency3" ;
    bacnet:enumValue "107"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-currency4 a bacnet:StandardEnumeration ;
    bacnet:enumName "currency4" ;
    bacnet:enumValue "108"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-currency5 a bacnet:StandardEnumeration ;
    bacnet:enumName "currency5" ;
    bacnet:enumValue "109"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-currency6 a bacnet:StandardEnumeration ;
    bacnet:enumName "currency6" ;
    bacnet:enumValue "110"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-currency7 a bacnet:StandardEnumeration ;
    bacnet:enumName "currency7" ;
    bacnet:enumValue "111"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-currency8 a bacnet:StandardEnumeration ;
    bacnet:enumName "currency8" ;
    bacnet:enumValue "112"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-currency9 a bacnet:StandardEnumeration ;
    bacnet:enumName "currency9" ;
    bacnet:enumValue "113"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-cycles-per-hour a bacnet:StandardEnumeration ;
    bacnet:enumName "cycles-per-hour" ;
    bacnet:enumValue "25"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-cycles-per-minute a bacnet:StandardEnumeration ;
    bacnet:enumName "cycles-per-minute" ;
    bacnet:enumValue "26"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-days a bacnet:StandardEnumeration ;
    bacnet:enumName "days" ;
    bacnet:enumValue "70"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-decibels a bacnet:StandardEnumeration ;
    bacnet:enumName "decibels" ;
    bacnet:enumValue "199"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-decibels-millivolt a bacnet:StandardEnumeration ;
    bacnet:enumName "decibels-millivolt" ;
    bacnet:enumValue "200"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-decibels-volt a bacnet:StandardEnumeration ;
    bacnet:enumName "decibels-volt" ;
    bacnet:enumValue "201"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-decibelsA a bacnet:StandardEnumeration ;
    bacnet:enumName "decibelsA" ;
    bacnet:enumValue "232"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-degree-days-celsius a bacnet:StandardEnumeration ;
    bacnet:enumName "degree-days-celsius" ;
    bacnet:enumValue "65"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-degree-days-fahrenheit a bacnet:StandardEnumeration ;
    bacnet:enumName "degree-days-fahrenheit" ;
    bacnet:enumValue "66"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-degrees-angular a bacnet:StandardEnumeration ;
    bacnet:enumName "degrees-angular" ;
    bacnet:enumValue "90"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-degrees-celsius a bacnet:StandardEnumeration ;
    bacnet:enumName "degrees-celsius" ;
    bacnet:enumValue "62"^^xsd:nonNegativeInteger ;
    bacnet:qudtUnit unit:DEF_C .

bacnet:EngineeringUnits-degrees-celsius-per-hour a bacnet:StandardEnumeration ;
    bacnet:enumName "degrees-celsius-per-hour" ;
    bacnet:enumValue "91"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-degrees-celsius-per-minute a bacnet:StandardEnumeration ;
    bacnet:enumName "degrees-celsius-per-minute" ;
    bacnet:enumValue "92"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-degrees-fahrenheit a bacnet:StandardEnumeration ;
    bacnet:enumName "degrees-fahrenheit" ;
    bacnet:enumValue "64"^^xsd:nonNegativeInteger ;
    bacnet:qudtUnit unit:DEF_F .

bacnet:EngineeringUnits-degrees-fahrenheit-per-hour a bacnet:StandardEnumeration ;
    bacnet:enumName "degrees-fahrenheit-per-hour" ;
    bacnet:enumValue "93"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-degrees-fahrenheit-per-minute a bacnet:StandardEnumeration ;
    bacnet:enumName "degrees-fahrenheit-per-minute" ;
    bacnet:enumValue "94"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-degrees-kelvin a bacnet:StandardEnumeration ;
    bacnet:enumName "degrees-kelvin" ;
    bacnet:enumValue "63"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-degrees-kelvin-per-hour a bacnet:StandardEnumeration ;
    bacnet:enumName "degrees-kelvin-per-hour" ;
    bacnet:enumValue "181"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-degrees-kelvin-per-minute a bacnet:StandardEnumeration ;
    bacnet:enumName "degrees-kelvin-per-minute" ;
    bacnet:enumValue "182"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-degrees-phase a bacnet:StandardEnumeration ;
    bacnet:enumName "degrees-phase" ;
    bacnet:enumValue "14"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-delta-degrees-fahrenheit a bacnet:StandardEnumeration ;
    bacnet:enumName "delta-degrees-fahrenheit" ;
    bacnet:enumValue "120"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-delta-degrees-kelvin a bacnet:StandardEnumeration ;
    bacnet:enumName "delta-degrees-kelvin" ;
    bacnet:enumValue "121"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-farads a bacnet:StandardEnumeration ;
    bacnet:enumName "farads" ;
    bacnet:enumValue "170"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-feet a bacnet:StandardEnumeration ;
    bacnet:enumName "feet" ;
    bacnet:enumValue "33"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-feet-per-minute a bacnet:StandardEnumeration ;
    bacnet:enumName "feet-per-minute" ;
    bacnet:enumValue "77"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-feet-per-second a bacnet:StandardEnumeration ;
    bacnet:enumName "feet-per-second" ;
    bacnet:enumValue "76"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-foot-candles a bacnet:StandardEnumeration ;
    bacnet:enumName "foot-candles" ;
    bacnet:enumValue "38"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-grams a bacnet:StandardEnumeration ;
    bacnet:enumName "grams" ;
    bacnet:enumValue "195"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-grams-of-water-per-kilogram-dry-air a bacnet:StandardEnumeration ;
    bacnet:enumName "grams-of-water-per-kilogram-dry-air" ;
    bacnet:enumValue "28"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-grams-per-cubic-centimeter a bacnet:StandardEnumeration ;
    bacnet:enumName "grams-per-cubic-centimeter" ;
    bacnet:enumValue "221"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-grams-per-cubic-meter a bacnet:StandardEnumeration ;
    bacnet:enumName "grams-per-cubic-meter" ;
    bacnet:enumValue "217"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-grams-per-gram a bacnet:StandardEnumeration ;
    bacnet:enumName "grams-per-gram" ;
    bacnet:enumValue "208"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-grams-per-kilogram a bacnet:StandardEnumeration ;
    bacnet:enumName "grams-per-kilogram" ;
    bacnet:enumValue "210"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-grams-per-liter a bacnet:StandardEnumeration ;
    bacnet:enumName "grams-per-liter" ;
    bacnet:enumValue "214"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-grams-per-milliliter a bacnet:StandardEnumeration ;
    bacnet:enumName "grams-per-milliliter" ;
    bacnet:enumValue "213"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-grams-per-minute a bacnet:StandardEnumeration ;
    bacnet:enumName "grams-per-minute" ;
    bacnet:enumValue "155"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-grams-per-second a bacnet:StandardEnumeration ;
    bacnet:enumName "grams-per-second" ;
    bacnet:enumValue "154"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-grams-per-square-meter a bacnet:StandardEnumeration ;
    bacnet:enumName "grams-per-square-meter" ;
    bacnet:enumValue "235"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-gray a bacnet:StandardEnumeration ;
    bacnet:enumName "gray" ;
    bacnet:enumValue "225"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-hectopascals a bacnet:StandardEnumeration ;
    bacnet:enumName "hectopascals" ;
    bacnet:enumValue "133"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-henrys a bacnet:StandardEnumeration ;
    bacnet:enumName "henrys" ;
    bacnet:enumValue "171"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-hertz a bacnet:StandardEnumeration ;
    bacnet:enumName "hertz" ;
    bacnet:enumValue "27"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-horsepower a bacnet:StandardEnumeration ;
    bacnet:enumName "horsepower" ;
    bacnet:enumValue "51"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-hours a bacnet:StandardEnumeration ;
    bacnet:enumName "hours" ;
    bacnet:enumValue "71"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-hundredths-seconds a bacnet:StandardEnumeration ;
    bacnet:enumName "hundredths-seconds" ;
    bacnet:enumValue "158"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-imperial-gallons a bacnet:StandardEnumeration ;
    bacnet:enumName "imperial-gallons" ;
    bacnet:enumValue "81"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-imperial-gallons-per-minute a bacnet:StandardEnumeration ;
    bacnet:enumName "imperial-gallons-per-minute" ;
    bacnet:enumValue "86"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-inches a bacnet:StandardEnumeration ;
    bacnet:enumName "inches" ;
    bacnet:enumValue "32"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-inches-of-mercury a bacnet:StandardEnumeration ;
    bacnet:enumName "inches-of-mercury" ;
    bacnet:enumValue "61"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-inches-of-water a bacnet:StandardEnumeration ;
    bacnet:enumName "inches-of-water" ;
    bacnet:enumValue "58"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-joule-seconds a bacnet:StandardEnumeration ;
    bacnet:enumName "joule-seconds" ;
    bacnet:enumValue "183"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-joules a bacnet:StandardEnumeration ;
    bacnet:enumName "joules" ;
    bacnet:enumValue "16"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-joules-per-cubic-meter a bacnet:StandardEnumeration ;
    bacnet:enumName "joules-per-cubic-meter" ;
    bacnet:enumValue "251"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-joules-per-degree-kelvin a bacnet:StandardEnumeration ;
    bacnet:enumName "joules-per-degree-kelvin" ;
    bacnet:enumValue "127"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-joules-per-hours a bacnet:StandardEnumeration ;
    bacnet:enumName "joules-per-hours" ;
    bacnet:enumValue "247"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-joules-per-kilogram-degree-kelvin a bacnet:StandardEnumeration ;
    bacnet:enumName "joules-per-kilogram-degree-kelvin" ;
    bacnet:enumValue "128"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-joules-per-kilogram-dry-air a bacnet:StandardEnumeration ;
    bacnet:enumName "joules-per-kilogram-dry-air" ;
    bacnet:enumValue "23"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-kilo-btus a bacnet:StandardEnumeration ;
    bacnet:enumName "kilo-btus" ;
    bacnet:enumValue "147"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-kilo-btus-per-hour a bacnet:StandardEnumeration ;
    bacnet:enumName "kilo-btus-per-hour" ;
    bacnet:enumValue "157"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-kilobecquerels a bacnet:StandardEnumeration ;
    bacnet:enumName "kilobecquerels" ;
    bacnet:enumValue "223"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-kilograms a bacnet:StandardEnumeration ;
    bacnet:enumName "kilograms" ;
    bacnet:enumValue "39"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-kilograms-per-cubic-meter a bacnet:StandardEnumeration ;
    bacnet:enumName "kilograms-per-cubic-meter" ;
    bacnet:enumValue "186"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-kilograms-per-hour a bacnet:StandardEnumeration ;
    bacnet:enumName "kilograms-per-hour" ;
    bacnet:enumValue "44"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-kilograms-per-kilogram a bacnet:StandardEnumeration ;
    bacnet:enumName "kilograms-per-kilogram" ;
    bacnet:enumValue "209"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-kilograms-per-minute a bacnet:StandardEnumeration ;
    bacnet:enumName "kilograms-per-minute" ;
    bacnet:enumValue "43"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-kilograms-per-second a bacnet:StandardEnumeration ;
    bacnet:enumName "kilograms-per-second" ;
    bacnet:enumValue "42"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-kilohertz a bacnet:StandardEnumeration ;
    bacnet:enumName "kilohertz" ;
    bacnet:enumValue "129"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-kilohms a bacnet:StandardEnumeration ;
    bacnet:enumName "kilohms" ;
    bacnet:enumValue "122"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-kilojoules a bacnet:StandardEnumeration ;
    bacnet:enumName "kilojoules" ;
    bacnet:enumValue "17"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-kilojoules-per-degree-kelvin a bacnet:StandardEnumeration ;
    bacnet:enumName "kilojoules-per-degree-kelvin" ;
    bacnet:enumValue "151"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-kilojoules-per-kilogram a bacnet:StandardEnumeration ;
    bacnet:enumName "kilojoules-per-kilogram" ;
    bacnet:enumValue "125"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-kilojoules-per-kilogram-dry-air a bacnet:StandardEnumeration ;
    bacnet:enumName "kilojoules-per-kilogram-dry-air" ;
    bacnet:enumValue "149"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-kilometers a bacnet:StandardEnumeration ;
    bacnet:enumName "kilometers" ;
    bacnet:enumValue "193"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-kilometers-per-hour a bacnet:StandardEnumeration ;
    bacnet:enumName "kilometers-per-hour" ;
    bacnet:enumValue "75"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-kilopascals a bacnet:StandardEnumeration ;
    bacnet:enumName "kilopascals" ;
    bacnet:enumValue "54"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-kilovolt-ampere-hours a bacnet:StandardEnumeration ;
    bacnet:enumName "kilovolt-ampere-hours" ;
    bacnet:enumValue "240"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-kilovolt-ampere-hours-reactive a bacnet:StandardEnumeration ;
    bacnet:enumName "kilovolt-ampere-hours-reactive" ;
    bacnet:enumValue "243"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-kilovolt-amperes a bacnet:StandardEnumeration ;
    bacnet:enumName "kilovolt-amperes" ;
    bacnet:enumValue "9"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-kilovolt-amperes-reactive a bacnet:StandardEnumeration ;
    bacnet:enumName "kilovolt-amperes-reactive" ;
    bacnet:enumValue "12"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-kilovolts a bacnet:StandardEnumeration ;
    bacnet:enumName "kilovolts" ;
    bacnet:enumValue "6"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-kilowatt-hours a bacnet:StandardEnumeration ;
    bacnet:enumName "kilowatt-hours" ;
    bacnet:enumValue "19"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-kilowatt-hours-per-square-foot a bacnet:StandardEnumeration ;
    bacnet:enumName "kilowatt-hours-per-square-foot" ;
    bacnet:enumValue "138"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-kilowatt-hours-per-square-meter a bacnet:StandardEnumeration ;
    bacnet:enumName "kilowatt-hours-per-square-meter" ;
    bacnet:enumValue "137"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-kilowatt-hours-reactive a bacnet:StandardEnumeration ;
    bacnet:enumName "kilowatt-hours-reactive" ;
    bacnet:enumValue "204"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-kilowatts a bacnet:StandardEnumeration ;
    bacnet:enumName "kilowatts" ;
    bacnet:enumValue "48"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-liters a bacnet:StandardEnumeration ;
    bacnet:enumName "liters" ;
    bacnet:enumValue "82"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-liters-per-hour a bacnet:StandardEnumeration ;
    bacnet:enumName "liters-per-hour" ;
    bacnet:enumValue "136"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-liters-per-minute a bacnet:StandardEnumeration ;
    bacnet:enumName "liters-per-minute" ;
    bacnet:enumValue "88"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-liters-per-second a bacnet:StandardEnumeration ;
    bacnet:enumName "liters-per-second" ;
    bacnet:enumValue "87"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-lumens a bacnet:StandardEnumeration ;
    bacnet:enumName "lumens" ;
    bacnet:enumValue "36"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-luxes a bacnet:StandardEnumeration ;
    bacnet:enumName "luxes" ;
    bacnet:enumValue "37"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-mega-btus a bacnet:StandardEnumeration ;
    bacnet:enumName "mega-btus" ;
    bacnet:enumValue "148"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-megabecquerels a bacnet:StandardEnumeration ;
    bacnet:enumName "megabecquerels" ;
    bacnet:enumValue "224"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-megahertz a bacnet:StandardEnumeration ;
    bacnet:enumName "megahertz" ;
    bacnet:enumValue "130"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-megajoules a bacnet:StandardEnumeration ;
    bacnet:enumName "megajoules" ;
    bacnet:enumValue "126"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-megajoules-per-degree-kelvin a bacnet:StandardEnumeration ;
    bacnet:enumName "megajoules-per-degree-kelvin" ;
    bacnet:enumValue "152"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-megajoules-per-kilogram-dry-air a bacnet:StandardEnumeration ;
    bacnet:enumName "megajoules-per-kilogram-dry-air" ;
    bacnet:enumValue "150"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-megajoules-per-square-foot a bacnet:StandardEnumeration ;
    bacnet:enumName "megajoules-per-square-foot" ;
    bacnet:enumValue "140"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-megajoules-per-square-meter a bacnet:StandardEnumeration ;
    bacnet:enumName "megajoules-per-square-meter" ;
    bacnet:enumValue "139"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-megavolt-ampere-hours a bacnet:StandardEnumeration ;
    bacnet:enumName "megavolt-ampere-hours" ;
    bacnet:enumValue "241"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-megavolt-ampere-hours-reactive a bacnet:StandardEnumeration ;
    bacnet:enumName "megavolt-ampere-hours-reactive" ;
    bacnet:enumValue "244"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-megavolt-amperes a bacnet:StandardEnumeration ;
    bacnet:enumName "megavolt-amperes" ;
    bacnet:enumValue "10"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-megavolt-amperes-reactive a bacnet:StandardEnumeration ;
    bacnet:enumName "megavolt-amperes-reactive" ;
    bacnet:enumValue "13"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-megavolts a bacnet:StandardEnumeration ;
    bacnet:enumName "megavolts" ;
    bacnet:enumValue "7"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-megawatt-hours a bacnet:StandardEnumeration ;
    bacnet:enumName "megawatt-hours" ;
    bacnet:enumValue "146"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-megawatt-hours-reactive a bacnet:StandardEnumeration ;
    bacnet:enumName "megawatt-hours-reactive" ;
    bacnet:enumValue "205"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-megawatts a bacnet:StandardEnumeration ;
    bacnet:enumName "megawatts" ;
    bacnet:enumValue "49"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-megohms a bacnet:StandardEnumeration ;
    bacnet:enumName "megohms" ;
    bacnet:enumValue "123"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-meters a bacnet:StandardEnumeration ;
    bacnet:enumName "meters" ;
    bacnet:enumValue "31"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-meters-per-hour a bacnet:StandardEnumeration ;
    bacnet:enumName "meters-per-hour" ;
    bacnet:enumValue "164"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-meters-per-minute a bacnet:StandardEnumeration ;
    bacnet:enumName "meters-per-minute" ;
    bacnet:enumValue "163"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-meters-per-second a bacnet:StandardEnumeration ;
    bacnet:enumName "meters-per-second" ;
    bacnet:enumValue "74"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-meters-per-second-per-second a bacnet:StandardEnumeration ;
    bacnet:enumName "meters-per-second-per-second" ;
    bacnet:enumValue "166"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-micro-siemens a bacnet:StandardEnumeration ;
    bacnet:enumName "micro-siemens" ;
    bacnet:enumValue "190"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-micrograms-per-cubic-meter a bacnet:StandardEnumeration ;
    bacnet:enumName "micrograms-per-cubic-meter" ;
    bacnet:enumValue "219"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-micrograms-per-liter a bacnet:StandardEnumeration ;
    bacnet:enumName "micrograms-per-liter" ;
    bacnet:enumValue "216"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-microgray a bacnet:StandardEnumeration ;
    bacnet:enumName "microgray" ;
    bacnet:enumValue "227"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-micrometers a bacnet:StandardEnumeration ;
    bacnet:enumName "micrometers" ;
    bacnet:enumValue "194"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-microsieverts a bacnet:StandardEnumeration ;
    bacnet:enumName "microsieverts" ;
    bacnet:enumValue "230"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-microsieverts-per-hour a bacnet:StandardEnumeration ;
    bacnet:enumName "microsieverts-per-hour" ;
    bacnet:enumValue "231"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-miles-per-hour a bacnet:StandardEnumeration ;
    bacnet:enumName "miles-per-hour" ;
    bacnet:enumValue "78"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-milliamperes a bacnet:StandardEnumeration ;
    bacnet:enumName "milliamperes" ;
    bacnet:enumValue "2"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-millibars a bacnet:StandardEnumeration ;
    bacnet:enumName "millibars" ;
    bacnet:enumValue "134"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-milligrams a bacnet:StandardEnumeration ;
    bacnet:enumName "milligrams" ;
    bacnet:enumValue "196"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-milligrams-per-cubic-meter a bacnet:StandardEnumeration ;
    bacnet:enumName "milligrams-per-cubic-meter" ;
    bacnet:enumValue "218"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-milligrams-per-gram a bacnet:StandardEnumeration ;
    bacnet:enumName "milligrams-per-gram" ;
    bacnet:enumValue "211"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-milligrams-per-kilogram a bacnet:StandardEnumeration ;
    bacnet:enumName "milligrams-per-kilogram" ;
    bacnet:enumValue "212"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-milligrams-per-liter a bacnet:StandardEnumeration ;
    bacnet:enumName "milligrams-per-liter" ;
    bacnet:enumValue "215"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-milligray a bacnet:StandardEnumeration ;
    bacnet:enumName "milligray" ;
    bacnet:enumValue "226"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-milliliters a bacnet:StandardEnumeration ;
    bacnet:enumName "milliliters" ;
    bacnet:enumValue "197"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-milliliters-per-second a bacnet:StandardEnumeration ;
    bacnet:enumName "milliliters-per-second" ;
    bacnet:enumValue "198"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-millimeters a bacnet:StandardEnumeration ;
    bacnet:enumName "millimeters" ;
    bacnet:enumValue "30"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-millimeters-of-mercury a bacnet:StandardEnumeration ;
    bacnet:enumName "millimeters-of-mercury" ;
    bacnet:enumValue "59"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-millimeters-of-water a bacnet:StandardEnumeration ;
    bacnet:enumName "millimeters-of-water" ;
    bacnet:enumValue "206"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-millimeters-per-minute a bacnet:StandardEnumeration ;
    bacnet:enumName "millimeters-per-minute" ;
    bacnet:enumValue "162"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-millimeters-per-second a bacnet:StandardEnumeration ;
    bacnet:enumName "millimeters-per-second" ;
    bacnet:enumValue "161"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-milliohms a bacnet:StandardEnumeration ;
    bacnet:enumName "milliohms" ;
    bacnet:enumValue "145"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-milliseconds a bacnet:StandardEnumeration ;
    bacnet:enumName "milliseconds" ;
    bacnet:enumValue "159"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-millisiemens a bacnet:StandardEnumeration ;
    bacnet:enumName "millisiemens" ;
    bacnet:enumValue "202"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-millisieverts a bacnet:StandardEnumeration ;
    bacnet:enumName "millisieverts" ;
    bacnet:enumValue "229"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-millivolts a bacnet:StandardEnumeration ;
    bacnet:enumName "millivolts" ;
    bacnet:enumValue "124"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-milliwatts a bacnet:StandardEnumeration ;
    bacnet:enumName "milliwatts" ;
    bacnet:enumValue "132"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-minutes a bacnet:StandardEnumeration ;
    bacnet:enumName "minutes" ;
    bacnet:enumValue "72"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-minutes-per-degree-kelvin a bacnet:StandardEnumeration ;
    bacnet:enumName "minutes-per-degree-kelvin" ;
    bacnet:enumValue "236"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-months a bacnet:StandardEnumeration ;
    bacnet:enumName "months" ;
    bacnet:enumValue "68"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-nanograms-per-cubic-meter a bacnet:StandardEnumeration ;
    bacnet:enumName "nanograms-per-cubic-meter" ;
    bacnet:enumValue "220"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-nephelometric-turbidity-unit a bacnet:StandardEnumeration ;
    bacnet:enumName "nephelometric-turbidity-unit" ;
    bacnet:enumValue "233"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-newton a bacnet:StandardEnumeration ;
    bacnet:enumName "newton" ;
    bacnet:enumValue "153"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-newton-meters a bacnet:StandardEnumeration ;
    bacnet:enumName "newton-meters" ;
    bacnet:enumValue "160"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-newton-seconds a bacnet:StandardEnumeration ;
    bacnet:enumName "newton-seconds" ;
    bacnet:enumValue "187"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-newtons-per-meter a bacnet:StandardEnumeration ;
    bacnet:enumName "newtons-per-meter" ;
    bacnet:enumValue "188"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-no-units a bacnet:StandardEnumeration ;
    bacnet:enumName "no-units" ;
    bacnet:enumValue "95"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-ohm-meter-per-square-meter a bacnet:StandardEnumeration ;
    bacnet:enumName "ohm-meter-per-square-meter" ;
    bacnet:enumValue "237"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-ohm-meters a bacnet:StandardEnumeration ;
    bacnet:enumName "ohm-meters" ;
    bacnet:enumValue "172"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-ohms a bacnet:StandardEnumeration ;
    bacnet:enumName "ohms" ;
    bacnet:enumValue "4"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-pH a bacnet:StandardEnumeration ;
    bacnet:enumName "pH" ;
    bacnet:enumValue "234"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-parts-per-billion a bacnet:StandardEnumeration ;
    bacnet:enumName "parts-per-billion" ;
    bacnet:enumValue "97"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-parts-per-million a bacnet:StandardEnumeration ;
    bacnet:enumName "parts-per-million" ;
    bacnet:enumValue "96"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-pascal-seconds a bacnet:StandardEnumeration ;
    bacnet:enumName "pascal-seconds" ;
    bacnet:enumValue "253"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-pascals a bacnet:StandardEnumeration ;
    bacnet:enumName "pascals" ;
    bacnet:enumValue "53"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-per-hour a bacnet:StandardEnumeration ;
    bacnet:enumName "per-hour" ;
    bacnet:enumValue "131"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-per-mille a bacnet:StandardEnumeration ;
    bacnet:enumName "per-mille" ;
    bacnet:enumValue "207"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-per-minute a bacnet:StandardEnumeration ;
    bacnet:enumName "per-minute" ;
    bacnet:enumValue "100"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-per-second a bacnet:StandardEnumeration ;
    bacnet:enumName "per-second" ;
    bacnet:enumValue "101"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-percent a bacnet:StandardEnumeration ;
    bacnet:enumName "percent" ;
    bacnet:enumValue "98"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-percent-obscuration-per-foot a bacnet:StandardEnumeration ;
    bacnet:enumName "percent-obscuration-per-foot" ;
    bacnet:enumValue "143"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-percent-obscuration-per-meter a bacnet:StandardEnumeration ;
    bacnet:enumName "percent-obscuration-per-meter" ;
    bacnet:enumValue "144"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-percent-per-second a bacnet:StandardEnumeration ;
    bacnet:enumName "percent-per-second" ;
    bacnet:enumValue "99"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-percent-relative-humidity a bacnet:StandardEnumeration ;
    bacnet:enumName "percent-relative-humidity" ;
    bacnet:enumValue "29"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-pounds-force-per-square-inch a bacnet:StandardEnumeration ;
    bacnet:enumName "pounds-force-per-square-inch" ;
    bacnet:enumValue "56"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-pounds-mass a bacnet:StandardEnumeration ;
    bacnet:enumName "pounds-mass" ;
    bacnet:enumValue "40"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-pounds-mass-per-hour a bacnet:StandardEnumeration ;
    bacnet:enumName "pounds-mass-per-hour" ;
    bacnet:enumValue "46"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-pounds-mass-per-minute a bacnet:StandardEnumeration ;
    bacnet:enumName "pounds-mass-per-minute" ;
    bacnet:enumValue "45"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-pounds-mass-per-second a bacnet:StandardEnumeration ;
    bacnet:enumName "pounds-mass-per-second" ;
    bacnet:enumValue "119"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-power-factor a bacnet:StandardEnumeration ;
    bacnet:enumName "power-factor" ;
    bacnet:enumValue "15"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-psi-per-degree-fahrenheit a bacnet:StandardEnumeration ;
    bacnet:enumName "psi-per-degree-fahrenheit" ;
    bacnet:enumValue "102"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-radians a bacnet:StandardEnumeration ;
    bacnet:enumName "radians" ;
    bacnet:enumValue "103"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-radians-per-second a bacnet:StandardEnumeration ;
    bacnet:enumName "radians-per-second" ;
    bacnet:enumValue "184"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-revolutions-per-minute a bacnet:StandardEnumeration ;
    bacnet:enumName "revolutions-per-minute" ;
    bacnet:enumValue "104"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-seconds a bacnet:StandardEnumeration ;
    bacnet:enumName "seconds" ;
    bacnet:enumValue "73"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-siemens a bacnet:StandardEnumeration ;
    bacnet:enumName "siemens" ;
    bacnet:enumValue "173"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-siemens-per-meter a bacnet:StandardEnumeration ;
    bacnet:enumName "siemens-per-meter" ;
    bacnet:enumValue "174"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-sieverts a bacnet:StandardEnumeration ;
    bacnet:enumName "sieverts" ;
    bacnet:enumValue "228"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-square-centimeters a bacnet:StandardEnumeration ;
    bacnet:enumName "square-centimeters" ;
    bacnet:enumValue "116"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-square-feet a bacnet:StandardEnumeration ;
    bacnet:enumName "square-feet" ;
    bacnet:enumValue "1"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-square-inches a bacnet:StandardEnumeration ;
    bacnet:enumName "square-inches" ;
    bacnet:enumValue "115"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-square-meters a bacnet:StandardEnumeration ;
    bacnet:enumName "square-meters" ;
    bacnet:enumValue "0"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-square-meters-per-newton a bacnet:StandardEnumeration ;
    bacnet:enumName "square-meters-per-newton" ;
    bacnet:enumValue "185"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-teslas a bacnet:StandardEnumeration ;
    bacnet:enumName "teslas" ;
    bacnet:enumValue "175"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-therms a bacnet:StandardEnumeration ;
    bacnet:enumName "therms" ;
    bacnet:enumValue "21"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-ton-hours a bacnet:StandardEnumeration ;
    bacnet:enumName "ton-hours" ;
    bacnet:enumValue "22"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-tons a bacnet:StandardEnumeration ;
    bacnet:enumName "tons" ;
    bacnet:enumValue "41"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-tons-per-hour a bacnet:StandardEnumeration ;
    bacnet:enumName "tons-per-hour" ;
    bacnet:enumValue "156"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-tons-refrigeration a bacnet:StandardEnumeration ;
    bacnet:enumName "tons-refrigeration" ;
    bacnet:enumValue "52"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-us-gallons a bacnet:StandardEnumeration ;
    bacnet:enumName "us-gallons" ;
    bacnet:enumValue "83"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-us-gallons-per-hour a bacnet:StandardEnumeration ;
    bacnet:enumName "us-gallons-per-hour" ;
    bacnet:enumValue "192"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-us-gallons-per-minute a bacnet:StandardEnumeration ;
    bacnet:enumName "us-gallons-per-minute" ;
    bacnet:enumValue "89"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-volt-ampere-hours a bacnet:StandardEnumeration ;
    bacnet:enumName "volt-ampere-hours" ;
    bacnet:enumValue "239"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-volt-ampere-hours-reactive a bacnet:StandardEnumeration ;
    bacnet:enumName "volt-ampere-hours-reactive" ;
    bacnet:enumValue "242"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-volt-amperes a bacnet:StandardEnumeration ;
    bacnet:enumName "volt-amperes" ;
    bacnet:enumValue "8"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-volt-amperes-reactive a bacnet:StandardEnumeration ;
    bacnet:enumName "volt-amperes-reactive" ;
    bacnet:enumValue "11"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-volts a bacnet:StandardEnumeration ;
    bacnet:enumName "volts" ;
    bacnet:enumValue "5"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-volts-per-degree-kelvin a bacnet:StandardEnumeration ;
    bacnet:enumName "volts-per-degree-kelvin" ;
    bacnet:enumValue "176"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-volts-per-meter a bacnet:StandardEnumeration ;
    bacnet:enumName "volts-per-meter" ;
    bacnet:enumValue "177"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-volts-square-hours a bacnet:StandardEnumeration ;
    bacnet:enumName "volts-square-hours" ;
    bacnet:enumValue "245"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-watt-hours a bacnet:StandardEnumeration ;
    bacnet:enumName "watt-hours" ;
    bacnet:enumValue "18"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-watt-hours-per-cubic-meter a bacnet:StandardEnumeration ;
    bacnet:enumName "watt-hours-per-cubic-meter" ;
    bacnet:enumValue "250"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-watt-hours-reactive a bacnet:StandardEnumeration ;
    bacnet:enumName "watt-hours-reactive" ;
    bacnet:enumValue "203"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-watts a bacnet:StandardEnumeration ;
    bacnet:enumName "watts" ;
    bacnet:enumValue "47"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-watts-per-meter-per-degree-kelvin a bacnet:StandardEnumeration ;
    bacnet:enumName "watts-per-meter-per-degree-kelvin" ;
    bacnet:enumValue "189"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-watts-per-square-foot a bacnet:StandardEnumeration ;
    bacnet:enumName "watts-per-square-foot" ;
    bacnet:enumValue "34"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-watts-per-square-meter a bacnet:StandardEnumeration ;
    bacnet:enumName "watts-per-square-meter" ;
    bacnet:enumValue "35"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-watts-per-square-meter-degree-kelvin a bacnet:StandardEnumeration ;
    bacnet:enumName "watts-per-square-meter-degree-kelvin" ;
    bacnet:enumValue "141"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-webers a bacnet:StandardEnumeration ;
    bacnet:enumName "webers" ;
    bacnet:enumValue "178"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-weeks a bacnet:StandardEnumeration ;
    bacnet:enumName "weeks" ;
    bacnet:enumValue "69"^^xsd:nonNegativeInteger .

bacnet:EngineeringUnits-years a bacnet:StandardEnumeration ;
    bacnet:enumName "years" ;
    bacnet:enumValue "67"^^xsd:nonNegativeInteger .

bacnet:ErrorClass-communication a bacnet:StandardEnumeration ;
    bacnet:enumName "communication" ;
    bacnet:enumValue "7"^^xsd:nonNegativeInteger .

bacnet:ErrorClass-device a bacnet:StandardEnumeration ;
    bacnet:enumName "device" ;
    bacnet:enumValue "0"^^xsd:nonNegativeInteger .

bacnet:ErrorClass-object a bacnet:StandardEnumeration ;
    bacnet:enumName "object" ;
    bacnet:enumValue "1"^^xsd:nonNegativeInteger .

bacnet:ErrorClass-property a bacnet:StandardEnumeration ;
    bacnet:enumName "property" ;
    bacnet:enumValue "2"^^xsd:nonNegativeInteger .

bacnet:ErrorClass-resources a bacnet:StandardEnumeration ;
    bacnet:enumName "resources" ;
    bacnet:enumValue "3"^^xsd:nonNegativeInteger .

bacnet:ErrorClass-security a bacnet:StandardEnumeration ;
    bacnet:enumName "security" ;
    bacnet:enumValue "4"^^xsd:nonNegativeInteger .

bacnet:ErrorClass-services a bacnet:StandardEnumeration ;
    bacnet:enumName "services" ;
    bacnet:enumValue "5"^^xsd:nonNegativeInteger .

bacnet:ErrorClass-vt a bacnet:StandardEnumeration ;
    bacnet:enumName "vt" ;
    bacnet:enumValue "6"^^xsd:nonNegativeInteger .

bacnet:ErrorCode-abort-apdu-too-long a bacnet:StandardEnumeration ;
    bacnet:enumName "abort-apdu-too-long" ;
    bacnet:enumValue "123"^^xsd:nonNegativeInteger .

bacnet:ErrorCode-abort-application-exceeded-reply-time a bacnet:StandardEnumeration ;
    bacnet:enumName "abort-application-exceeded-reply-time" ;
    bacnet:enumValue "124"^^xsd:nonNegativeInteger .

bacnet:ErrorCode-abort-buffer-overflow a bacnet:StandardEnumeration ;
    bacnet:enumName "abort-buffer-overflow" ;
    bacnet:enumValue "51"^^xsd:nonNegativeInteger .

bacnet:ErrorCode-abort-insufficient-security a bacnet:StandardEnumeration ;
    bacnet:enumName "abort-insufficient-security" ;
    bacnet:enumValue "135"^^xsd:nonNegativeInteger .

bacnet:ErrorCode-abort-invalid-apdu-in-this-state a bacnet:StandardEnumeration ;
    bacnet:enumName "abort-invalid-apdu-in-this-state" ;
    bacnet:enumValue "52"^^xsd:nonNegativeInteger .

bacnet:ErrorCode-abort-other a bacnet:StandardEnumeration ;
    bacnet:enumName "abort-other" ;
    bacnet:enumValue "56"^^xsd:nonNegativeInteger .

bacnet:ErrorCode-abort-out-of-resources a bacnet:StandardEnumeration ;
    bacnet:enumName "abort-out-of-resources" ;
    bacnet:enumValue "125"^^xsd:nonNegativeInteger .

bacnet:ErrorCode-abort-preempted-by-higher-priority-task a bacnet:StandardEnumeration ;
    bacnet:enumName "abort-preempted-by-higher-priority-task" ;
    bacnet:enumValue "53"^^xsd:nonNegativeInteger .

bacnet:ErrorCode-abort-proprietary a bacnet:StandardEnumeration ;
    bacnet:enumName "abort-proprietary" ;
    bacnet:enumValue "55"^^xsd:nonNegativeInteger .

bacnet:ErrorCode-abort-security-error a bacnet:StandardEnumeration ;
    bacnet:enumName "abort-security-error" ;
    bacnet:enumValue "136"^^xsd:nonNegativeInteger .

bacnet:ErrorCode-abort-segmentation-not-supported a bacnet:StandardEnumeration ;
    bacnet:enumName "abort-segmentation-not-supported" ;
    bacnet:enumValue "54"^^xsd:nonNegativeInteger .

bacnet:ErrorCode-abort-tsm-timeout a bacnet:StandardEnumeration ;
    bacnet:enumName "abort-tsm-timeout" ;
    bacnet:enumValue "126"^^xsd:nonNegativeInteger .

bacnet:ErrorCode-abort-window-size-out-of-range a bacnet:StandardEnumeration ;
    bacnet:enumName "abort-window-size-out-of-range" ;
    bacnet:enumValue "127"^^xsd:nonNegativeInteger .

bacnet:ErrorCode-access-denied a bacnet:StandardEnumeration ;
    bacnet:enumName "access-denied" ;
    bacnet:enumValue "85"^^xsd:nonNegativeInteger .

bacnet:ErrorCode-addressing-error a bacnet:StandardEnumeration ;
    bacnet:enumName "addressing-error" ;
    bacnet:enumValue "115"^^xsd:nonNegativeInteger .

bacnet:ErrorCode-bad-destination-address a bacnet:StandardEnumeration ;
    bacnet:enumName "bad-destination-address" ;
    bacnet:enumValue "86"^^xsd:nonNegativeInteger .

bacnet:ErrorCode-bad-destination-device-id a bacnet:StandardEnumeration ;
    bacnet:enumName "bad-destination-device-id" ;
    bacnet:enumValue "87"^^xsd:nonNegativeInteger .

bacnet:ErrorCode-bad-signature a bacnet:StandardEnumeration ;
    bacnet:enumName "bad-signature" ;
    bacnet:enumValue "88"^^xsd:nonNegativeInteger .

bacnet:ErrorCode-bad-source-address a bacnet:StandardEnumeration ;
    bacnet:enumName "bad-source-address" ;
    bacnet:enumValue "89"^^xsd:nonNegativeInteger .

bacnet:ErrorCode-bad-timestamp a bacnet:StandardEnumeration ;
    bacnet:enumName "bad-timestamp" ;
    bacnet:enumValue "90"^^xsd:nonNegativeInteger .

bacnet:ErrorCode-busy a bacnet:StandardEnumeration ;
    bacnet:enumName "busy" ;
    bacnet:enumValue "82"^^xsd:nonNegativeInteger .

bacnet:ErrorCode-cannot-use-key a bacnet:StandardEnumeration ;
    bacnet:enumName "cannot-use-key" ;
    bacnet:enumValue "91"^^xsd:nonNegativeInteger .

bacnet:ErrorCode-cannot-verify-message-id a bacnet:StandardEnumeration ;
    bacnet:enumName "cannot-verify-message-id" ;
    bacnet:enumValue "92"^^xsd:nonNegativeInteger .

bacnet:ErrorCode-character-set-not-supported a bacnet:StandardEnumeration ;
    bacnet:enumName "character-set-not-supported" ;
    bacnet:enumValue "41"^^xsd:nonNegativeInteger .

bacnet:ErrorCode-communication-disabled a bacnet:StandardEnumeration ;
    bacnet:enumName "communication-disabled" ;
    bacnet:enumValue "83"^^xsd:nonNegativeInteger .

bacnet:ErrorCode-configuration-in-progress a bacnet:StandardEnumeration ;
    bacnet:enumName "configuration-in-progress" ;
    bacnet:enumValue "2"^^xsd:nonNegativeInteger .

bacnet:ErrorCode-correct-key-revision a bacnet:StandardEnumeration ;
    bacnet:enumName "correct-key-revision" ;
    bacnet:enumValue "93"^^xsd:nonNegativeInteger .

bacnet:ErrorCode-cov-subscription-failed a bacnet:StandardEnumeration ;
    bacnet:enumName "cov-subscription-failed" ;
    bacnet:enumValue "43"^^xsd:nonNegativeInteger .

bacnet:ErrorCode-datatype-not-supported a bacnet:StandardEnumeration ;
    bacnet:enumName "datatype-not-supported" ;
    bacnet:enumValue "47"^^xsd:nonNegativeInteger .

bacnet:ErrorCode-delete-fdt-entry-failed a bacnet:StandardEnumeration ;
    bacnet:enumName "delete-fdt-entry-failed" ;
    bacnet:enumValue "120"^^xsd:nonNegativeInteger .

bacnet:ErrorCode-destination-device-id-required a bacnet:StandardEnumeration ;
    bacnet:enumName "destination-device-id-required" ;
    bacnet:enumValue "94"^^xsd:nonNegativeInteger .

bacnet:ErrorCode-device-busy a bacnet:StandardEnumeration ;
    bacnet:enumName "device-busy" ;
    bacnet:enumValue "3"^^xsd:nonNegativeInteger .

bacnet:ErrorCode-distribute-broadcast-failed a bacnet:StandardEnumeration ;
    bacnet:enumName "distribute-broadcast-failed" ;
    bacnet:enumValue "121"^^xsd:nonNegativeInteger .

bacnet:ErrorCode-duplicate-message a bacnet:StandardEnumeration ;
    bacnet:enumName "duplicate-message" ;
    bacnet:enumValue "95"^^xsd:nonNegativeInteger .

bacnet:ErrorCode-duplicate-name a bacnet:StandardEnumeration ;
    bacnet:enumName "duplicate-name" ;
    bacnet:enumValue "48"^^xsd:nonNegativeInteger .

bacnet:ErrorCode-duplicate-object-id a bacnet:StandardEnumeration ;
    bacnet:enumName "duplicate-object-id" ;
    bacnet:enumValue "49"^^xsd:nonNegativeInteger .

bacnet:ErrorCode-dynamic-creation-not-supported a bacnet:StandardEnumeration ;
    bacnet:enumName "dynamic-creation-not-supported" ;
    bacnet:enumValue "4"^^xsd:nonNegativeInteger .

bacnet:ErrorCode-encryption-not-configured a bacnet:StandardEnumeration ;
    bacnet:enumName "encryption-not-configured" ;
    bacnet:enumValue "96"^^xsd:nonNegativeInteger .

bacnet:ErrorCode-encryption-required a bacnet:StandardEnumeration ;
    bacnet:enumName "encryption-required" ;
    bacnet:enumValue "97"^^xsd:nonNegativeInteger .

bacnet:ErrorCode-file-access-denied a bacnet:StandardEnumeration ;
    bacnet:enumName "file-access-denied" ;
    bacnet:enumValue "5"^^xsd:nonNegativeInteger .

bacnet:ErrorCode-file-full a bacnet:StandardEnumeration ;
    bacnet:enumName "file-full" ;
    bacnet:enumValue "128"^^xsd:nonNegativeInteger .

bacnet:ErrorCode-inconsistent-configuration a bacnet:StandardEnumeration ;
    bacnet:enumName "inconsistent-configuration" ;
    bacnet:enumValue "129"^^xsd:nonNegativeInteger .

bacnet:ErrorCode-inconsistent-object-type a bacnet:StandardEnumeration ;
    bacnet:enumName "inconsistent-object-type" ;
    bacnet:enumValue "130"^^xsd:nonNegativeInteger .

bacnet:ErrorCode-inconsistent-parameters a bacnet:StandardEnumeration ;
    bacnet:enumName "inconsistent-parameters" ;
    bacnet:enumValue "7"^^xsd:nonNegativeInteger .

bacnet:ErrorCode-inconsistent-selection-criterion a bacnet:StandardEnumeration ;
    bacnet:enumName "inconsistent-selection-criterion" ;
    bacnet:enumValue "8"^^xsd:nonNegativeInteger .

bacnet:ErrorCode-incorrect-key a bacnet:StandardEnumeration ;
    bacnet:enumName "incorrect-key" ;
    bacnet:enumValue "98"^^xsd:nonNegativeInteger .

bacnet:ErrorCode-internal-error a bacnet:StandardEnumeration ;
    bacnet:enumName "internal-error" ;
    bacnet:enumValue "131"^^xsd:nonNegativeInteger .

bacnet:ErrorCode-invalid-array-index a bacnet:StandardEnumeration ;
    bacnet:enumName "invalid-array-index" ;
    bacnet:enumValue "42"^^xsd:nonNegativeInteger .

bacnet:ErrorCode-invalid-configuration-data a bacnet:StandardEnumeration ;
    bacnet:enumName "invalid-configuration-data" ;
    bacnet:enumValue "46"^^xsd:nonNegativeInteger .

bacnet:ErrorCode-invalid-data-type a bacnet:StandardEnumeration ;
    bacnet:enumName "invalid-data-type" ;
    bacnet:enumValue "9"^^xsd:nonNegativeInteger .

bacnet:ErrorCode-invalid-event-state a bacnet:StandardEnumeration ;
    bacnet:enumName "invalid-event-state" ;
    bacnet:enumValue "73"^^xsd:nonNegativeInteger .

bacnet:ErrorCode-invalid-file-access-method a bacnet:StandardEnumeration ;
    bacnet:enumName "invalid-file-access-method" ;
    bacnet:enumValue "10"^^xsd:nonNegativeInteger .

bacnet:ErrorCode-invalid-file-start-position a bacnet:StandardEnumeration ;
    bacnet:enumName "invalid-file-start-position" ;
    bacnet:enumValue "11"^^xsd:nonNegativeInteger .

bacnet:ErrorCode-invalid-key-data a bacnet:StandardEnumeration ;
    bacnet:enumName "invalid-key-data" ;
    bacnet:enumValue "99"^^xsd:nonNegativeInteger .

bacnet:ErrorCode-invalid-parameter-data-type a bacnet:StandardEnumeration ;
    bacnet:enumName "invalid-parameter-data-type" ;
    bacnet:enumValue "13"^^xsd:nonNegativeInteger .

bacnet:ErrorCode-invalid-tag a bacnet:StandardEnumeration ;
    bacnet:enumName "invalid-tag" ;
    bacnet:enumValue "57"^^xsd:nonNegativeInteger .

bacnet:ErrorCode-invalid-time-stamp a bacnet:StandardEnumeration ;
    bacnet:enumName "invalid-time-stamp" ;
    bacnet:enumValue "14"^^xsd:nonNegativeInteger .

bacnet:ErrorCode-key-update-in-progress a bacnet:StandardEnumeration ;
    bacnet:enumName "key-update-in-progress" ;
    bacnet:enumValue "100"^^xsd:nonNegativeInteger .

bacnet:ErrorCode-list-element-not-found a bacnet:StandardEnumeration ;
    bacnet:enumName "list-element-not-found" ;
    bacnet:enumValue "81"^^xsd:nonNegativeInteger .

bacnet:ErrorCode-log-buffer-full a bacnet:StandardEnumeration ;
    bacnet:enumName "log-buffer-full" ;
    bacnet:enumValue "75"^^xsd:nonNegativeInteger .

bacnet:ErrorCode-logged-value-purged a bacnet:StandardEnumeration ;
    bacnet:enumName "logged-value-purged" ;
    bacnet:enumValue "76"^^xsd:nonNegativeInteger .

bacnet:ErrorCode-malformed-message a bacnet:StandardEnumeration ;
    bacnet:enumName "malformed-message" ;
    bacnet:enumValue "101"^^xsd:nonNegativeInteger .

bacnet:ErrorCode-message-too-long a bacnet:StandardEnumeration ;
    bacnet:enumName "message-too-long" ;
    bacnet:enumValue "113"^^xsd:nonNegativeInteger .

bacnet:ErrorCode-missing-required-parameter a bacnet:StandardEnumeration ;
    bacnet:enumName "missing-required-parameter" ;
    bacnet:enumValue "16"^^xsd:nonNegativeInteger .

bacnet:ErrorCode-network-down a bacnet:StandardEnumeration ;
    bacnet:enumName "network-down" ;
    bacnet:enumValue "58"^^xsd:nonNegativeInteger .

bacnet:ErrorCode-no-alarm-configured a bacnet:StandardEnumeration ;
    bacnet:enumName "no-alarm-configured" ;
    bacnet:enumValue "74"^^xsd:nonNegativeInteger .

bacnet:ErrorCode-no-objects-of-specified-type a bacnet:StandardEnumeration ;
    bacnet:enumName "no-objects-of-specified-type" ;
    bacnet:enumValue "17"^^xsd:nonNegativeInteger .

bacnet:ErrorCode-no-property-specified a bacnet:StandardEnumeration ;
    bacnet:enumName "no-property-specified" ;
    bacnet:enumValue "77"^^xsd:nonNegativeInteger .

bacnet:ErrorCode-no-space-for-object a bacnet:StandardEnumeration ;
    bacnet:enumName "no-space-for-object" ;
    bacnet:enumValue "18"^^xsd:nonNegativeInteger .

bacnet:ErrorCode-no-space-to-add-list-element a bacnet:StandardEnumeration ;
    bacnet:enumName "no-space-to-add-list-element" ;
    bacnet:enumValue "19"^^xsd:nonNegativeInteger .

bacnet:ErrorCode-no-space-to-write-property a bacnet:StandardEnumeration ;
    bacnet:enumName "no-space-to-write-property" ;
    bacnet:enumValue "20"^^xsd:nonNegativeInteger .

bacnet:ErrorCode-no-vt-sessions-available a bacnet:StandardEnumeration ;
    bacnet:enumName "no-vt-sessions-available" ;
    bacnet:enumValue "21"^^xsd:nonNegativeInteger .

bacnet:ErrorCode-not-configured a bacnet:StandardEnumeration ;
    bacnet:enumName "not-configured" ;
    bacnet:enumValue "132"^^xsd:nonNegativeInteger .

bacnet:ErrorCode-not-configured-for-triggered-logging a bacnet:StandardEnumeration ;
    bacnet:enumName "not-configured-for-triggered-logging" ;
    bacnet:enumValue "78"^^xsd:nonNegativeInteger .

bacnet:ErrorCode-not-cov-property a bacnet:StandardEnumeration ;
    bacnet:enumName "not-cov-property" ;
    bacnet:enumValue "44"^^xsd:nonNegativeInteger .

bacnet:ErrorCode-not-key-server a bacnet:StandardEnumeration ;
    bacnet:enumName "not-key-server" ;
    bacnet:enumValue "102"^^xsd:nonNegativeInteger .

bacnet:ErrorCode-not-router-to-dnet a bacnet:StandardEnumeration ;
    bacnet:enumName "not-router-to-dnet" ;
    bacnet:enumValue "110"^^xsd:nonNegativeInteger .

bacnet:ErrorCode-object-deletion-not-permitted a bacnet:StandardEnumeration ;
    bacnet:enumName "object-deletion-not-permitted" ;
    bacnet:enumValue "23"^^xsd:nonNegativeInteger .

bacnet:ErrorCode-object-identifier-already-exists a bacnet:StandardEnumeration ;
    bacnet:enumName "object-identifier-already-exists" ;
    bacnet:enumValue "24"^^xsd:nonNegativeInteger .

bacnet:ErrorCode-operational-problem a bacnet:StandardEnumeration ;
    bacnet:enumName "operational-problem" ;
    bacnet:enumValue "25"^^xsd:nonNegativeInteger .

bacnet:ErrorCode-optional-functionality-not-supported a bacnet:StandardEnumeration ;
    bacnet:enumName "optional-functionality-not-supported" ;
    bacnet:enumValue "45"^^xsd:nonNegativeInteger .

bacnet:ErrorCode-other a bacnet:StandardEnumeration ;
    bacnet:enumName "other" ;
    bacnet:enumValue "0"^^xsd:nonNegativeInteger .

bacnet:ErrorCode-out-of-memory a bacnet:StandardEnumeration ;
    bacnet:enumName "out-of-memory" ;
    bacnet:enumValue "133"^^xsd:nonNegativeInteger .

bacnet:ErrorCode-parameter-out-of-range a bacnet:StandardEnumeration ;
    bacnet:enumName "parameter-out-of-range" ;
    bacnet:enumValue "80"^^xsd:nonNegativeInteger .

bacnet:ErrorCode-password-failure a bacnet:StandardEnumeration ;
    bacnet:enumName "password-failure" ;
    bacnet:enumValue "26"^^xsd:nonNegativeInteger .

bacnet:ErrorCode-property-is-not-alist a bacnet:StandardEnumeration ;
    bacnet:enumName "property-is-not-alist" ;
    bacnet:enumValue "22"^^xsd:nonNegativeInteger .

bacnet:ErrorCode-property-is-not-an-array a bacnet:StandardEnumeration ;
    bacnet:enumName "property-is-not-an-array" ;
    bacnet:enumValue "50"^^xsd:nonNegativeInteger .

bacnet:ErrorCode-read-access-denied a bacnet:StandardEnumeration ;
    bacnet:enumName "read-access-denied" ;
    bacnet:enumValue "27"^^xsd:nonNegativeInteger .

bacnet:ErrorCode-read-bdt-failed a bacnet:StandardEnumeration ;
    bacnet:enumName "read-bdt-failed" ;
    bacnet:enumValue "117"^^xsd:nonNegativeInteger .

bacnet:ErrorCode-read-fdt-failed a bacnet:StandardEnumeration ;
    bacnet:enumName "read-fdt-failed" ;
    bacnet:enumValue "119"^^xsd:nonNegativeInteger .

bacnet:ErrorCode-register-foreign-device-failed a bacnet:StandardEnumeration ;
    bacnet:enumName "register-foreign-device-failed" ;
    bacnet:enumValue "118"^^xsd:nonNegativeInteger .

bacnet:ErrorCode-reject-buffer-overflow a bacnet:StandardEnumeration ;
    bacnet:enumName "reject-buffer-overflow" ;
    bacnet:enumValue "59"^^xsd:nonNegativeInteger .

bacnet:ErrorCode-reject-inconsistent-parameters a bacnet:StandardEnumeration ;
    bacnet:enumName "reject-inconsistent-parameters" ;
    bacnet:enumValue "60"^^xsd:nonNegativeInteger .

bacnet:ErrorCode-reject-invalid-parameter-data-type a bacnet:StandardEnumeration ;
    bacnet:enumName "reject-invalid-parameter-data-type" ;
    bacnet:enumValue "61"^^xsd:nonNegativeInteger .

bacnet:ErrorCode-reject-invalid-tag a bacnet:StandardEnumeration ;
    bacnet:enumName "reject-invalid-tag" ;
    bacnet:enumValue "62"^^xsd:nonNegativeInteger .

bacnet:ErrorCode-reject-missing-required-parameter a bacnet:StandardEnumeration ;
    bacnet:enumName "reject-missing-required-parameter" ;
    bacnet:enumValue "63"^^xsd:nonNegativeInteger .

bacnet:ErrorCode-reject-other a bacnet:StandardEnumeration ;
    bacnet:enumName "reject-other" ;
    bacnet:enumValue "69"^^xsd:nonNegativeInteger .

bacnet:ErrorCode-reject-parameter-out-of-range a bacnet:StandardEnumeration ;
    bacnet:enumName "reject-parameter-out-of-range" ;
    bacnet:enumValue "64"^^xsd:nonNegativeInteger .

bacnet:ErrorCode-reject-proprietary a bacnet:StandardEnumeration ;
    bacnet:enumName "reject-proprietary" ;
    bacnet:enumValue "68"^^xsd:nonNegativeInteger .

bacnet:ErrorCode-reject-too-many-arguments a bacnet:StandardEnumeration ;
    bacnet:enumName "reject-too-many-arguments" ;
    bacnet:enumValue "65"^^xsd:nonNegativeInteger .

bacnet:ErrorCode-reject-undefined-enumeration a bacnet:StandardEnumeration ;
    bacnet:enumName "reject-undefined-enumeration" ;
    bacnet:enumValue "66"^^xsd:nonNegativeInteger .

bacnet:ErrorCode-reject-unrecognized-service a bacnet:StandardEnumeration ;
    bacnet:enumName "reject-unrecognized-service" ;
    bacnet:enumValue "67"^^xsd:nonNegativeInteger .

bacnet:ErrorCode-router-busy a bacnet:StandardEnumeration ;
    bacnet:enumName "router-busy" ;
    bacnet:enumValue "111"^^xsd:nonNegativeInteger .

bacnet:ErrorCode-security-error a bacnet:StandardEnumeration ;
    bacnet:enumName "security-error" ;
    bacnet:enumValue "114"^^xsd:nonNegativeInteger .

bacnet:ErrorCode-security-not-configured a bacnet:StandardEnumeration ;
    bacnet:enumName "security-not-configured" ;
    bacnet:enumValue "103"^^xsd:nonNegativeInteger .

bacnet:ErrorCode-service-request-denied a bacnet:StandardEnumeration ;
    bacnet:enumName "service-request-denied" ;
    bacnet:enumValue "29"^^xsd:nonNegativeInteger .

bacnet:ErrorCode-source-security-required a bacnet:StandardEnumeration ;
    bacnet:enumName "source-security-required" ;
    bacnet:enumValue "104"^^xsd:nonNegativeInteger .

bacnet:ErrorCode-success a bacnet:StandardEnumeration ;
    bacnet:enumName "success" ;
    bacnet:enumValue "84"^^xsd:nonNegativeInteger .

bacnet:ErrorCode-timeout a bacnet:StandardEnumeration ;
    bacnet:enumName "timeout" ;
    bacnet:enumValue "30"^^xsd:nonNegativeInteger .

bacnet:ErrorCode-too-many-keys a bacnet:StandardEnumeration ;
    bacnet:enumName "too-many-keys" ;
    bacnet:enumValue "105"^^xsd:nonNegativeInteger .

bacnet:ErrorCode-umknown-route a bacnet:StandardEnumeration ;
    bacnet:enumName "umknown-route" ;
    bacnet:enumValue "71"^^xsd:nonNegativeInteger .

bacnet:ErrorCode-unknown-authentication-type a bacnet:StandardEnumeration ;
    bacnet:enumName "unknown-authentication-type" ;
    bacnet:enumValue "106"^^xsd:nonNegativeInteger .

bacnet:ErrorCode-unknown-device a bacnet:StandardEnumeration ;
    bacnet:enumName "unknown-device" ;
    bacnet:enumValue "70"^^xsd:nonNegativeInteger .

bacnet:ErrorCode-unknown-file-size a bacnet:StandardEnumeration ;
    bacnet:enumName "unknown-file-size" ;
    bacnet:enumValue "122"^^xsd:nonNegativeInteger .

bacnet:ErrorCode-unknown-key a bacnet:StandardEnumeration ;
    bacnet:enumName "unknown-key" ;
    bacnet:enumValue "107"^^xsd:nonNegativeInteger .

bacnet:ErrorCode-unknown-key-revision a bacnet:StandardEnumeration ;
    bacnet:enumName "unknown-key-revision" ;
    bacnet:enumValue "108"^^xsd:nonNegativeInteger .

bacnet:ErrorCode-unknown-network-message a bacnet:StandardEnumeration ;
    bacnet:enumName "unknown-network-message" ;
    bacnet:enumValue "112"^^xsd:nonNegativeInteger .

bacnet:ErrorCode-unknown-object a bacnet:StandardEnumeration ;
    bacnet:enumName "unknown-object" ;
    bacnet:enumValue "31"^^xsd:nonNegativeInteger .

bacnet:ErrorCode-unknown-property a bacnet:StandardEnumeration ;
    bacnet:enumName "unknown-property" ;
    bacnet:enumValue "32"^^xsd:nonNegativeInteger .

bacnet:ErrorCode-unknown-source-message a bacnet:StandardEnumeration ;
    bacnet:enumName "unknown-source-message" ;
    bacnet:enumValue "109"^^xsd:nonNegativeInteger .

bacnet:ErrorCode-unknown-subscription a bacnet:StandardEnumeration ;
    bacnet:enumName "unknown-subscription" ;
    bacnet:enumValue "79"^^xsd:nonNegativeInteger .

bacnet:ErrorCode-unknown-vt-class a bacnet:StandardEnumeration ;
    bacnet:enumName "unknown-vt-class" ;
    bacnet:enumValue "34"^^xsd:nonNegativeInteger .

bacnet:ErrorCode-unknown-vt-session a bacnet:StandardEnumeration ;
    bacnet:enumName "unknown-vt-session" ;
    bacnet:enumValue "35"^^xsd:nonNegativeInteger .

bacnet:ErrorCode-unsupported-object-type a bacnet:StandardEnumeration ;
    bacnet:enumName "unsupported-object-type" ;
    bacnet:enumValue "36"^^xsd:nonNegativeInteger .

bacnet:ErrorCode-value-not-initialized a bacnet:StandardEnumeration ;
    bacnet:enumName "value-not-initialized" ;
    bacnet:enumValue "72"^^xsd:nonNegativeInteger .

bacnet:ErrorCode-value-out-of-range a bacnet:StandardEnumeration ;
    bacnet:enumName "value-out-of-range" ;
    bacnet:enumValue "37"^^xsd:nonNegativeInteger .

bacnet:ErrorCode-value-too-long a bacnet:StandardEnumeration ;
    bacnet:enumName "value-too-long" ;
    bacnet:enumValue "134"^^xsd:nonNegativeInteger .

bacnet:ErrorCode-vt-session-already-closed a bacnet:StandardEnumeration ;
    bacnet:enumName "vt-session-already-closed" ;
    bacnet:enumValue "38"^^xsd:nonNegativeInteger .

bacnet:ErrorCode-vt-session-termination-failure a bacnet:StandardEnumeration ;
    bacnet:enumName "vt-session-termination-failure" ;
    bacnet:enumValue "39"^^xsd:nonNegativeInteger .

bacnet:ErrorCode-write-access-denied a bacnet:StandardEnumeration ;
    bacnet:enumName "write-access-denied" ;
    bacnet:enumValue "40"^^xsd:nonNegativeInteger .

bacnet:ErrorCode-write-bdt-failed a bacnet:StandardEnumeration ;
    bacnet:enumName "write-bdt-failed" ;
    bacnet:enumValue "116"^^xsd:nonNegativeInteger .

bacnet:EscalatorMode-down a bacnet:StandardEnumeration ;
    bacnet:enumName "down" ;
    bacnet:enumValue "3"^^xsd:nonNegativeInteger .

bacnet:EscalatorMode-inspection a bacnet:StandardEnumeration ;
    bacnet:enumName "inspection" ;
    bacnet:enumValue "4"^^xsd:nonNegativeInteger .

bacnet:EscalatorMode-out-of-service a bacnet:StandardEnumeration ;
    bacnet:enumName "out-of-service" ;
    bacnet:enumValue "5"^^xsd:nonNegativeInteger .

bacnet:EscalatorMode-stop a bacnet:StandardEnumeration ;
    bacnet:enumName "stop" ;
    bacnet:enumValue "1"^^xsd:nonNegativeInteger .

bacnet:EscalatorMode-unknown a bacnet:StandardEnumeration ;
    bacnet:enumName "unknown" ;
    bacnet:enumValue "0"^^xsd:nonNegativeInteger .

bacnet:EscalatorMode-up a bacnet:StandardEnumeration ;
    bacnet:enumName "up" ;
    bacnet:enumValue "2"^^xsd:nonNegativeInteger .

bacnet:EscalatorOperationDirection-down-rated-speed a bacnet:StandardEnumeration ;
    bacnet:enumName "down-rated-speed" ;
    bacnet:enumValue "4"^^xsd:nonNegativeInteger .

bacnet:EscalatorOperationDirection-down-reduced-speed a bacnet:StandardEnumeration ;
    bacnet:enumName "down-reduced-speed" ;
    bacnet:enumValue "5"^^xsd:nonNegativeInteger .

bacnet:EscalatorOperationDirection-stopped a bacnet:StandardEnumeration ;
    bacnet:enumName "stopped" ;
    bacnet:enumValue "1"^^xsd:nonNegativeInteger .

bacnet:EscalatorOperationDirection-unknown a bacnet:StandardEnumeration ;
    bacnet:enumName "unknown" ;
    bacnet:enumValue "0"^^xsd:nonNegativeInteger .

bacnet:EscalatorOperationDirection-up-rated-speed a bacnet:StandardEnumeration ;
    bacnet:enumName "up-rated-speed" ;
    bacnet:enumValue "2"^^xsd:nonNegativeInteger .

bacnet:EscalatorOperationDirection-up-reduced-speed a bacnet:StandardEnumeration ;
    bacnet:enumName "up-reduced-speed" ;
    bacnet:enumValue "3"^^xsd:nonNegativeInteger .

bacnet:EventState-fault a bacnet:StandardEnumeration ;
    bacnet:enumName "fault" ;
    bacnet:enumValue "1"^^xsd:nonNegativeInteger .

bacnet:EventState-high-limit a bacnet:StandardEnumeration ;
    bacnet:enumName "high-limit" ;
    bacnet:enumValue "3"^^xsd:nonNegativeInteger .

bacnet:EventState-life-safety-alarm a bacnet:StandardEnumeration ;
    bacnet:enumName "life-safety-alarm" ;
    bacnet:enumValue "5"^^xsd:nonNegativeInteger .

bacnet:EventState-low-limit a bacnet:StandardEnumeration ;
    bacnet:enumName "low-limit" ;
    bacnet:enumValue "4"^^xsd:nonNegativeInteger .

bacnet:EventState-normal a bacnet:StandardEnumeration ;
    bacnet:enumName "normal" ;
    bacnet:enumValue "0"^^xsd:nonNegativeInteger .

bacnet:EventState-offnormal a bacnet:StandardEnumeration ;
    bacnet:enumName "offnormal" ;
    bacnet:enumValue "2"^^xsd:nonNegativeInteger .

bacnet:EventTransitionBits-to-fault a bacnet:Bit ;
    bacnet:bitName "to-fault" ;
    bacnet:bitValue "1"^^xsd:nonNegativeInteger .

bacnet:EventTransitionBits-to-normal a bacnet:Bit ;
    bacnet:bitName "to-normal" ;
    bacnet:bitValue "2"^^xsd:nonNegativeInteger .

bacnet:EventTransitionBits-to-offnormal a bacnet:Bit ;
    bacnet:bitName "to-offnormal" ;
    bacnet:bitValue "0"^^xsd:nonNegativeInteger .

bacnet:EventType-access-event a bacnet:StandardEnumeration ;
    bacnet:enumName "access-event" ;
    bacnet:enumValue "13"^^xsd:nonNegativeInteger .

bacnet:EventType-buffer-ready a bacnet:StandardEnumeration ;
    bacnet:enumName "buffer-ready" ;
    bacnet:enumValue "10"^^xsd:nonNegativeInteger .

bacnet:EventType-change-of-bitstring a bacnet:StandardEnumeration ;
    bacnet:enumName "change-of-bitstring" ;
    bacnet:enumValue "0"^^xsd:nonNegativeInteger .

bacnet:EventType-change-of-characterstring a bacnet:StandardEnumeration ;
    bacnet:enumName "change-of-characterstring" ;
    bacnet:enumValue "17"^^xsd:nonNegativeInteger .

bacnet:EventType-change-of-life-safety a bacnet:StandardEnumeration ;
    bacnet:enumName "change-of-life-safety" ;
    bacnet:enumValue "8"^^xsd:nonNegativeInteger .

bacnet:EventType-change-of-reliability a bacnet:StandardEnumeration ;
    bacnet:enumName "change-of-reliability" ;
    bacnet:enumValue "19"^^xsd:nonNegativeInteger .

bacnet:EventType-change-of-state a bacnet:StandardEnumeration ;
    bacnet:enumName "change-of-state" ;
    bacnet:enumValue "1"^^xsd:nonNegativeInteger .

bacnet:EventType-change-of-status-flags a bacnet:StandardEnumeration ;
    bacnet:enumName "change-of-status-flags" ;
    bacnet:enumValue "18"^^xsd:nonNegativeInteger .

bacnet:EventType-change-of-value a bacnet:StandardEnumeration ;
    bacnet:enumName "change-of-value" ;
    bacnet:enumValue "2"^^xsd:nonNegativeInteger .

bacnet:EventType-command-failure a bacnet:StandardEnumeration ;
    bacnet:enumName "command-failure" ;
    bacnet:enumValue "3"^^xsd:nonNegativeInteger .

bacnet:EventType-double-out-of-range a bacnet:StandardEnumeration ;
    bacnet:enumName "double-out-of-range" ;
    bacnet:enumValue "14"^^xsd:nonNegativeInteger .

bacnet:EventType-extended a bacnet:StandardEnumeration ;
    bacnet:enumName "extended" ;
    bacnet:enumValue "9"^^xsd:nonNegativeInteger .

bacnet:EventType-floating-limit a bacnet:StandardEnumeration ;
    bacnet:enumName "floating-limit" ;
    bacnet:enumValue "4"^^xsd:nonNegativeInteger .

bacnet:EventType-out-of-range a bacnet:StandardEnumeration ;
    bacnet:enumName "out-of-range" ;
    bacnet:enumValue "5"^^xsd:nonNegativeInteger .

bacnet:EventType-signed-out-of-range a bacnet:StandardEnumeration ;
    bacnet:enumName "signed-out-of-range" ;
    bacnet:enumValue "15"^^xsd:nonNegativeInteger .

bacnet:EventType-unsigned-out-of-range a bacnet:StandardEnumeration ;
    bacnet:enumName "unsigned-out-of-range" ;
    bacnet:enumValue "16"^^xsd:nonNegativeInteger .

bacnet:EventType-unsigned-range a bacnet:StandardEnumeration ;
    bacnet:enumName "unsigned-range" ;
    bacnet:enumValue "11"^^xsd:nonNegativeInteger .

bacnet:FaultType-fault-characterstring a bacnet:StandardEnumeration ;
    bacnet:enumName "fault-characterstring" ;
    bacnet:enumValue "1"^^xsd:nonNegativeInteger .

bacnet:FaultType-fault-extended a bacnet:StandardEnumeration ;
    bacnet:enumName "fault-extended" ;
    bacnet:enumValue "2"^^xsd:nonNegativeInteger .

bacnet:FaultType-fault-life-safety a bacnet:StandardEnumeration ;
    bacnet:enumName "fault-life-safety" ;
    bacnet:enumValue "3"^^xsd:nonNegativeInteger .

bacnet:FaultType-fault-state a bacnet:StandardEnumeration ;
    bacnet:enumName "fault-state" ;
    bacnet:enumValue "4"^^xsd:nonNegativeInteger .

bacnet:FaultType-fault-status-flags a bacnet:StandardEnumeration ;
    bacnet:enumName "fault-status-flags" ;
    bacnet:enumValue "5"^^xsd:nonNegativeInteger .

bacnet:FaultType-none a bacnet:StandardEnumeration ;
    bacnet:enumName "none" ;
    bacnet:enumValue "0"^^xsd:nonNegativeInteger .

bacnet:FileAccessMethod-record-access a bacnet:StandardEnumeration ;
    bacnet:enumName "record-access" ;
    bacnet:enumValue "0"^^xsd:nonNegativeInteger .

bacnet:FileAccessMethod-stream-access a bacnet:StandardEnumeration ;
    bacnet:enumName "stream-access" ;
    bacnet:enumValue "1"^^xsd:nonNegativeInteger .

bacnet:IPMode-bbmd a bacnet:StandardEnumeration ;
    bacnet:enumName "bbmd" ;
    bacnet:enumValue "2"^^xsd:nonNegativeInteger .

bacnet:IPMode-foreign a bacnet:StandardEnumeration ;
    bacnet:enumName "foreign" ;
    bacnet:enumValue "1"^^xsd:nonNegativeInteger .

bacnet:IPMode-normal a bacnet:StandardEnumeration ;
    bacnet:enumName "normal" ;
    bacnet:enumValue "0"^^xsd:nonNegativeInteger .

bacnet:LifeSafetyMode-armed a bacnet:StandardEnumeration ;
    bacnet:enumName "armed" ;
    bacnet:enumValue "5"^^xsd:nonNegativeInteger .

bacnet:LifeSafetyMode-automatic-release-disabled a bacnet:StandardEnumeration ;
    bacnet:enumName "automatic-release-disabled" ;
    bacnet:enumValue "13"^^xsd:nonNegativeInteger .

bacnet:LifeSafetyMode-default a bacnet:StandardEnumeration ;
    bacnet:enumName "default" ;
    bacnet:enumValue "14"^^xsd:nonNegativeInteger .

bacnet:LifeSafetyMode-disabled a bacnet:StandardEnumeration ;
    bacnet:enumName "disabled" ;
    bacnet:enumValue "12"^^xsd:nonNegativeInteger .

bacnet:LifeSafetyMode-disarmed a bacnet:StandardEnumeration ;
    bacnet:enumName "disarmed" ;
    bacnet:enumValue "6"^^xsd:nonNegativeInteger .

bacnet:LifeSafetyMode-disconnected a bacnet:StandardEnumeration ;
    bacnet:enumName "disconnected" ;
    bacnet:enumValue "10"^^xsd:nonNegativeInteger .

bacnet:LifeSafetyMode-enabled a bacnet:StandardEnumeration ;
    bacnet:enumName "enabled" ;
    bacnet:enumValue "11"^^xsd:nonNegativeInteger .

bacnet:LifeSafetyMode-fast a bacnet:StandardEnumeration ;
    bacnet:enumName "fast" ;
    bacnet:enumValue "9"^^xsd:nonNegativeInteger .

bacnet:LifeSafetyMode-manned a bacnet:StandardEnumeration ;
    bacnet:enumName "manned" ;
    bacnet:enumValue "3"^^xsd:nonNegativeInteger .

bacnet:LifeSafetyMode-off a bacnet:StandardEnumeration ;
    bacnet:enumName "off" ;
    bacnet:enumValue "0"^^xsd:nonNegativeInteger .

bacnet:LifeSafetyMode-on a bacnet:StandardEnumeration ;
    bacnet:enumName "on" ;
    bacnet:enumValue "1"^^xsd:nonNegativeInteger .

bacnet:LifeSafetyMode-prearmed a bacnet:StandardEnumeration ;
    bacnet:enumName "prearmed" ;
    bacnet:enumValue "7"^^xsd:nonNegativeInteger .

bacnet:LifeSafetyMode-slow a bacnet:StandardEnumeration ;
    bacnet:enumName "slow" ;
    bacnet:enumValue "8"^^xsd:nonNegativeInteger .

bacnet:LifeSafetyMode-test a bacnet:StandardEnumeration ;
    bacnet:enumName "test" ;
    bacnet:enumValue "2"^^xsd:nonNegativeInteger .

bacnet:LifeSafetyMode-unmanned a bacnet:StandardEnumeration ;
    bacnet:enumName "unmanned" ;
    bacnet:enumValue "4"^^xsd:nonNegativeInteger .

bacnet:LifeSafetyOperation-none a bacnet:StandardEnumeration ;
    bacnet:enumName "none" ;
    bacnet:enumValue "0"^^xsd:nonNegativeInteger .

bacnet:LifeSafetyOperation-reset a bacnet:StandardEnumeration ;
    bacnet:enumName "reset" ;
    bacnet:enumValue "4"^^xsd:nonNegativeInteger .

bacnet:LifeSafetyOperation-reset-alarm a bacnet:StandardEnumeration ;
    bacnet:enumName "reset-alarm" ;
    bacnet:enumValue "5"^^xsd:nonNegativeInteger .

bacnet:LifeSafetyOperation-reset-fault a bacnet:StandardEnumeration ;
    bacnet:enumName "reset-fault" ;
    bacnet:enumValue "6"^^xsd:nonNegativeInteger .

bacnet:LifeSafetyOperation-silence a bacnet:StandardEnumeration ;
    bacnet:enumName "silence" ;
    bacnet:enumValue "1"^^xsd:nonNegativeInteger .

bacnet:LifeSafetyOperation-silence-audible a bacnet:StandardEnumeration ;
    bacnet:enumName "silence-audible" ;
    bacnet:enumValue "2"^^xsd:nonNegativeInteger .

bacnet:LifeSafetyOperation-silence-visual a bacnet:StandardEnumeration ;
    bacnet:enumName "silence-visual" ;
    bacnet:enumValue "3"^^xsd:nonNegativeInteger .

bacnet:LifeSafetyOperation-unsilence a bacnet:StandardEnumeration ;
    bacnet:enumName "unsilence" ;
    bacnet:enumValue "7"^^xsd:nonNegativeInteger .

bacnet:LifeSafetyOperation-unsilence-audible a bacnet:StandardEnumeration ;
    bacnet:enumName "unsilence-audible" ;
    bacnet:enumValue "8"^^xsd:nonNegativeInteger .

bacnet:LifeSafetyOperation-unsilence-visual a bacnet:StandardEnumeration ;
    bacnet:enumName "unsilence-visual" ;
    bacnet:enumValue "9"^^xsd:nonNegativeInteger .

bacnet:LifeSafetyState-abnormal a bacnet:StandardEnumeration ;
    bacnet:enumName "abnormal" ;
    bacnet:enumValue "16"^^xsd:nonNegativeInteger .

bacnet:LifeSafetyState-active a bacnet:StandardEnumeration ;
    bacnet:enumName "active" ;
    bacnet:enumValue "7"^^xsd:nonNegativeInteger .

bacnet:LifeSafetyState-alarm a bacnet:StandardEnumeration ;
    bacnet:enumName "alarm" ;
    bacnet:enumValue "2"^^xsd:nonNegativeInteger .

bacnet:LifeSafetyState-blocked a bacnet:StandardEnumeration ;
    bacnet:enumName "blocked" ;
    bacnet:enumValue "19"^^xsd:nonNegativeInteger .

bacnet:LifeSafetyState-delayed a bacnet:StandardEnumeration ;
    bacnet:enumName "delayed" ;
    bacnet:enumValue "18"^^xsd:nonNegativeInteger .

bacnet:LifeSafetyState-duress a bacnet:StandardEnumeration ;
    bacnet:enumName "duress" ;
    bacnet:enumValue "14"^^xsd:nonNegativeInteger .

bacnet:LifeSafetyState-emergency-power a bacnet:StandardEnumeration ;
    bacnet:enumName "emergency-power" ;
    bacnet:enumValue "17"^^xsd:nonNegativeInteger .

bacnet:LifeSafetyState-fault a bacnet:StandardEnumeration ;
    bacnet:enumName "fault" ;
    bacnet:enumValue "3"^^xsd:nonNegativeInteger .

bacnet:LifeSafetyState-fault-alarm a bacnet:StandardEnumeration ;
    bacnet:enumName "fault-alarm" ;
    bacnet:enumValue "5"^^xsd:nonNegativeInteger .

bacnet:LifeSafetyState-fault-pre-alarm a bacnet:StandardEnumeration ;
    bacnet:enumName "fault-pre-alarm" ;
    bacnet:enumValue "4"^^xsd:nonNegativeInteger .

bacnet:LifeSafetyState-general-alarm a bacnet:StandardEnumeration ;
    bacnet:enumName "general-alarm" ;
    bacnet:enumValue "21"^^xsd:nonNegativeInteger .

bacnet:LifeSafetyState-holdup a bacnet:StandardEnumeration ;
    bacnet:enumName "holdup" ;
    bacnet:enumValue "13"^^xsd:nonNegativeInteger .

bacnet:LifeSafetyState-local-alarm a bacnet:StandardEnumeration ;
    bacnet:enumName "local-alarm" ;
    bacnet:enumValue "20"^^xsd:nonNegativeInteger .

bacnet:LifeSafetyState-not-ready a bacnet:StandardEnumeration ;
    bacnet:enumName "not-ready" ;
    bacnet:enumValue "6"^^xsd:nonNegativeInteger .

bacnet:LifeSafetyState-pre-alarm a bacnet:StandardEnumeration ;
    bacnet:enumName "pre-alarm" ;
    bacnet:enumValue "1"^^xsd:nonNegativeInteger .

bacnet:LifeSafetyState-quiet a bacnet:StandardEnumeration ;
    bacnet:enumName "quiet" ;
    bacnet:enumValue "0"^^xsd:nonNegativeInteger .

bacnet:LifeSafetyState-supervisory a bacnet:StandardEnumeration ;
    bacnet:enumName "supervisory" ;
    bacnet:enumValue "22"^^xsd:nonNegativeInteger .

bacnet:LifeSafetyState-tamper a bacnet:StandardEnumeration ;
    bacnet:enumName "tamper" ;
    bacnet:enumValue "8"^^xsd:nonNegativeInteger .

bacnet:LifeSafetyState-tamper-alarm a bacnet:StandardEnumeration ;
    bacnet:enumName "tamper-alarm" ;
    bacnet:enumValue "15"^^xsd:nonNegativeInteger .

bacnet:LifeSafetyState-test-active a bacnet:StandardEnumeration ;
    bacnet:enumName "test-active" ;
    bacnet:enumValue "10"^^xsd:nonNegativeInteger .

bacnet:LifeSafetyState-test-alarm a bacnet:StandardEnumeration ;
    bacnet:enumName "test-alarm" ;
    bacnet:enumValue "9"^^xsd:nonNegativeInteger .

bacnet:LifeSafetyState-test-fault a bacnet:StandardEnumeration ;
    bacnet:enumName "test-fault" ;
    bacnet:enumValue "11"^^xsd:nonNegativeInteger .

bacnet:LifeSafetyState-test-fault-alarm a bacnet:StandardEnumeration ;
    bacnet:enumName "test-fault-alarm" ;
    bacnet:enumValue "12"^^xsd:nonNegativeInteger .

bacnet:LifeSafetyState-test-supervisory a bacnet:StandardEnumeration ;
    bacnet:enumName "test-supervisory" ;
    bacnet:enumValue "23"^^xsd:nonNegativeInteger .

bacnet:LiftCarDirection-down a bacnet:StandardEnumeration ;
    bacnet:enumName "down" ;
    bacnet:enumValue "4"^^xsd:nonNegativeInteger .

bacnet:LiftCarDirection-none a bacnet:StandardEnumeration ;
    bacnet:enumName "none" ;
    bacnet:enumValue "1"^^xsd:nonNegativeInteger .

bacnet:LiftCarDirection-stopped a bacnet:StandardEnumeration ;
    bacnet:enumName "stopped" ;
    bacnet:enumValue "2"^^xsd:nonNegativeInteger .

bacnet:LiftCarDirection-unknown a bacnet:StandardEnumeration ;
    bacnet:enumName "unknown" ;
    bacnet:enumValue "0"^^xsd:nonNegativeInteger .

bacnet:LiftCarDirection-up a bacnet:StandardEnumeration ;
    bacnet:enumName "up" ;
    bacnet:enumValue "3"^^xsd:nonNegativeInteger .

bacnet:LiftCarDirection-up-and-down a bacnet:StandardEnumeration ;
    bacnet:enumName "up-and-down" ;
    bacnet:enumValue "5"^^xsd:nonNegativeInteger .

bacnet:LiftCarDoorCommand-close a bacnet:StandardEnumeration ;
    bacnet:enumName "close" ;
    bacnet:enumValue "2"^^xsd:nonNegativeInteger .

bacnet:LiftCarDoorCommand-none a bacnet:StandardEnumeration ;
    bacnet:enumName "none" ;
    bacnet:enumValue "0"^^xsd:nonNegativeInteger .

bacnet:LiftCarDoorCommand-open a bacnet:StandardEnumeration ;
    bacnet:enumName "open" ;
    bacnet:enumValue "1"^^xsd:nonNegativeInteger .

bacnet:LiftCarDriveStatus-accelerate a bacnet:StandardEnumeration ;
    bacnet:enumName "accelerate" ;
    bacnet:enumValue "3"^^xsd:nonNegativeInteger .

bacnet:LiftCarDriveStatus-braking a bacnet:StandardEnumeration ;
    bacnet:enumName "braking" ;
    bacnet:enumValue "2"^^xsd:nonNegativeInteger .

bacnet:LiftCarDriveStatus-decelerate a bacnet:StandardEnumeration ;
    bacnet:enumName "decelerate" ;
    bacnet:enumValue "4"^^xsd:nonNegativeInteger .

bacnet:LiftCarDriveStatus-multi-floor-jump a bacnet:StandardEnumeration ;
    bacnet:enumName "multi-floor-jump" ;
    bacnet:enumValue "9"^^xsd:nonNegativeInteger .

bacnet:LiftCarDriveStatus-rated-speed a bacnet:StandardEnumeration ;
    bacnet:enumName "rated-speed" ;
    bacnet:enumValue "5"^^xsd:nonNegativeInteger .

bacnet:LiftCarDriveStatus-single-floor-jump a bacnet:StandardEnumeration ;
    bacnet:enumName "single-floor-jump" ;
    bacnet:enumValue "6"^^xsd:nonNegativeInteger .

bacnet:LiftCarDriveStatus-stationary a bacnet:StandardEnumeration ;
    bacnet:enumName "stationary" ;
    bacnet:enumValue "1"^^xsd:nonNegativeInteger .

bacnet:LiftCarDriveStatus-three-floor-jump a bacnet:StandardEnumeration ;
    bacnet:enumName "three-floor-jump" ;
    bacnet:enumValue "8"^^xsd:nonNegativeInteger .

bacnet:LiftCarDriveStatus-two-floor-jump a bacnet:StandardEnumeration ;
    bacnet:enumName "two-floor-jump" ;
    bacnet:enumValue "7"^^xsd:nonNegativeInteger .

bacnet:LiftCarDriveStatus-unknown a bacnet:StandardEnumeration ;
    bacnet:enumName "unknown" ;
    bacnet:enumValue "0"^^xsd:nonNegativeInteger .

bacnet:LiftCarMode-attendant-control a bacnet:StandardEnumeration ;
    bacnet:enumName "attendant-control" ;
    bacnet:enumValue "5"^^xsd:nonNegativeInteger .

bacnet:LiftCarMode-cabinet-recall a bacnet:StandardEnumeration ;
    bacnet:enumName "cabinet-recall" ;
    bacnet:enumValue "9"^^xsd:nonNegativeInteger .

bacnet:LiftCarMode-earthquake-operation a bacnet:StandardEnumeration ;
    bacnet:enumName "earthquake-operation" ;
    bacnet:enumValue "10"^^xsd:nonNegativeInteger .

bacnet:LiftCarMode-emergency-power a bacnet:StandardEnumeration ;
    bacnet:enumName "emergency-power" ;
    bacnet:enumValue "7"^^xsd:nonNegativeInteger .

bacnet:LiftCarMode-fire-operation a bacnet:StandardEnumeration ;
    bacnet:enumName "fire-operation" ;
    bacnet:enumValue "11"^^xsd:nonNegativeInteger .

bacnet:LiftCarMode-firefighter-control a bacnet:StandardEnumeration ;
    bacnet:enumName "firefighter-control" ;
    bacnet:enumValue "6"^^xsd:nonNegativeInteger .

bacnet:LiftCarMode-homing a bacnet:StandardEnumeration ;
    bacnet:enumName "homing" ;
    bacnet:enumValue "3"^^xsd:nonNegativeInteger .

bacnet:LiftCarMode-inspection a bacnet:StandardEnumeration ;
    bacnet:enumName "inspection" ;
    bacnet:enumValue "8"^^xsd:nonNegativeInteger .

bacnet:LiftCarMode-normal a bacnet:StandardEnumeration ;
    bacnet:enumName "normal" ;
    bacnet:enumValue "1"^^xsd:nonNegativeInteger .

bacnet:LiftCarMode-occupant-evacuation a bacnet:StandardEnumeration ;
    bacnet:enumName "occupant-evacuation" ;
    bacnet:enumValue "13"^^xsd:nonNegativeInteger .

bacnet:LiftCarMode-out-of-service a bacnet:StandardEnumeration ;
    bacnet:enumName "out-of-service" ;
    bacnet:enumValue "12"^^xsd:nonNegativeInteger .

bacnet:LiftCarMode-parking a bacnet:StandardEnumeration ;
    bacnet:enumName "parking" ;
    bacnet:enumValue "4"^^xsd:nonNegativeInteger .

bacnet:LiftCarMode-unknown a bacnet:StandardEnumeration ;
    bacnet:enumName "unknown" ;
    bacnet:enumValue "0"^^xsd:nonNegativeInteger .

bacnet:LiftCarMode-vip a bacnet:StandardEnumeration ;
    bacnet:enumName "vip" ;
    bacnet:enumValue "2"^^xsd:nonNegativeInteger .

bacnet:LiftFault-call-button-stuck a bacnet:StandardEnumeration ;
    bacnet:enumName "call-button-stuck" ;
    bacnet:enumValue "9"^^xsd:nonNegativeInteger .

bacnet:LiftFault-car-stopped-outside-landing-zone a bacnet:StandardEnumeration ;
    bacnet:enumName "car-stopped-outside-landing-zone" ;
    bacnet:enumValue "8"^^xsd:nonNegativeInteger .

bacnet:LiftFault-controller-fault a bacnet:StandardEnumeration ;
    bacnet:enumName "controller-fault" ;
    bacnet:enumValue "0"^^xsd:nonNegativeInteger .

bacnet:LiftFault-controller-supply-fault a bacnet:StandardEnumeration ;
    bacnet:enumName "controller-supply-fault" ;
    bacnet:enumValue "11"^^xsd:nonNegativeInteger .

bacnet:LiftFault-door-closing-fault a bacnet:StandardEnumeration ;
    bacnet:enumName "door-closing-fault" ;
    bacnet:enumValue "6"^^xsd:nonNegativeInteger .

bacnet:LiftFault-door-opening-fault a bacnet:StandardEnumeration ;
    bacnet:enumName "door-opening-fault" ;
    bacnet:enumValue "7"^^xsd:nonNegativeInteger .

bacnet:LiftFault-drive-and-motor-fault a bacnet:StandardEnumeration ;
    bacnet:enumName "drive-and-motor-fault" ;
    bacnet:enumValue "1"^^xsd:nonNegativeInteger .

bacnet:LiftFault-drive-temperature-exceeded a bacnet:StandardEnumeration ;
    bacnet:enumName "drive-temperature-exceeded" ;
    bacnet:enumValue "15"^^xsd:nonNegativeInteger .

bacnet:LiftFault-governor-and-safety-gear-fault a bacnet:StandardEnumeration ;
    bacnet:enumName "governor-and-safety-gear-fault" ;
    bacnet:enumValue "2"^^xsd:nonNegativeInteger .

bacnet:LiftFault-lift-shaft-device-fault a bacnet:StandardEnumeration ;
    bacnet:enumName "lift-shaft-device-fault" ;
    bacnet:enumValue "3"^^xsd:nonNegativeInteger .

bacnet:LiftFault-load-measurement-fault a bacnet:StandardEnumeration ;
    bacnet:enumName "load-measurement-fault" ;
    bacnet:enumValue "16"^^xsd:nonNegativeInteger .

bacnet:LiftFault-position-lost a bacnet:StandardEnumeration ;
    bacnet:enumName "position-lost" ;
    bacnet:enumValue "14"^^xsd:nonNegativeInteger .

bacnet:LiftFault-power-supply-fault a bacnet:StandardEnumeration ;
    bacnet:enumName "power-supply-fault" ;
    bacnet:enumValue "4"^^xsd:nonNegativeInteger .

bacnet:LiftFault-runtime-limit-exceeded a bacnet:StandardEnumeration ;
    bacnet:enumName "runtime-limit-exceeded" ;
    bacnet:enumValue "13"^^xsd:nonNegativeInteger .

bacnet:LiftFault-safety-interlock-fault a bacnet:StandardEnumeration ;
    bacnet:enumName "safety-interlock-fault" ;
    bacnet:enumValue "5"^^xsd:nonNegativeInteger .

bacnet:LiftFault-self-test-failure a bacnet:StandardEnumeration ;
    bacnet:enumName "self-test-failure" ;
    bacnet:enumValue "12"^^xsd:nonNegativeInteger .

bacnet:LiftFault-start-failure a bacnet:StandardEnumeration ;
    bacnet:enumName "start-failure" ;
    bacnet:enumValue "10"^^xsd:nonNegativeInteger .

bacnet:LiftGroupMode-down-peak a bacnet:StandardEnumeration ;
    bacnet:enumName "down-peak" ;
    bacnet:enumValue "2"^^xsd:nonNegativeInteger .

bacnet:LiftGroupMode-emergency-power a bacnet:StandardEnumeration ;
    bacnet:enumName "emergency-power" ;
    bacnet:enumValue "5"^^xsd:nonNegativeInteger .

bacnet:LiftGroupMode-four-way a bacnet:StandardEnumeration ;
    bacnet:enumName "four-way" ;
    bacnet:enumValue "4"^^xsd:nonNegativeInteger .

bacnet:LiftGroupMode-normal a bacnet:StandardEnumeration ;
    bacnet:enumName "normal" ;
    bacnet:enumValue "1"^^xsd:nonNegativeInteger .

bacnet:LiftGroupMode-two-way a bacnet:StandardEnumeration ;
    bacnet:enumName "two-way" ;
    bacnet:enumValue "3"^^xsd:nonNegativeInteger .

bacnet:LiftGroupMode-unknown a bacnet:StandardEnumeration ;
    bacnet:enumName "unknown" ;
    bacnet:enumValue "0"^^xsd:nonNegativeInteger .

bacnet:LiftGroupMode-up-peak a bacnet:StandardEnumeration ;
    bacnet:enumName "up-peak" ;
    bacnet:enumValue "6"^^xsd:nonNegativeInteger .

bacnet:LightingInProgress-fade-active a bacnet:StandardEnumeration ;
    bacnet:enumName "fade-active" ;
    bacnet:enumValue "1"^^xsd:nonNegativeInteger .

bacnet:LightingInProgress-idle a bacnet:StandardEnumeration ;
    bacnet:enumName "idle" ;
    bacnet:enumValue "0"^^xsd:nonNegativeInteger .

bacnet:LightingInProgress-not-controlled a bacnet:StandardEnumeration ;
    bacnet:enumName "not-controlled" ;
    bacnet:enumValue "3"^^xsd:nonNegativeInteger .

bacnet:LightingInProgress-other a bacnet:StandardEnumeration ;
    bacnet:enumName "other" ;
    bacnet:enumValue "4"^^xsd:nonNegativeInteger .

bacnet:LightingInProgress-ramp-active a bacnet:StandardEnumeration ;
    bacnet:enumName "ramp-active" ;
    bacnet:enumValue "2"^^xsd:nonNegativeInteger .

bacnet:LightingOperation-fade-to a bacnet:StandardEnumeration ;
    bacnet:enumName "fade-to" ;
    bacnet:enumValue "1"^^xsd:nonNegativeInteger .

bacnet:LightingOperation-none a bacnet:StandardEnumeration ;
    bacnet:enumName "none" ;
    bacnet:enumValue "0"^^xsd:nonNegativeInteger .

bacnet:LightingOperation-ramp-to a bacnet:StandardEnumeration ;
    bacnet:enumName "ramp-to" ;
    bacnet:enumValue "2"^^xsd:nonNegativeInteger .

bacnet:LightingOperation-step-down a bacnet:StandardEnumeration ;
    bacnet:enumName "step-down" ;
    bacnet:enumValue "4"^^xsd:nonNegativeInteger .

bacnet:LightingOperation-step-off a bacnet:StandardEnumeration ;
    bacnet:enumName "step-off" ;
    bacnet:enumValue "6"^^xsd:nonNegativeInteger .

bacnet:LightingOperation-step-on a bacnet:StandardEnumeration ;
    bacnet:enumName "step-on" ;
    bacnet:enumValue "5"^^xsd:nonNegativeInteger .

bacnet:LightingOperation-step-up a bacnet:StandardEnumeration ;
    bacnet:enumName "step-up" ;
    bacnet:enumValue "3"^^xsd:nonNegativeInteger .

bacnet:LightingOperation-stop a bacnet:StandardEnumeration ;
    bacnet:enumName "stop" ;
    bacnet:enumValue "10"^^xsd:nonNegativeInteger .

bacnet:LightingOperation-warn a bacnet:StandardEnumeration ;
    bacnet:enumName "warn" ;
    bacnet:enumValue "7"^^xsd:nonNegativeInteger .

bacnet:LightingOperation-warn-off a bacnet:StandardEnumeration ;
    bacnet:enumName "warn-off" ;
    bacnet:enumValue "8"^^xsd:nonNegativeInteger .

bacnet:LightingOperation-warn-relinquish a bacnet:StandardEnumeration ;
    bacnet:enumName "warn-relinquish" ;
    bacnet:enumValue "9"^^xsd:nonNegativeInteger .

bacnet:LightingTransition-fade a bacnet:StandardEnumeration ;
    bacnet:enumName "fade" ;
    bacnet:enumValue "1"^^xsd:nonNegativeInteger .

bacnet:LightingTransition-none a bacnet:StandardEnumeration ;
    bacnet:enumName "none" ;
    bacnet:enumValue "0"^^xsd:nonNegativeInteger .

bacnet:LightingTransition-ramp a bacnet:StandardEnumeration ;
    bacnet:enumName "ramp" ;
    bacnet:enumValue "2"^^xsd:nonNegativeInteger .

bacnet:LimitEnable-high-limit-enable a bacnet:Bit ;
    bacnet:bitName "high-limit-enable" ;
    bacnet:bitValue "1"^^xsd:nonNegativeInteger .

bacnet:LimitEnable-low-limit-enable a bacnet:Bit ;
    bacnet:bitName "low-limit-enable" ;
    bacnet:bitValue "0"^^xsd:nonNegativeInteger .

bacnet:ListOfAccessCredentialDisableReason a sh:NodeShape ;
    rdfs:comment "List Of Access Credential Disable Reason" ;
    rdfs:subClassOf bacnet:List ;
    sh:property [ sh:datatype xsd:string ;
            sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] .

bacnet:ListOfAccessZoneOccupancyState a sh:NodeShape ;
    rdfs:comment "List Of Access Zone Occupancy State" ;
    rdfs:subClassOf bacnet:List ;
    sh:property [ sh:datatype xsd:string ;
            sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] .

bacnet:ListOfAuditLogRecord a sh:NodeShape ;
    rdfs:comment "List Of Audit Log Record" ;
    rdfs:subClassOf bacnet:List ;
    sh:property [ sh:node bacnet:AuditLogRecord ;
            sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] .

bacnet:ListOfAuthorizationException a sh:NodeShape ;
    rdfs:comment "List Of Authorization Exception" ;
    rdfs:subClassOf bacnet:List ;
    sh:property [ sh:datatype xsd:string ;
            sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] .

bacnet:ListOfBDTEntry a sh:NodeShape ;
    rdfs:comment "List Of BDTEntry" ;
    rdfs:subClassOf bacnet:List ;
    sh:property [ sh:node bacnet:BDTEntry ;
            sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] .

bacnet:ListOfCOVMultipleSubscription a sh:NodeShape ;
    rdfs:comment "List Of COVMultiple Subscription" ;
    rdfs:subClassOf bacnet:List ;
    sh:property [ sh:node bacnet:COVMultipleSubscription ;
            sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] .

bacnet:ListOfCOVSubscription a sh:NodeShape ;
    rdfs:comment "List Of COVSubscription" ;
    rdfs:subClassOf bacnet:List ;
    sh:property [ sh:node bacnet:COVSubscription ;
            sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] .

bacnet:ListOfCalendarEntry a sh:NodeShape ;
    rdfs:comment "List Of Calendar Entry" ;
    rdfs:subClassOf bacnet:List ;
    sh:property [ sh:node bacnet:CalendarEntry ;
            sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] .

bacnet:ListOfEventLogRecord a sh:NodeShape ;
    rdfs:comment "List Of Event Log Record" ;
    rdfs:subClassOf bacnet:List ;
    sh:property [ sh:node bacnet:EventLogRecord ;
            sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] .

bacnet:ListOfEventNotificationSubscription a sh:NodeShape ;
    rdfs:comment "List Of Event Notification Subscription" ;
    rdfs:subClassOf bacnet:List ;
    sh:property [ sh:node bacnet:EventNotificationSubscription ;
            sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] .

bacnet:ListOfFDTEntry a sh:NodeShape ;
    rdfs:comment "List Of FDTEntry" ;
    rdfs:subClassOf bacnet:List ;
    sh:property [ sh:node bacnet:FDTEntry ;
            sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] .

bacnet:ListOfLandingCallStatus a sh:NodeShape ;
    rdfs:comment "List Of Landing Call Status" ;
    rdfs:subClassOf bacnet:List ;
    sh:property [ sh:node bacnet:LandingCallStatus ;
            sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] .

bacnet:ListOfLogMultipleRecord a sh:NodeShape ;
    rdfs:comment "List Of Log Multiple Record" ;
    rdfs:subClassOf bacnet:List ;
    sh:property [ sh:node bacnet:LogMultipleRecord ;
            sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] .

bacnet:ListOfLogRecord a sh:NodeShape ;
    rdfs:comment "List Of Log Record" ;
    rdfs:subClassOf bacnet:List ;
    sh:property [ sh:node bacnet:LogRecord ;
            sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] .

bacnet:ListOfReadAccessResult a sh:NodeShape ;
    rdfs:comment "List Of Read Access Result" ;
    rdfs:subClassOf bacnet:List ;
    sh:property [ sh:node bacnet:ReadAccessResult ;
            sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] .

bacnet:ListOfReadAccessSpecification a sh:NodeShape ;
    rdfs:comment "List Of Read Access Specification" ;
    rdfs:subClassOf bacnet:List ;
    sh:property [ sh:node bacnet:ReadAccessSpecification ;
            sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] .

bacnet:ListOfRouterEntry a sh:NodeShape ;
    rdfs:comment "List Of Router Entry" ;
    rdfs:subClassOf bacnet:List ;
    sh:property [ sh:node bacnet:RouterEntry ;
            sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] .

bacnet:ListOfTimerState a sh:NodeShape ;
    rdfs:comment "List Of Timer State" ;
    rdfs:subClassOf bacnet:List ;
    sh:property [ sh:datatype xsd:string ;
            sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] .

bacnet:ListOfVMACEntry a sh:NodeShape ;
    rdfs:comment "List Of VMACEntry" ;
    rdfs:subClassOf bacnet:List ;
    sh:property [ sh:node bacnet:VMACEntry ;
            sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] .

bacnet:ListOfVTClass a sh:NodeShape ;
    rdfs:comment "List Of VTClass" ;
    rdfs:subClassOf bacnet:List ;
    sh:property [ sh:datatype xsd:string ;
            sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] .

bacnet:ListOfVTSession a sh:NodeShape ;
    rdfs:comment "List Of VTSession" ;
    rdfs:subClassOf bacnet:List ;
    sh:property [ sh:node bacnet:VTSession ;
            sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] .

bacnet:List_Of_Session_Keys a bacnet:Property .

bacnet:LockStatus-fault a bacnet:StandardEnumeration ;
    bacnet:enumName "fault" ;
    bacnet:enumValue "2"^^xsd:nonNegativeInteger .

bacnet:LockStatus-locked a bacnet:StandardEnumeration ;
    bacnet:enumName "locked" ;
    bacnet:enumValue "0"^^xsd:nonNegativeInteger .

bacnet:LockStatus-unknown a bacnet:StandardEnumeration ;
    bacnet:enumName "unknown" ;
    bacnet:enumValue "3"^^xsd:nonNegativeInteger .

bacnet:LockStatus-unlocked a bacnet:StandardEnumeration ;
    bacnet:enumName "unlocked" ;
    bacnet:enumValue "1"^^xsd:nonNegativeInteger .

bacnet:LogStatus-buffer-purged a bacnet:Bit ;
    bacnet:bitName "buffer-purged" ;
    bacnet:bitValue "1"^^xsd:nonNegativeInteger .

bacnet:LogStatus-log-disabled a bacnet:Bit ;
    bacnet:bitName "log-disabled" ;
    bacnet:bitValue "0"^^xsd:nonNegativeInteger .

bacnet:LogStatus-log-interrupted a bacnet:Bit ;
    bacnet:bitName "log-interrupted" ;
    bacnet:bitValue "2"^^xsd:nonNegativeInteger .

bacnet:LoggingType-cov a bacnet:StandardEnumeration ;
    bacnet:enumName "cov" ;
    bacnet:enumValue "1"^^xsd:nonNegativeInteger .

bacnet:LoggingType-polled a bacnet:StandardEnumeration ;
    bacnet:enumName "polled" ;
    bacnet:enumValue "0"^^xsd:nonNegativeInteger .

bacnet:LoggingType-triggered a bacnet:StandardEnumeration ;
    bacnet:enumName "triggered" ;
    bacnet:enumValue "2"^^xsd:nonNegativeInteger .

bacnet:Maintenance-need-service-inoperative a bacnet:StandardEnumeration ;
    bacnet:enumName "need-service-inoperative" ;
    bacnet:enumValue "3"^^xsd:nonNegativeInteger .

bacnet:Maintenance-need-service-operational a bacnet:StandardEnumeration ;
    bacnet:enumName "need-service-operational" ;
    bacnet:enumValue "2"^^xsd:nonNegativeInteger .

bacnet:Maintenance-none a bacnet:StandardEnumeration ;
    bacnet:enumName "none" ;
    bacnet:enumValue "0"^^xsd:nonNegativeInteger .

bacnet:Maintenance-periodic-test a bacnet:StandardEnumeration ;
    bacnet:enumName "periodic-test" ;
    bacnet:enumValue "1"^^xsd:nonNegativeInteger .

bacnet:Master_Exemption a bacnet:Property .

bacnet:NetworkNumberQuality-configured a bacnet:StandardEnumeration ;
    bacnet:enumName "configured" ;
    bacnet:enumValue "3"^^xsd:nonNegativeInteger .

bacnet:NetworkNumberQuality-learned a bacnet:StandardEnumeration ;
    bacnet:enumName "learned" ;
    bacnet:enumValue "1"^^xsd:nonNegativeInteger .

bacnet:NetworkNumberQuality-learned-configured a bacnet:StandardEnumeration ;
    bacnet:enumName "learned-configured" ;
    bacnet:enumValue "2"^^xsd:nonNegativeInteger .

bacnet:NetworkNumberQuality-unknown a bacnet:StandardEnumeration ;
    bacnet:enumName "unknown" ;
    bacnet:enumValue "0"^^xsd:nonNegativeInteger .

bacnet:NetworkPortCommand-discard-changes a bacnet:StandardEnumeration ;
    bacnet:enumName "discard-changes" ;
    bacnet:enumValue "1"^^xsd:nonNegativeInteger .

bacnet:NetworkPortCommand-disconnect a bacnet:StandardEnumeration ;
    bacnet:enumName "disconnect" ;
    bacnet:enumValue "6"^^xsd:nonNegativeInteger .

bacnet:NetworkPortCommand-idle a bacnet:StandardEnumeration ;
    bacnet:enumName "idle" ;
    bacnet:enumValue "0"^^xsd:nonNegativeInteger .

bacnet:NetworkPortCommand-renew-dhcP a bacnet:StandardEnumeration ;
    bacnet:enumName "renew-dhcP" ;
    bacnet:enumValue "4"^^xsd:nonNegativeInteger .

bacnet:NetworkPortCommand-renew-fd-dregistration a bacnet:StandardEnumeration ;
    bacnet:enumName "renew-fd-dregistration" ;
    bacnet:enumValue "2"^^xsd:nonNegativeInteger .

bacnet:NetworkPortCommand-restart-autonegotiation a bacnet:StandardEnumeration ;
    bacnet:enumName "restart-autonegotiation" ;
    bacnet:enumValue "5"^^xsd:nonNegativeInteger .

bacnet:NetworkPortCommand-restart-port a bacnet:StandardEnumeration ;
    bacnet:enumName "restart-port" ;
    bacnet:enumValue "7"^^xsd:nonNegativeInteger .

bacnet:NetworkPortCommand-restart-slave-discovery a bacnet:StandardEnumeration ;
    bacnet:enumName "restart-slave-discovery" ;
    bacnet:enumValue "3"^^xsd:nonNegativeInteger .

bacnet:NetworkType-arcnet a bacnet:StandardEnumeration ;
    bacnet:enumName "arcnet" ;
    bacnet:enumValue "1"^^xsd:nonNegativeInteger .

bacnet:NetworkType-ethernet a bacnet:StandardEnumeration ;
    bacnet:enumName "ethernet" ;
    bacnet:enumValue "0"^^xsd:nonNegativeInteger .

bacnet:NetworkType-ipv4 a bacnet:StandardEnumeration ;
    bacnet:enumName "ipv4" ;
    bacnet:enumValue "5"^^xsd:nonNegativeInteger .

bacnet:NetworkType-ipv6 a bacnet:StandardEnumeration ;
    bacnet:enumName "ipv6" ;
    bacnet:enumValue "9"^^xsd:nonNegativeInteger .

bacnet:NetworkType-lontalk a bacnet:StandardEnumeration ;
    bacnet:enumName "lontalk" ;
    bacnet:enumValue "4"^^xsd:nonNegativeInteger .

bacnet:NetworkType-mstp a bacnet:StandardEnumeration ;
    bacnet:enumName "mstp" ;
    bacnet:enumValue "2"^^xsd:nonNegativeInteger .

bacnet:NetworkType-ptp a bacnet:StandardEnumeration ;
    bacnet:enumName "ptp" ;
    bacnet:enumValue "3"^^xsd:nonNegativeInteger .

bacnet:NetworkType-serial a bacnet:StandardEnumeration ;
    bacnet:enumName "serial" ;
    bacnet:enumValue "10"^^xsd:nonNegativeInteger .

bacnet:NetworkType-virtual a bacnet:StandardEnumeration ;
    bacnet:enumName "virtual" ;
    bacnet:enumValue "7"^^xsd:nonNegativeInteger .

bacnet:NetworkType-zigbee a bacnet:StandardEnumeration ;
    bacnet:enumName "zigbee" ;
    bacnet:enumValue "6"^^xsd:nonNegativeInteger .

bacnet:NodeType-area a bacnet:StandardEnumeration ;
    bacnet:enumName "area" ;
    bacnet:enumValue "5"^^xsd:nonNegativeInteger .

bacnet:NodeType-collection a bacnet:StandardEnumeration ;
    bacnet:enumName "collection" ;
    bacnet:enumValue "8"^^xsd:nonNegativeInteger .

bacnet:NodeType-device a bacnet:StandardEnumeration ;
    bacnet:enumName "device" ;
    bacnet:enumValue "3"^^xsd:nonNegativeInteger .

bacnet:NodeType-equipment a bacnet:StandardEnumeration ;
    bacnet:enumName "equipment" ;
    bacnet:enumValue "6"^^xsd:nonNegativeInteger .

bacnet:NodeType-functional a bacnet:StandardEnumeration ;
    bacnet:enumName "functional" ;
    bacnet:enumValue "10"^^xsd:nonNegativeInteger .

bacnet:NodeType-network a bacnet:StandardEnumeration ;
    bacnet:enumName "network" ;
    bacnet:enumValue "2"^^xsd:nonNegativeInteger .

bacnet:NodeType-organizational a bacnet:StandardEnumeration ;
    bacnet:enumName "organizational" ;
    bacnet:enumValue "4"^^xsd:nonNegativeInteger .

bacnet:NodeType-other a bacnet:StandardEnumeration ;
    bacnet:enumName "other" ;
    bacnet:enumValue "11"^^xsd:nonNegativeInteger .

bacnet:NodeType-point a bacnet:StandardEnumeration ;
    bacnet:enumName "point" ;
    bacnet:enumValue "7"^^xsd:nonNegativeInteger .

bacnet:NodeType-property a bacnet:StandardEnumeration ;
    bacnet:enumName "property" ;
    bacnet:enumValue "9"^^xsd:nonNegativeInteger .

bacnet:NodeType-system a bacnet:StandardEnumeration ;
    bacnet:enumName "system" ;
    bacnet:enumValue "1"^^xsd:nonNegativeInteger .

bacnet:NodeType-unknown a bacnet:StandardEnumeration ;
    bacnet:enumName "unknown" ;
    bacnet:enumValue "0"^^xsd:nonNegativeInteger .

bacnet:NotifyType-ack-notification a bacnet:StandardEnumeration ;
    bacnet:enumName "ack-notification" ;
    bacnet:enumValue "2"^^xsd:nonNegativeInteger .

bacnet:NotifyType-alarm a bacnet:StandardEnumeration ;
    bacnet:enumName "alarm" ;
    bacnet:enumValue "0"^^xsd:nonNegativeInteger .

bacnet:NotifyType-event a bacnet:StandardEnumeration ;
    bacnet:enumName "event" ;
    bacnet:enumValue "1"^^xsd:nonNegativeInteger .

bacnet:ObjectType-access-credential a bacnet:StandardEnumeration ;
    bacnet:enumName "access-credential" ;
    bacnet:enumValue "32"^^xsd:nonNegativeInteger .

bacnet:ObjectType-access-door a bacnet:StandardEnumeration ;
    bacnet:enumName "access-door" ;
    bacnet:enumValue "30"^^xsd:nonNegativeInteger .

bacnet:ObjectType-access-point a bacnet:StandardEnumeration ;
    bacnet:enumName "access-point" ;
    bacnet:enumValue "33"^^xsd:nonNegativeInteger .

bacnet:ObjectType-access-rights a bacnet:StandardEnumeration ;
    bacnet:enumName "access-rights" ;
    bacnet:enumValue "34"^^xsd:nonNegativeInteger .

bacnet:ObjectType-access-user a bacnet:StandardEnumeration ;
    bacnet:enumName "access-user" ;
    bacnet:enumValue "35"^^xsd:nonNegativeInteger .

bacnet:ObjectType-access-zone a bacnet:StandardEnumeration ;
    bacnet:enumName "access-zone" ;
    bacnet:enumValue "36"^^xsd:nonNegativeInteger .

bacnet:ObjectType-accumulator a bacnet:StandardEnumeration ;
    bacnet:enumName "accumulator" ;
    bacnet:enumValue "23"^^xsd:nonNegativeInteger .

bacnet:ObjectType-alert-enrollment a bacnet:StandardEnumeration ;
    bacnet:enumName "alert-enrollment" ;
    bacnet:enumValue "52"^^xsd:nonNegativeInteger .

bacnet:ObjectType-analog-input a bacnet:StandardEnumeration ;
    bacnet:enumName "analog-input" ;
    bacnet:enumValue "0"^^xsd:nonNegativeInteger .

bacnet:ObjectType-analog-output a bacnet:StandardEnumeration ;
    bacnet:enumName "analog-output" ;
    bacnet:enumValue "1"^^xsd:nonNegativeInteger .

bacnet:ObjectType-analog-value a bacnet:StandardEnumeration ;
    bacnet:enumName "analog-value" ;
    bacnet:enumValue "2"^^xsd:nonNegativeInteger .

bacnet:ObjectType-audit-log a bacnet:StandardEnumeration ;
    bacnet:enumName "audit-log" ;
    bacnet:enumValue "61"^^xsd:nonNegativeInteger .

bacnet:ObjectType-audit-reporter a bacnet:StandardEnumeration ;
    bacnet:enumName "audit-reporter" ;
    bacnet:enumValue "62"^^xsd:nonNegativeInteger .

bacnet:ObjectType-averaging a bacnet:StandardEnumeration ;
    bacnet:enumName "averaging" ;
    bacnet:enumValue "18"^^xsd:nonNegativeInteger .

bacnet:ObjectType-binary-input a bacnet:StandardEnumeration ;
    bacnet:enumName "binary-input" ;
    bacnet:enumValue "3"^^xsd:nonNegativeInteger .

bacnet:ObjectType-binary-lighting-output a bacnet:StandardEnumeration ;
    bacnet:enumName "binary-lighting-output" ;
    bacnet:enumValue "55"^^xsd:nonNegativeInteger .

bacnet:ObjectType-binary-output a bacnet:StandardEnumeration ;
    bacnet:enumName "binary-output" ;
    bacnet:enumValue "4"^^xsd:nonNegativeInteger .

bacnet:ObjectType-binary-value a bacnet:StandardEnumeration ;
    bacnet:enumName "binary-value" ;
    bacnet:enumValue "5"^^xsd:nonNegativeInteger .

bacnet:ObjectType-bitstring-value a bacnet:StandardEnumeration ;
    bacnet:enumName "bitstring-value" ;
    bacnet:enumValue "39"^^xsd:nonNegativeInteger .

bacnet:ObjectType-calendar a bacnet:StandardEnumeration ;
    bacnet:enumName "calendar" ;
    bacnet:enumValue "6"^^xsd:nonNegativeInteger .

bacnet:ObjectType-channel a bacnet:StandardEnumeration ;
    bacnet:enumName "channel" ;
    bacnet:enumValue "53"^^xsd:nonNegativeInteger .

bacnet:ObjectType-characterstring-value a bacnet:StandardEnumeration ;
    bacnet:enumName "characterstring-value" ;
    bacnet:enumValue "40"^^xsd:nonNegativeInteger .

bacnet:ObjectType-command a bacnet:StandardEnumeration ;
    bacnet:enumName "command" ;
    bacnet:enumValue "7"^^xsd:nonNegativeInteger .

bacnet:ObjectType-credential-data-input a bacnet:StandardEnumeration ;
    bacnet:enumName "credential-data-input" ;
    bacnet:enumValue "37"^^xsd:nonNegativeInteger .

bacnet:ObjectType-date-pattern-value a bacnet:StandardEnumeration ;
    bacnet:enumName "date-pattern-value" ;
    bacnet:enumValue "41"^^xsd:nonNegativeInteger .

bacnet:ObjectType-date-value a bacnet:StandardEnumeration ;
    bacnet:enumName "date-value" ;
    bacnet:enumValue "42"^^xsd:nonNegativeInteger .

bacnet:ObjectType-datetime-pattern-value a bacnet:StandardEnumeration ;
    bacnet:enumName "datetime-pattern-value" ;
    bacnet:enumValue "43"^^xsd:nonNegativeInteger .

bacnet:ObjectType-datetime-value a bacnet:StandardEnumeration ;
    bacnet:enumName "datetime-value" ;
    bacnet:enumValue "44"^^xsd:nonNegativeInteger .

bacnet:ObjectType-device a bacnet:StandardEnumeration ;
    bacnet:enumName "device" ;
    bacnet:enumValue "8"^^xsd:nonNegativeInteger .

bacnet:ObjectType-elevator-group a bacnet:StandardEnumeration ;
    bacnet:enumName "elevator-group" ;
    bacnet:enumValue "57"^^xsd:nonNegativeInteger .

bacnet:ObjectType-escalator a bacnet:StandardEnumeration ;
    bacnet:enumName "escalator" ;
    bacnet:enumValue "58"^^xsd:nonNegativeInteger .

bacnet:ObjectType-event-enrollment a bacnet:StandardEnumeration ;
    bacnet:enumName "event-enrollment" ;
    bacnet:enumValue "9"^^xsd:nonNegativeInteger .

bacnet:ObjectType-event-log a bacnet:StandardEnumeration ;
    bacnet:enumName "event-log" ;
    bacnet:enumValue "25"^^xsd:nonNegativeInteger .

bacnet:ObjectType-file a bacnet:StandardEnumeration ;
    bacnet:enumName "file" ;
    bacnet:enumValue "10"^^xsd:nonNegativeInteger .

bacnet:ObjectType-global-group a bacnet:StandardEnumeration ;
    bacnet:enumName "global-group" ;
    bacnet:enumValue "26"^^xsd:nonNegativeInteger .

bacnet:ObjectType-group a bacnet:StandardEnumeration ;
    bacnet:enumName "group" ;
    bacnet:enumValue "11"^^xsd:nonNegativeInteger .

bacnet:ObjectType-integer-value a bacnet:StandardEnumeration ;
    bacnet:enumName "integer-value" ;
    bacnet:enumValue "45"^^xsd:nonNegativeInteger .

bacnet:ObjectType-large-analog-value a bacnet:StandardEnumeration ;
    bacnet:enumName "large-analog-value" ;
    bacnet:enumValue "46"^^xsd:nonNegativeInteger .

bacnet:ObjectType-life-safety-point a bacnet:StandardEnumeration ;
    bacnet:enumName "life-safety-point" ;
    bacnet:enumValue "21"^^xsd:nonNegativeInteger .

bacnet:ObjectType-life-safety-zone a bacnet:StandardEnumeration ;
    bacnet:enumName "life-safety-zone" ;
    bacnet:enumValue "22"^^xsd:nonNegativeInteger .

bacnet:ObjectType-lift a bacnet:StandardEnumeration ;
    bacnet:enumName "lift" ;
    bacnet:enumValue "59"^^xsd:nonNegativeInteger .

bacnet:ObjectType-lighting-output a bacnet:StandardEnumeration ;
    bacnet:enumName "lighting-output" ;
    bacnet:enumValue "54"^^xsd:nonNegativeInteger .

bacnet:ObjectType-load-control a bacnet:StandardEnumeration ;
    bacnet:enumName "load-control" ;
    bacnet:enumValue "28"^^xsd:nonNegativeInteger .

bacnet:ObjectType-loop a bacnet:StandardEnumeration ;
    bacnet:enumName "loop" ;
    bacnet:enumValue "12"^^xsd:nonNegativeInteger .

bacnet:ObjectType-multi-state-input a bacnet:StandardEnumeration ;
    bacnet:enumName "multi-state-input" ;
    bacnet:enumValue "13"^^xsd:nonNegativeInteger .

bacnet:ObjectType-multi-state-output a bacnet:StandardEnumeration ;
    bacnet:enumName "multi-state-output" ;
    bacnet:enumValue "14"^^xsd:nonNegativeInteger .

bacnet:ObjectType-multi-state-value a bacnet:StandardEnumeration ;
    bacnet:enumName "multi-state-value" ;
    bacnet:enumValue "19"^^xsd:nonNegativeInteger .

bacnet:ObjectType-network-port a bacnet:StandardEnumeration ;
    bacnet:enumName "network-port" ;
    bacnet:enumValue "56"^^xsd:nonNegativeInteger .

bacnet:ObjectType-network-security a bacnet:StandardEnumeration ;
    bacnet:enumName "network-security" ;
    bacnet:enumValue "38"^^xsd:nonNegativeInteger .

bacnet:ObjectType-notification-class a bacnet:StandardEnumeration ;
    bacnet:enumName "notification-class" ;
    bacnet:enumValue "15"^^xsd:nonNegativeInteger .

bacnet:ObjectType-notification-forwarder a bacnet:StandardEnumeration ;
    bacnet:enumName "notification-forwarder" ;
    bacnet:enumValue "51"^^xsd:nonNegativeInteger .

bacnet:ObjectType-octetstring-value a bacnet:StandardEnumeration ;
    bacnet:enumName "octetstring-value" ;
    bacnet:enumValue "47"^^xsd:nonNegativeInteger .

bacnet:ObjectType-positive-integer-value a bacnet:StandardEnumeration ;
    bacnet:enumName "positive-integer-value" ;
    bacnet:enumValue "48"^^xsd:nonNegativeInteger .

bacnet:ObjectType-program a bacnet:StandardEnumeration ;
    bacnet:enumName "program" ;
    bacnet:enumValue "16"^^xsd:nonNegativeInteger .

bacnet:ObjectType-pulse-converter a bacnet:StandardEnumeration ;
    bacnet:enumName "pulse-converter" ;
    bacnet:enumValue "24"^^xsd:nonNegativeInteger .

bacnet:ObjectType-schedule a bacnet:StandardEnumeration ;
    bacnet:enumName "schedule" ;
    bacnet:enumValue "17"^^xsd:nonNegativeInteger .

bacnet:ObjectType-structured-view a bacnet:StandardEnumeration ;
    bacnet:enumName "structured-view" ;
    bacnet:enumValue "29"^^xsd:nonNegativeInteger .

bacnet:ObjectType-time-pattern-value a bacnet:StandardEnumeration ;
    bacnet:enumName "time-pattern-value" ;
    bacnet:enumValue "49"^^xsd:nonNegativeInteger .

bacnet:ObjectType-time-value a bacnet:StandardEnumeration ;
    bacnet:enumName "time-value" ;
    bacnet:enumValue "50"^^xsd:nonNegativeInteger .

bacnet:ObjectType-timer a bacnet:StandardEnumeration ;
    bacnet:enumName "timer" ;
    bacnet:enumValue "31"^^xsd:nonNegativeInteger .

bacnet:ObjectType-trend-log a bacnet:StandardEnumeration ;
    bacnet:enumName "trend-log" ;
    bacnet:enumValue "20"^^xsd:nonNegativeInteger .

bacnet:ObjectType-trend-log-multiple a bacnet:StandardEnumeration ;
    bacnet:enumName "trend-log-multiple" ;
    bacnet:enumValue "27"^^xsd:nonNegativeInteger .

bacnet:ObjectTypesSupported-access-credential a bacnet:Bit ;
    bacnet:bitName "access-credential" ;
    bacnet:bitValue "32"^^xsd:nonNegativeInteger .

bacnet:ObjectTypesSupported-access-door a bacnet:Bit ;
    bacnet:bitName "access-door" ;
    bacnet:bitValue "30"^^xsd:nonNegativeInteger .

bacnet:ObjectTypesSupported-access-point a bacnet:Bit ;
    bacnet:bitName "access-point" ;
    bacnet:bitValue "33"^^xsd:nonNegativeInteger .

bacnet:ObjectTypesSupported-access-rights a bacnet:Bit ;
    bacnet:bitName "access-rights" ;
    bacnet:bitValue "34"^^xsd:nonNegativeInteger .

bacnet:ObjectTypesSupported-access-user a bacnet:Bit ;
    bacnet:bitName "access-user" ;
    bacnet:bitValue "35"^^xsd:nonNegativeInteger .

bacnet:ObjectTypesSupported-access-zone a bacnet:Bit ;
    bacnet:bitName "access-zone" ;
    bacnet:bitValue "36"^^xsd:nonNegativeInteger .

bacnet:ObjectTypesSupported-accumulator a bacnet:Bit ;
    bacnet:bitName "accumulator" ;
    bacnet:bitValue "23"^^xsd:nonNegativeInteger .

bacnet:ObjectTypesSupported-alert-enrollment a bacnet:Bit ;
    bacnet:bitName "alert-enrollment" ;
    bacnet:bitValue "52"^^xsd:nonNegativeInteger .

bacnet:ObjectTypesSupported-analog-input a bacnet:Bit ;
    bacnet:bitName "analog-input" ;
    bacnet:bitValue "0"^^xsd:nonNegativeInteger .

bacnet:ObjectTypesSupported-analog-output a bacnet:Bit ;
    bacnet:bitName "analog-output" ;
    bacnet:bitValue "1"^^xsd:nonNegativeInteger .

bacnet:ObjectTypesSupported-analog-value a bacnet:Bit ;
    bacnet:bitName "analog-value" ;
    bacnet:bitValue "2"^^xsd:nonNegativeInteger .

bacnet:ObjectTypesSupported-averaging a bacnet:Bit ;
    bacnet:bitName "averaging" ;
    bacnet:bitValue "18"^^xsd:nonNegativeInteger .

bacnet:ObjectTypesSupported-binary-input a bacnet:Bit ;
    bacnet:bitName "binary-input" ;
    bacnet:bitValue "3"^^xsd:nonNegativeInteger .

bacnet:ObjectTypesSupported-binary-output a bacnet:Bit ;
    bacnet:bitName "binary-output" ;
    bacnet:bitValue "4"^^xsd:nonNegativeInteger .

bacnet:ObjectTypesSupported-binary-value a bacnet:Bit ;
    bacnet:bitName "binary-value" ;
    bacnet:bitValue "5"^^xsd:nonNegativeInteger .

bacnet:ObjectTypesSupported-bitstring-value a bacnet:Bit ;
    bacnet:bitName "bitstring-value" ;
    bacnet:bitValue "39"^^xsd:nonNegativeInteger .

bacnet:ObjectTypesSupported-calendar a bacnet:Bit ;
    bacnet:bitName "calendar" ;
    bacnet:bitValue "6"^^xsd:nonNegativeInteger .

bacnet:ObjectTypesSupported-channel a bacnet:Bit ;
    bacnet:bitName "channel" ;
    bacnet:bitValue "53"^^xsd:nonNegativeInteger .

bacnet:ObjectTypesSupported-characterstring-value a bacnet:Bit ;
    bacnet:bitName "characterstring-value" ;
    bacnet:bitValue "40"^^xsd:nonNegativeInteger .

bacnet:ObjectTypesSupported-command a bacnet:Bit ;
    bacnet:bitName "command" ;
    bacnet:bitValue "7"^^xsd:nonNegativeInteger .

bacnet:ObjectTypesSupported-credential-data-input a bacnet:Bit ;
    bacnet:bitName "credential-data-input" ;
    bacnet:bitValue "37"^^xsd:nonNegativeInteger .

bacnet:ObjectTypesSupported-date-pattern-value a bacnet:Bit ;
    bacnet:bitName "date-pattern-value" ;
    bacnet:bitValue "41"^^xsd:nonNegativeInteger .

bacnet:ObjectTypesSupported-date-value a bacnet:Bit ;
    bacnet:bitName "date-value" ;
    bacnet:bitValue "42"^^xsd:nonNegativeInteger .

bacnet:ObjectTypesSupported-datetime-pattern-value a bacnet:Bit ;
    bacnet:bitName "datetime-pattern-value" ;
    bacnet:bitValue "43"^^xsd:nonNegativeInteger .

bacnet:ObjectTypesSupported-datetime-value a bacnet:Bit ;
    bacnet:bitName "datetime-value" ;
    bacnet:bitValue "44"^^xsd:nonNegativeInteger .

bacnet:ObjectTypesSupported-device a bacnet:Bit ;
    bacnet:bitName "device" ;
    bacnet:bitValue "8"^^xsd:nonNegativeInteger .

bacnet:ObjectTypesSupported-event-enrollment a bacnet:Bit ;
    bacnet:bitName "event-enrollment" ;
    bacnet:bitValue "9"^^xsd:nonNegativeInteger .

bacnet:ObjectTypesSupported-event-log a bacnet:Bit ;
    bacnet:bitName "event-log" ;
    bacnet:bitValue "25"^^xsd:nonNegativeInteger .

bacnet:ObjectTypesSupported-file a bacnet:Bit ;
    bacnet:bitName "file" ;
    bacnet:bitValue "10"^^xsd:nonNegativeInteger .

bacnet:ObjectTypesSupported-global-group a bacnet:Bit ;
    bacnet:bitName "global-group" ;
    bacnet:bitValue "26"^^xsd:nonNegativeInteger .

bacnet:ObjectTypesSupported-group a bacnet:Bit ;
    bacnet:bitName "group" ;
    bacnet:bitValue "11"^^xsd:nonNegativeInteger .

bacnet:ObjectTypesSupported-integer-value a bacnet:Bit ;
    bacnet:bitName "integer-value" ;
    bacnet:bitValue "45"^^xsd:nonNegativeInteger .

bacnet:ObjectTypesSupported-large-analog-value a bacnet:Bit ;
    bacnet:bitName "large-analog-value" ;
    bacnet:bitValue "46"^^xsd:nonNegativeInteger .

bacnet:ObjectTypesSupported-life-safety-point a bacnet:Bit ;
    bacnet:bitName "life-safety-point" ;
    bacnet:bitValue "21"^^xsd:nonNegativeInteger .

bacnet:ObjectTypesSupported-life-safety-zone a bacnet:Bit ;
    bacnet:bitName "life-safety-zone" ;
    bacnet:bitValue "22"^^xsd:nonNegativeInteger .

bacnet:ObjectTypesSupported-lighting-output a bacnet:Bit ;
    bacnet:bitName "lighting-output" ;
    bacnet:bitValue "54"^^xsd:nonNegativeInteger .

bacnet:ObjectTypesSupported-load-control a bacnet:Bit ;
    bacnet:bitName "load-control" ;
    bacnet:bitValue "28"^^xsd:nonNegativeInteger .

bacnet:ObjectTypesSupported-loop a bacnet:Bit ;
    bacnet:bitName "loop" ;
    bacnet:bitValue "12"^^xsd:nonNegativeInteger .

bacnet:ObjectTypesSupported-multi-state-input a bacnet:Bit ;
    bacnet:bitName "multi-state-input" ;
    bacnet:bitValue "13"^^xsd:nonNegativeInteger .

bacnet:ObjectTypesSupported-multi-state-output a bacnet:Bit ;
    bacnet:bitName "multi-state-output" ;
    bacnet:bitValue "14"^^xsd:nonNegativeInteger .

bacnet:ObjectTypesSupported-multi-state-value a bacnet:Bit ;
    bacnet:bitName "multi-state-value" ;
    bacnet:bitValue "19"^^xsd:nonNegativeInteger .

bacnet:ObjectTypesSupported-network-port a bacnet:Bit ;
    bacnet:bitName "network-port" ;
    bacnet:bitValue "56"^^xsd:nonNegativeInteger .

bacnet:ObjectTypesSupported-network-security a bacnet:Bit ;
    bacnet:bitName "network-security" ;
    bacnet:bitValue "38"^^xsd:nonNegativeInteger .

bacnet:ObjectTypesSupported-notification-class a bacnet:Bit ;
    bacnet:bitName "notification-class" ;
    bacnet:bitValue "15"^^xsd:nonNegativeInteger .

bacnet:ObjectTypesSupported-notification-forwarder a bacnet:Bit ;
    bacnet:bitName "notification-forwarder" ;
    bacnet:bitValue "51"^^xsd:nonNegativeInteger .

bacnet:ObjectTypesSupported-octetstring-value a bacnet:Bit ;
    bacnet:bitName "octetstring-value" ;
    bacnet:bitValue "47"^^xsd:nonNegativeInteger .

bacnet:ObjectTypesSupported-positive-integer-value a bacnet:Bit ;
    bacnet:bitName "positive-integer-value" ;
    bacnet:bitValue "48"^^xsd:nonNegativeInteger .

bacnet:ObjectTypesSupported-program a bacnet:Bit ;
    bacnet:bitName "program" ;
    bacnet:bitValue "16"^^xsd:nonNegativeInteger .

bacnet:ObjectTypesSupported-pulse-converter a bacnet:Bit ;
    bacnet:bitName "pulse-converter" ;
    bacnet:bitValue "24"^^xsd:nonNegativeInteger .

bacnet:ObjectTypesSupported-schedule a bacnet:Bit ;
    bacnet:bitName "schedule" ;
    bacnet:bitValue "17"^^xsd:nonNegativeInteger .

bacnet:ObjectTypesSupported-structured-view a bacnet:Bit ;
    bacnet:bitName "structured-view" ;
    bacnet:bitValue "29"^^xsd:nonNegativeInteger .

bacnet:ObjectTypesSupported-time-pattern-value a bacnet:Bit ;
    bacnet:bitName "time-pattern-value" ;
    bacnet:bitValue "49"^^xsd:nonNegativeInteger .

bacnet:ObjectTypesSupported-time-value a bacnet:Bit ;
    bacnet:bitName "time-value" ;
    bacnet:bitValue "50"^^xsd:nonNegativeInteger .

bacnet:ObjectTypesSupported-trend-log a bacnet:Bit ;
    bacnet:bitName "trend-log" ;
    bacnet:bitValue "20"^^xsd:nonNegativeInteger .

bacnet:ObjectTypesSupported-trend-log-multiple a bacnet:Bit ;
    bacnet:bitName "trend-log-multiple" ;
    bacnet:bitValue "27"^^xsd:nonNegativeInteger .

bacnet:Object_Identifier a bacnet:Property .

bacnet:Object_Name a bacnet:Property .

bacnet:Object_Type a bacnet:Property .

bacnet:Occupancy_Exemption a bacnet:Property .

bacnet:Optional a bacnet:Property .

bacnet:Passback_Exemption a bacnet:Property .

bacnet:Polarity-normal a bacnet:StandardEnumeration ;
    bacnet:enumName "normal" ;
    bacnet:enumValue "0"^^xsd:nonNegativeInteger .

bacnet:Polarity-reverse a bacnet:StandardEnumeration ;
    bacnet:enumName "reverse" ;
    bacnet:enumValue "1"^^xsd:nonNegativeInteger .

bacnet:PriorityFilter-automatic-life-safety a bacnet:Bit ;
    bacnet:bitName "automatic-life-safety" ;
    bacnet:bitValue "1"^^xsd:nonNegativeInteger .

bacnet:PriorityFilter-critical-equipment-controls a bacnet:Bit ;
    bacnet:bitName "critical-equipment-controls" ;
    bacnet:bitValue "4"^^xsd:nonNegativeInteger .

bacnet:PriorityFilter-manual-life-safety a bacnet:Bit ;
    bacnet:bitName "manual-life-safety" ;
    bacnet:bitValue "0"^^xsd:nonNegativeInteger .

bacnet:PriorityFilter-manual-operator a bacnet:Bit ;
    bacnet:bitName "manual-operator" ;
    bacnet:bitValue "7"^^xsd:nonNegativeInteger .

bacnet:PriorityFilter-minimum-on-off a bacnet:Bit ;
    bacnet:bitName "minimum-on-off" ;
    bacnet:bitValue "5"^^xsd:nonNegativeInteger .

bacnet:PriorityFilter-priority10 a bacnet:Bit ;
    bacnet:bitName "priority10" ;
    bacnet:bitValue "9"^^xsd:nonNegativeInteger .

bacnet:PriorityFilter-priority11 a bacnet:Bit ;
    bacnet:bitName "priority11" ;
    bacnet:bitValue "10"^^xsd:nonNegativeInteger .

bacnet:PriorityFilter-priority12 a bacnet:Bit ;
    bacnet:bitName "priority12" ;
    bacnet:bitValue "11"^^xsd:nonNegativeInteger .

bacnet:PriorityFilter-priority13 a bacnet:Bit ;
    bacnet:bitName "priority13" ;
    bacnet:bitValue "12"^^xsd:nonNegativeInteger .

bacnet:PriorityFilter-priority14 a bacnet:Bit ;
    bacnet:bitName "priority14" ;
    bacnet:bitValue "13"^^xsd:nonNegativeInteger .

bacnet:PriorityFilter-priority15 a bacnet:Bit ;
    bacnet:bitName "priority15" ;
    bacnet:bitValue "14"^^xsd:nonNegativeInteger .

bacnet:PriorityFilter-priority16 a bacnet:Bit ;
    bacnet:bitName "priority16" ;
    bacnet:bitValue "15"^^xsd:nonNegativeInteger .

bacnet:PriorityFilter-priority3 a bacnet:Bit ;
    bacnet:bitName "priority3" ;
    bacnet:bitValue "2"^^xsd:nonNegativeInteger .

bacnet:PriorityFilter-priority4 a bacnet:Bit ;
    bacnet:bitName "priority4" ;
    bacnet:bitValue "3"^^xsd:nonNegativeInteger .

bacnet:PriorityFilter-priority7 a bacnet:Bit ;
    bacnet:bitName "priority7" ;
    bacnet:bitValue "6"^^xsd:nonNegativeInteger .

bacnet:PriorityFilter-priority9 a bacnet:Bit ;
    bacnet:bitName "priority9" ;
    bacnet:bitValue "8"^^xsd:nonNegativeInteger .

bacnet:Process_Identifier a bacnet:Property .

bacnet:Profile_Location a bacnet:Property .

bacnet:Profile_Name a bacnet:Property .

bacnet:ProgramError-internal a bacnet:StandardEnumeration ;
    bacnet:enumName "internal" ;
    bacnet:enumValue "2"^^xsd:nonNegativeInteger .

bacnet:ProgramError-load-failed a bacnet:StandardEnumeration ;
    bacnet:enumName "load-failed" ;
    bacnet:enumValue "1"^^xsd:nonNegativeInteger .

bacnet:ProgramError-normal a bacnet:StandardEnumeration ;
    bacnet:enumName "normal" ;
    bacnet:enumValue "0"^^xsd:nonNegativeInteger .

bacnet:ProgramError-other a bacnet:StandardEnumeration ;
    bacnet:enumName "other" ;
    bacnet:enumValue "4"^^xsd:nonNegativeInteger .

bacnet:ProgramError-program a bacnet:StandardEnumeration ;
    bacnet:enumName "program" ;
    bacnet:enumValue "3"^^xsd:nonNegativeInteger .

bacnet:ProgramRequest-halt a bacnet:StandardEnumeration ;
    bacnet:enumName "halt" ;
    bacnet:enumValue "3"^^xsd:nonNegativeInteger .

bacnet:ProgramRequest-load a bacnet:StandardEnumeration ;
    bacnet:enumName "load" ;
    bacnet:enumValue "1"^^xsd:nonNegativeInteger .

bacnet:ProgramRequest-ready a bacnet:StandardEnumeration ;
    bacnet:enumName "ready" ;
    bacnet:enumValue "0"^^xsd:nonNegativeInteger .

bacnet:ProgramRequest-restart a bacnet:StandardEnumeration ;
    bacnet:enumName "restart" ;
    bacnet:enumValue "4"^^xsd:nonNegativeInteger .

bacnet:ProgramRequest-run a bacnet:StandardEnumeration ;
    bacnet:enumName "run" ;
    bacnet:enumValue "2"^^xsd:nonNegativeInteger .

bacnet:ProgramRequest-unload a bacnet:StandardEnumeration ;
    bacnet:enumName "unload" ;
    bacnet:enumValue "5"^^xsd:nonNegativeInteger .

bacnet:ProgramState-halted a bacnet:StandardEnumeration ;
    bacnet:enumName "halted" ;
    bacnet:enumValue "4"^^xsd:nonNegativeInteger .

bacnet:ProgramState-idle a bacnet:StandardEnumeration ;
    bacnet:enumName "idle" ;
    bacnet:enumValue "0"^^xsd:nonNegativeInteger .

bacnet:ProgramState-loading a bacnet:StandardEnumeration ;
    bacnet:enumName "loading" ;
    bacnet:enumValue "1"^^xsd:nonNegativeInteger .

bacnet:ProgramState-running a bacnet:StandardEnumeration ;
    bacnet:enumName "running" ;
    bacnet:enumValue "2"^^xsd:nonNegativeInteger .

bacnet:ProgramState-unloading a bacnet:StandardEnumeration ;
    bacnet:enumName "unloading" ;
    bacnet:enumValue "5"^^xsd:nonNegativeInteger .

bacnet:ProgramState-waiting a bacnet:StandardEnumeration ;
    bacnet:enumName "waiting" ;
    bacnet:enumValue "3"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier a bacnet:ExtendedEnumerated,
        bacnet:StandardEnumerated ;
    bacnet:enumVendorMaximum "4194303"^^xsd:nonNegativeInteger ;
    bacnet:enumVendorMinimum "512"^^xsd:nonNegativeInteger ;
    bacnet:hasMember bacnet:PropertyIdentifier-absentee-limit,
        bacnet:PropertyIdentifier-accepted-modes,
        bacnet:PropertyIdentifier-access-alarm-events,
        bacnet:PropertyIdentifier-access-doors,
        bacnet:PropertyIdentifier-access-event,
        bacnet:PropertyIdentifier-access-event-authentication-factor,
        bacnet:PropertyIdentifier-access-event-credential,
        bacnet:PropertyIdentifier-access-event-tag,
        bacnet:PropertyIdentifier-access-event-time,
        bacnet:PropertyIdentifier-access-transaction-events,
        bacnet:PropertyIdentifier-accompaniment,
        bacnet:PropertyIdentifier-accompaniment-time,
        bacnet:PropertyIdentifier-ack-required,
        bacnet:PropertyIdentifier-acked-transitions,
        bacnet:PropertyIdentifier-action,
        bacnet:PropertyIdentifier-action-text,
        bacnet:PropertyIdentifier-activation-time,
        bacnet:PropertyIdentifier-active-authentication-policy,
        bacnet:PropertyIdentifier-active-cov-multiple-subscriptions,
        bacnet:PropertyIdentifier-active-cov-subscriptions,
        bacnet:PropertyIdentifier-active-text,
        bacnet:PropertyIdentifier-active-vt-sessions,
        bacnet:PropertyIdentifier-actual-shed-level,
        bacnet:PropertyIdentifier-adjust-value,
        bacnet:PropertyIdentifier-alarm-value,
        bacnet:PropertyIdentifier-alarm-values,
        bacnet:PropertyIdentifier-align-intervals,
        bacnet:PropertyIdentifier-all,
        bacnet:PropertyIdentifier-all-writes-successful,
        bacnet:PropertyIdentifier-allow-group-delay-inhibit,
        bacnet:PropertyIdentifier-apdu-length,
        bacnet:PropertyIdentifier-apdu-segment-timeout,
        bacnet:PropertyIdentifier-apdu-timeout,
        bacnet:PropertyIdentifier-application-software-version,
        bacnet:PropertyIdentifier-archive,
        bacnet:PropertyIdentifier-assigned-access-rights,
        bacnet:PropertyIdentifier-assigned-landing-calls,
        bacnet:PropertyIdentifier-attempted-samples,
        bacnet:PropertyIdentifier-audit-level,
        bacnet:PropertyIdentifier-audit-notification-recipient,
        bacnet:PropertyIdentifier-audit-source-reporter,
        bacnet:PropertyIdentifier-auditable-operations,
        bacnet:PropertyIdentifier-auditable-priority-filter,
        bacnet:PropertyIdentifier-authentication-factors,
        bacnet:PropertyIdentifier-authentication-policy-list,
        bacnet:PropertyIdentifier-authentication-policy-names,
        bacnet:PropertyIdentifier-authentication-status,
        bacnet:PropertyIdentifier-authorization-exemptions,
        bacnet:PropertyIdentifier-authorization-mode,
        bacnet:PropertyIdentifier-auto-slave-discovery,
        bacnet:PropertyIdentifier-average-value,
        bacnet:PropertyIdentifier-backup-and-restore-state,
        bacnet:PropertyIdentifier-backup-failure-timeout,
        bacnet:PropertyIdentifier-backup-preparation-time,
        bacnet:PropertyIdentifier-bacnet-ip-global-address,
        bacnet:PropertyIdentifier-bacnet-ip-mode,
        bacnet:PropertyIdentifier-bacnet-ip-multicast-address,
        bacnet:PropertyIdentifier-bacnet-ip-nat-traversal,
        bacnet:PropertyIdentifier-bacnet-ip-udp-port,
        bacnet:PropertyIdentifier-bacnet-ipv6-mode,
        bacnet:PropertyIdentifier-bacnet-ipv6-multicast-address,
        bacnet:PropertyIdentifier-bacnet-ipv6-udp-port,
        bacnet:PropertyIdentifier-base-device-security-policy,
        bacnet:PropertyIdentifier-bbmd-accept-fd-registrations,
        bacnet:PropertyIdentifier-bbmd-broadcast-distribution-table,
        bacnet:PropertyIdentifier-bbmd-foreign-device-table,
        bacnet:PropertyIdentifier-belongs-to,
        bacnet:PropertyIdentifier-bias,
        bacnet:PropertyIdentifier-bit-mask,
        bacnet:PropertyIdentifier-bit-text,
        bacnet:PropertyIdentifier-blink-warn-enable,
        bacnet:PropertyIdentifier-buffer-size,
        bacnet:PropertyIdentifier-car-assigned-direction,
        bacnet:PropertyIdentifier-car-door-command,
        bacnet:PropertyIdentifier-car-door-status,
        bacnet:PropertyIdentifier-car-door-text,
        bacnet:PropertyIdentifier-car-door-zone,
        bacnet:PropertyIdentifier-car-drive-status,
        bacnet:PropertyIdentifier-car-load,
        bacnet:PropertyIdentifier-car-load-units,
        bacnet:PropertyIdentifier-car-mode,
        bacnet:PropertyIdentifier-car-moving-direction,
        bacnet:PropertyIdentifier-car-position,
        bacnet:PropertyIdentifier-change-of-state-count,
        bacnet:PropertyIdentifier-change-of-state-time,
        bacnet:PropertyIdentifier-changes-pending,
        bacnet:PropertyIdentifier-channel-number,
        bacnet:PropertyIdentifier-client-cov-increment,
        bacnet:PropertyIdentifier-command,
        bacnet:PropertyIdentifier-command-time-array,
        bacnet:PropertyIdentifier-configuration-files,
        bacnet:PropertyIdentifier-control-groups,
        bacnet:PropertyIdentifier-controlled-variable-reference,
        bacnet:PropertyIdentifier-controlled-variable-units,
        bacnet:PropertyIdentifier-controlled-variable-value,
        bacnet:PropertyIdentifier-count,
        bacnet:PropertyIdentifier-count-before-change,
        bacnet:PropertyIdentifier-count-change-time,
        bacnet:PropertyIdentifier-cov-increment,
        bacnet:PropertyIdentifier-cov-period,
        bacnet:PropertyIdentifier-cov-resubscription-interval,
        bacnet:PropertyIdentifier-covu-period,
        bacnet:PropertyIdentifier-covu-recipients,
        bacnet:PropertyIdentifier-credential-disable,
        bacnet:PropertyIdentifier-credential-status,
        bacnet:PropertyIdentifier-credentials,
        bacnet:PropertyIdentifier-credentials-in-zone,
        bacnet:PropertyIdentifier-current-command-priority,
        bacnet:PropertyIdentifier-database-revision,
        bacnet:PropertyIdentifier-date-list,
        bacnet:PropertyIdentifier-daylight-savings-status,
        bacnet:PropertyIdentifier-days-remaining,
        bacnet:PropertyIdentifier-deadband,
        bacnet:PropertyIdentifier-default-fade-time,
        bacnet:PropertyIdentifier-default-present-value,
        bacnet:PropertyIdentifier-default-ramp-rate,
        bacnet:PropertyIdentifier-default-step-increment,
        bacnet:PropertyIdentifier-default-subordinate-relationship,
        bacnet:PropertyIdentifier-default-timeout,
        bacnet:PropertyIdentifier-delete-on-forward,
        bacnet:PropertyIdentifier-deployed-profile-location,
        bacnet:PropertyIdentifier-derivative-constant,
        bacnet:PropertyIdentifier-derivative-constant-units,
        bacnet:PropertyIdentifier-description,
        bacnet:PropertyIdentifier-description-of-halt,
        bacnet:PropertyIdentifier-device-address-binding,
        bacnet:PropertyIdentifier-device-type,
        bacnet:PropertyIdentifier-device-uuiD,
        bacnet:PropertyIdentifier-direct-reading,
        bacnet:PropertyIdentifier-distribution-key-revision,
        bacnet:PropertyIdentifier-do-not-hide,
        bacnet:PropertyIdentifier-door-alarm-state,
        bacnet:PropertyIdentifier-door-extended-pulse-time,
        bacnet:PropertyIdentifier-door-members,
        bacnet:PropertyIdentifier-door-open-too-long-time,
        bacnet:PropertyIdentifier-door-pulse-time,
        bacnet:PropertyIdentifier-door-status,
        bacnet:PropertyIdentifier-door-unlock-delay-time,
        bacnet:PropertyIdentifier-duty-window,
        bacnet:PropertyIdentifier-effective-period,
        bacnet:PropertyIdentifier-egress-active,
        bacnet:PropertyIdentifier-egress-time,
        bacnet:PropertyIdentifier-elapsed-active-time,
        bacnet:PropertyIdentifier-elevator-group,
        bacnet:PropertyIdentifier-enable,
        bacnet:PropertyIdentifier-energy-meter,
        bacnet:PropertyIdentifier-energy-meter-ref,
        bacnet:PropertyIdentifier-entry-points,
        bacnet:PropertyIdentifier-error-limit,
        bacnet:PropertyIdentifier-escalator-mode,
        bacnet:PropertyIdentifier-event-algorithm-inhibit,
        bacnet:PropertyIdentifier-event-algorithm-inhibit-ref,
        bacnet:PropertyIdentifier-event-detection-enable,
        bacnet:PropertyIdentifier-event-enable,
        bacnet:PropertyIdentifier-event-message-texts,
        bacnet:PropertyIdentifier-event-message-texts-config,
        bacnet:PropertyIdentifier-event-parameters,
        bacnet:PropertyIdentifier-event-state,
        bacnet:PropertyIdentifier-event-time-stamps,
        bacnet:PropertyIdentifier-event-type,
        bacnet:PropertyIdentifier-exception-schedule,
        bacnet:PropertyIdentifier-execution-delay,
        bacnet:PropertyIdentifier-exit-points,
        bacnet:PropertyIdentifier-expected-shed-level,
        bacnet:PropertyIdentifier-expiration-time,
        bacnet:PropertyIdentifier-extended-time-enable,
        bacnet:PropertyIdentifier-failed-attempt-events,
        bacnet:PropertyIdentifier-failed-attempts,
        bacnet:PropertyIdentifier-failed-attempts-time,
        bacnet:PropertyIdentifier-fault-high-limit,
        bacnet:PropertyIdentifier-fault-low-limit,
        bacnet:PropertyIdentifier-fault-parameters,
        bacnet:PropertyIdentifier-fault-signals,
        bacnet:PropertyIdentifier-fault-type,
        bacnet:PropertyIdentifier-fault-values,
        bacnet:PropertyIdentifier-fd-bbmd-address,
        bacnet:PropertyIdentifier-fd-subscription-lifetime,
        bacnet:PropertyIdentifier-feedback-value,
        bacnet:PropertyIdentifier-file-access-method,
        bacnet:PropertyIdentifier-file-size,
        bacnet:PropertyIdentifier-file-type,
        bacnet:PropertyIdentifier-firmware-revision,
        bacnet:PropertyIdentifier-floor-number,
        bacnet:PropertyIdentifier-floor-text,
        bacnet:PropertyIdentifier-full-duty-baseline,
        bacnet:PropertyIdentifier-global-identifier,
        bacnet:PropertyIdentifier-group-iD,
        bacnet:PropertyIdentifier-group-member-names,
        bacnet:PropertyIdentifier-group-members,
        bacnet:PropertyIdentifier-group-mode,
        bacnet:PropertyIdentifier-high-limit,
        bacnet:PropertyIdentifier-higher-deck,
        bacnet:PropertyIdentifier-in-process,
        bacnet:PropertyIdentifier-in-progress,
        bacnet:PropertyIdentifier-inactive-text,
        bacnet:PropertyIdentifier-initial-timeout,
        bacnet:PropertyIdentifier-input-reference,
        bacnet:PropertyIdentifier-installation-iD,
        bacnet:PropertyIdentifier-instance-of,
        bacnet:PropertyIdentifier-instantaneous-power,
        bacnet:PropertyIdentifier-integral-constant,
        bacnet:PropertyIdentifier-integral-constant-units,
        bacnet:PropertyIdentifier-interface-value,
        bacnet:PropertyIdentifier-interval-offset,
        bacnet:PropertyIdentifier-ip-address,
        bacnet:PropertyIdentifier-ip-default-gateway,
        bacnet:PropertyIdentifier-ip-dhcp-enable,
        bacnet:PropertyIdentifier-ip-dhcp-lease-time,
        bacnet:PropertyIdentifier-ip-dhcp-lease-time-remaining,
        bacnet:PropertyIdentifier-ip-dhcp-server,
        bacnet:PropertyIdentifier-ip-dns-server,
        bacnet:PropertyIdentifier-ip-subnet-mask,
        bacnet:PropertyIdentifier-ipv6-address,
        bacnet:PropertyIdentifier-ipv6-auto-addressing-enabled,
        bacnet:PropertyIdentifier-ipv6-default-gateway,
        bacnet:PropertyIdentifier-ipv6-dhcp-lease-time,
        bacnet:PropertyIdentifier-ipv6-dhcp-lease-time-remaining,
        bacnet:PropertyIdentifier-ipv6-dhcp-server,
        bacnet:PropertyIdentifier-ipv6-dns-server,
        bacnet:PropertyIdentifier-ipv6-prefix-length,
        bacnet:PropertyIdentifier-ipv6-zone-index,
        bacnet:PropertyIdentifier-is-utc,
        bacnet:PropertyIdentifier-issue-confirmed-notifications,
        bacnet:PropertyIdentifier-key-sets,
        bacnet:PropertyIdentifier-landing-call-control,
        bacnet:PropertyIdentifier-landing-calls,
        bacnet:PropertyIdentifier-landing-door-status,
        bacnet:PropertyIdentifier-last-access-event,
        bacnet:PropertyIdentifier-last-access-point,
        bacnet:PropertyIdentifier-last-command-time,
        bacnet:PropertyIdentifier-last-credential-added,
        bacnet:PropertyIdentifier-last-credential-added-time,
        bacnet:PropertyIdentifier-last-credential-removed,
        bacnet:PropertyIdentifier-last-credential-removed-time,
        bacnet:PropertyIdentifier-last-key-server,
        bacnet:PropertyIdentifier-last-notify-record,
        bacnet:PropertyIdentifier-last-priority,
        bacnet:PropertyIdentifier-last-restart-reason,
        bacnet:PropertyIdentifier-last-restore-time,
        bacnet:PropertyIdentifier-last-state-change,
        bacnet:PropertyIdentifier-last-use-time,
        bacnet:PropertyIdentifier-life-safety-alarm-values,
        bacnet:PropertyIdentifier-lighting-command,
        bacnet:PropertyIdentifier-lighting-command-default-priority,
        bacnet:PropertyIdentifier-limit-enable,
        bacnet:PropertyIdentifier-limit-monitoring-interval,
        bacnet:PropertyIdentifier-link-speed,
        bacnet:PropertyIdentifier-link-speed-autonegotiate,
        bacnet:PropertyIdentifier-link-speeds,
        bacnet:PropertyIdentifier-list-of-group-members,
        bacnet:PropertyIdentifier-list-of-object-property-references,
        bacnet:PropertyIdentifier-list-of-session-keys,
        bacnet:PropertyIdentifier-local-date,
        bacnet:PropertyIdentifier-local-forwarding-only,
        bacnet:PropertyIdentifier-local-time,
        bacnet:PropertyIdentifier-location,
        bacnet:PropertyIdentifier-lock-status,
        bacnet:PropertyIdentifier-lockout,
        bacnet:PropertyIdentifier-lockout-relinquish-time,
        bacnet:PropertyIdentifier-log-buffer,
        bacnet:PropertyIdentifier-log-device-object-property,
        bacnet:PropertyIdentifier-log-interval,
        bacnet:PropertyIdentifier-logging-object,
        bacnet:PropertyIdentifier-logging-record,
        bacnet:PropertyIdentifier-logging-type,
        bacnet:PropertyIdentifier-low-diff-limit,
        bacnet:PropertyIdentifier-low-limit,
        bacnet:PropertyIdentifier-lower-deck,
        bacnet:PropertyIdentifier-mac-address,
        bacnet:PropertyIdentifier-machine-room-iD,
        bacnet:PropertyIdentifier-maintenance-required,
        bacnet:PropertyIdentifier-making-car-call,
        bacnet:PropertyIdentifier-manipulated-variable-reference,
        bacnet:PropertyIdentifier-manual-slave-address-binding,
        bacnet:PropertyIdentifier-masked-alarm-values,
        bacnet:PropertyIdentifier-master-exemption,
        bacnet:PropertyIdentifier-max-actual-value,
        bacnet:PropertyIdentifier-max-apdu-length-accepted,
        bacnet:PropertyIdentifier-max-failed-attempts,
        bacnet:PropertyIdentifier-max-info-frames,
        bacnet:PropertyIdentifier-max-master,
        bacnet:PropertyIdentifier-max-pres-value,
        bacnet:PropertyIdentifier-max-segments-accepted,
        bacnet:PropertyIdentifier-maximum-output,
        bacnet:PropertyIdentifier-maximum-send-delay,
        bacnet:PropertyIdentifier-maximum-value,
        bacnet:PropertyIdentifier-maximum-value-timestamp,
        bacnet:PropertyIdentifier-member-of,
        bacnet:PropertyIdentifier-member-status-flags,
        bacnet:PropertyIdentifier-members,
        bacnet:PropertyIdentifier-min-actual-value,
        bacnet:PropertyIdentifier-min-pres-value,
        bacnet:PropertyIdentifier-minimum-off-time,
        bacnet:PropertyIdentifier-minimum-on-time,
        bacnet:PropertyIdentifier-minimum-output,
        bacnet:PropertyIdentifier-minimum-value,
        bacnet:PropertyIdentifier-minimum-value-timestamp,
        bacnet:PropertyIdentifier-mode,
        bacnet:PropertyIdentifier-model-name,
        bacnet:PropertyIdentifier-modification-date,
        bacnet:PropertyIdentifier-monitored-objects,
        bacnet:PropertyIdentifier-muster-point,
        bacnet:PropertyIdentifier-negative-access-rules,
        bacnet:PropertyIdentifier-network-access-security-policies,
        bacnet:PropertyIdentifier-network-interface-name,
        bacnet:PropertyIdentifier-network-number,
        bacnet:PropertyIdentifier-network-number-quality,
        bacnet:PropertyIdentifier-network-type,
        bacnet:PropertyIdentifier-next-stopping-floor,
        bacnet:PropertyIdentifier-node-subtype,
        bacnet:PropertyIdentifier-node-type,
        bacnet:PropertyIdentifier-notification-class,
        bacnet:PropertyIdentifier-notification-threshold,
        bacnet:PropertyIdentifier-notify-type,
        bacnet:PropertyIdentifier-number-of-apdu-retries,
        bacnet:PropertyIdentifier-number-of-authentication-policies,
        bacnet:PropertyIdentifier-number-of-states,
        bacnet:PropertyIdentifier-object-identifier,
        bacnet:PropertyIdentifier-object-list,
        bacnet:PropertyIdentifier-object-name,
        bacnet:PropertyIdentifier-object-property-reference,
        bacnet:PropertyIdentifier-object-type,
        bacnet:PropertyIdentifier-occupancy-count,
        bacnet:PropertyIdentifier-occupancy-count-adjust,
        bacnet:PropertyIdentifier-occupancy-count-enable,
        bacnet:PropertyIdentifier-occupancy-exemption,
        bacnet:PropertyIdentifier-occupancy-lower-limit,
        bacnet:PropertyIdentifier-occupancy-lower-limit-enforced,
        bacnet:PropertyIdentifier-occupancy-state,
        bacnet:PropertyIdentifier-occupancy-upper-limit,
        bacnet:PropertyIdentifier-occupancy-upper-limit-enforced,
        bacnet:PropertyIdentifier-operation-direction,
        bacnet:PropertyIdentifier-operation-expected,
        bacnet:PropertyIdentifier-optional,
        bacnet:PropertyIdentifier-out-of-service,
        bacnet:PropertyIdentifier-output-units,
        bacnet:PropertyIdentifier-packet-reorder-time,
        bacnet:PropertyIdentifier-passback-exemption,
        bacnet:PropertyIdentifier-passback-mode,
        bacnet:PropertyIdentifier-passback-timeout,
        bacnet:PropertyIdentifier-passenger-alarm,
        bacnet:PropertyIdentifier-polarity,
        bacnet:PropertyIdentifier-port-filter,
        bacnet:PropertyIdentifier-positive-access-rules,
        bacnet:PropertyIdentifier-power,
        bacnet:PropertyIdentifier-power-mode,
        bacnet:PropertyIdentifier-prescale,
        bacnet:PropertyIdentifier-present-stage,
        bacnet:PropertyIdentifier-present-value,
        bacnet:PropertyIdentifier-priority,
        bacnet:PropertyIdentifier-priority-array,
        bacnet:PropertyIdentifier-priority-for-writing,
        bacnet:PropertyIdentifier-process-identifier,
        bacnet:PropertyIdentifier-process-identifier-filter,
        bacnet:PropertyIdentifier-profile-location,
        bacnet:PropertyIdentifier-profile-name,
        bacnet:PropertyIdentifier-program-change,
        bacnet:PropertyIdentifier-program-location,
        bacnet:PropertyIdentifier-program-state,
        bacnet:PropertyIdentifier-property-list,
        bacnet:PropertyIdentifier-proportional-constant,
        bacnet:PropertyIdentifier-proportional-constant-units,
        bacnet:PropertyIdentifier-protocol-level,
        bacnet:PropertyIdentifier-protocol-object-types-supported,
        bacnet:PropertyIdentifier-protocol-revision,
        bacnet:PropertyIdentifier-protocol-services-supported,
        bacnet:PropertyIdentifier-protocol-version,
        bacnet:PropertyIdentifier-pulse-rate,
        bacnet:PropertyIdentifier-read-only,
        bacnet:PropertyIdentifier-reason-for-disable,
        bacnet:PropertyIdentifier-reason-for-halt,
        bacnet:PropertyIdentifier-recipient-list,
        bacnet:PropertyIdentifier-record-count,
        bacnet:PropertyIdentifier-records-since-notification,
        bacnet:PropertyIdentifier-reference-port,
        bacnet:PropertyIdentifier-registered-car-call,
        bacnet:PropertyIdentifier-reliability,
        bacnet:PropertyIdentifier-reliability-evaluation-inhibit,
        bacnet:PropertyIdentifier-relinquish-default,
        bacnet:PropertyIdentifier-represents,
        bacnet:PropertyIdentifier-requested-shed-level,
        bacnet:PropertyIdentifier-requested-update-interval,
        bacnet:PropertyIdentifier-required,
        bacnet:PropertyIdentifier-resolution,
        bacnet:PropertyIdentifier-restart-notification-recipients,
        bacnet:PropertyIdentifier-restore-completion-time,
        bacnet:PropertyIdentifier-restore-preparation-time,
        bacnet:PropertyIdentifier-routing-table,
        bacnet:PropertyIdentifier-scale,
        bacnet:PropertyIdentifier-scale-factor,
        bacnet:PropertyIdentifier-schedule-default,
        bacnet:PropertyIdentifier-secured-status,
        bacnet:PropertyIdentifier-security-pdu-timeout,
        bacnet:PropertyIdentifier-security-time-window,
        bacnet:PropertyIdentifier-segmentation-supported,
        bacnet:PropertyIdentifier-send-now,
        bacnet:PropertyIdentifier-serial-number,
        bacnet:PropertyIdentifier-setpoint,
        bacnet:PropertyIdentifier-setpoint-reference,
        bacnet:PropertyIdentifier-setting,
        bacnet:PropertyIdentifier-shed-duration,
        bacnet:PropertyIdentifier-shed-level-descriptions,
        bacnet:PropertyIdentifier-shed-levels,
        bacnet:PropertyIdentifier-silenced,
        bacnet:PropertyIdentifier-slave-address-binding,
        bacnet:PropertyIdentifier-slave-proxy-enable,
        bacnet:PropertyIdentifier-stage-names,
        bacnet:PropertyIdentifier-stages,
        bacnet:PropertyIdentifier-start-time,
        bacnet:PropertyIdentifier-state-change-values,
        bacnet:PropertyIdentifier-state-description,
        bacnet:PropertyIdentifier-state-text,
        bacnet:PropertyIdentifier-status-flags,
        bacnet:PropertyIdentifier-stop-time,
        bacnet:PropertyIdentifier-stop-when-full,
        bacnet:PropertyIdentifier-strike-count,
        bacnet:PropertyIdentifier-structured-object-list,
        bacnet:PropertyIdentifier-subordinate-annotations,
        bacnet:PropertyIdentifier-subordinate-list,
        bacnet:PropertyIdentifier-subordinate-node-types,
        bacnet:PropertyIdentifier-subordinate-relationships,
        bacnet:PropertyIdentifier-subordinate-tags,
        bacnet:PropertyIdentifier-subscribed-recipients,
        bacnet:PropertyIdentifier-supported-format-classes,
        bacnet:PropertyIdentifier-supported-formats,
        bacnet:PropertyIdentifier-supported-security-algorithms,
        bacnet:PropertyIdentifier-system-status,
        bacnet:PropertyIdentifier-tags,
        bacnet:PropertyIdentifier-target-references,
        bacnet:PropertyIdentifier-threat-authority,
        bacnet:PropertyIdentifier-threat-level,
        bacnet:PropertyIdentifier-time-delay,
        bacnet:PropertyIdentifier-time-delay-normal,
        bacnet:PropertyIdentifier-time-of-active-time-reset,
        bacnet:PropertyIdentifier-time-of-device-restart,
        bacnet:PropertyIdentifier-time-of-state-count-reset,
        bacnet:PropertyIdentifier-time-of-strike-count-reset,
        bacnet:PropertyIdentifier-time-synchronization-interval,
        bacnet:PropertyIdentifier-time-synchronization-recipients,
        bacnet:PropertyIdentifier-timer-running,
        bacnet:PropertyIdentifier-timer-state,
        bacnet:PropertyIdentifier-total-record-count,
        bacnet:PropertyIdentifier-trace-flag,
        bacnet:PropertyIdentifier-tracking-value,
        bacnet:PropertyIdentifier-transaction-notification-class,
        bacnet:PropertyIdentifier-transition,
        bacnet:PropertyIdentifier-trigger,
        bacnet:PropertyIdentifier-units,
        bacnet:PropertyIdentifier-update-interval,
        bacnet:PropertyIdentifier-update-key-set-timeout,
        bacnet:PropertyIdentifier-update-time,
        bacnet:PropertyIdentifier-user-external-identifier,
        bacnet:PropertyIdentifier-user-information-reference,
        bacnet:PropertyIdentifier-user-name,
        bacnet:PropertyIdentifier-user-type,
        bacnet:PropertyIdentifier-uses-remaining,
        bacnet:PropertyIdentifier-utc-offset,
        bacnet:PropertyIdentifier-utc-time-synchronization-recipients,
        bacnet:PropertyIdentifier-valid-samples,
        bacnet:PropertyIdentifier-value-before-change,
        bacnet:PropertyIdentifier-value-change-time,
        bacnet:PropertyIdentifier-value-set,
        bacnet:PropertyIdentifier-value-source,
        bacnet:PropertyIdentifier-value-source-array,
        bacnet:PropertyIdentifier-variance-value,
        bacnet:PropertyIdentifier-vendor-identifier,
        bacnet:PropertyIdentifier-vendor-name,
        bacnet:PropertyIdentifier-verification-time,
        bacnet:PropertyIdentifier-virtual-mac-address-table,
        bacnet:PropertyIdentifier-vt-classes-supported,
        bacnet:PropertyIdentifier-weekly-schedule,
        bacnet:PropertyIdentifier-window-interval,
        bacnet:PropertyIdentifier-window-samples,
        bacnet:PropertyIdentifier-write-status,
        bacnet:PropertyIdentifier-zone-from,
        bacnet:PropertyIdentifier-zone-members,
        bacnet:PropertyIdentifier-zone-to .

bacnet:Property_List a bacnet:Property .

bacnet:ProtocolLevel-bacnet-application a bacnet:StandardEnumeration ;
    bacnet:enumName "bacnet-application" ;
    bacnet:enumValue "2"^^xsd:nonNegativeInteger .

bacnet:ProtocolLevel-non-bacnet-application a bacnet:StandardEnumeration ;
    bacnet:enumName "non-bacnet-application" ;
    bacnet:enumValue "3"^^xsd:nonNegativeInteger .

bacnet:ProtocolLevel-physical a bacnet:StandardEnumeration ;
    bacnet:enumName "physical" ;
    bacnet:enumValue "0"^^xsd:nonNegativeInteger .

bacnet:ProtocolLevel-protocol a bacnet:StandardEnumeration ;
    bacnet:enumName "protocol" ;
    bacnet:enumValue "1"^^xsd:nonNegativeInteger .

bacnet:Relationship-adjusted-by a bacnet:StandardEnumeration ;
    bacnet:enumName "adjusted-by" ;
    bacnet:enumValue "9"^^xsd:nonNegativeInteger .

bacnet:Relationship-adjusts a bacnet:StandardEnumeration ;
    bacnet:enumName "adjusts" ;
    bacnet:enumValue "8"^^xsd:nonNegativeInteger .

bacnet:Relationship-commanded-by a bacnet:StandardEnumeration ;
    bacnet:enumName "commanded-by" ;
    bacnet:enumValue "7"^^xsd:nonNegativeInteger .

bacnet:Relationship-commands a bacnet:StandardEnumeration ;
    bacnet:enumName "commands" ;
    bacnet:enumValue "6"^^xsd:nonNegativeInteger .

bacnet:Relationship-contained-by a bacnet:StandardEnumeration ;
    bacnet:enumName "contained-by" ;
    bacnet:enumValue "3"^^xsd:nonNegativeInteger .

bacnet:Relationship-contains a bacnet:StandardEnumeration ;
    bacnet:enumName "contains" ;
    bacnet:enumValue "2"^^xsd:nonNegativeInteger .

bacnet:Relationship-default a bacnet:StandardEnumeration ;
    bacnet:enumName "default" ;
    bacnet:enumValue "1"^^xsd:nonNegativeInteger .

bacnet:Relationship-egress a bacnet:StandardEnumeration ;
    bacnet:enumName "egress" ;
    bacnet:enumValue "11"^^xsd:nonNegativeInteger .

bacnet:Relationship-ingress a bacnet:StandardEnumeration ;
    bacnet:enumName "ingress" ;
    bacnet:enumValue "10"^^xsd:nonNegativeInteger .

bacnet:Relationship-receives-air a bacnet:StandardEnumeration ;
    bacnet:enumName "receives-air" ;
    bacnet:enumValue "13"^^xsd:nonNegativeInteger .

bacnet:Relationship-receives-cool-air a bacnet:StandardEnumeration ;
    bacnet:enumName "receives-cool-air" ;
    bacnet:enumValue "17"^^xsd:nonNegativeInteger .

bacnet:Relationship-receives-cool-water a bacnet:StandardEnumeration ;
    bacnet:enumName "receives-cool-water" ;
    bacnet:enumValue "27"^^xsd:nonNegativeInteger .

bacnet:Relationship-receives-gas a bacnet:StandardEnumeration ;
    bacnet:enumName "receives-gas" ;
    bacnet:enumValue "21"^^xsd:nonNegativeInteger .

bacnet:Relationship-receives-hot-air a bacnet:StandardEnumeration ;
    bacnet:enumName "receives-hot-air" ;
    bacnet:enumValue "15"^^xsd:nonNegativeInteger .

bacnet:Relationship-receives-hot-water a bacnet:StandardEnumeration ;
    bacnet:enumName "receives-hot-water" ;
    bacnet:enumValue "25"^^xsd:nonNegativeInteger .

bacnet:Relationship-receives-power a bacnet:StandardEnumeration ;
    bacnet:enumName "receives-power" ;
    bacnet:enumValue "19"^^xsd:nonNegativeInteger .

bacnet:Relationship-receives-steam a bacnet:StandardEnumeration ;
    bacnet:enumName "receives-steam" ;
    bacnet:enumValue "29"^^xsd:nonNegativeInteger .

bacnet:Relationship-receives-water a bacnet:StandardEnumeration ;
    bacnet:enumName "receives-water" ;
    bacnet:enumValue "23"^^xsd:nonNegativeInteger .

bacnet:Relationship-supplies-air a bacnet:StandardEnumeration ;
    bacnet:enumName "supplies-air" ;
    bacnet:enumValue "12"^^xsd:nonNegativeInteger .

bacnet:Relationship-supplies-cool-air a bacnet:StandardEnumeration ;
    bacnet:enumName "supplies-cool-air" ;
    bacnet:enumValue "16"^^xsd:nonNegativeInteger .

bacnet:Relationship-supplies-cool-water a bacnet:StandardEnumeration ;
    bacnet:enumName "supplies-cool-water" ;
    bacnet:enumValue "26"^^xsd:nonNegativeInteger .

bacnet:Relationship-supplies-gas a bacnet:StandardEnumeration ;
    bacnet:enumName "supplies-gas" ;
    bacnet:enumValue "20"^^xsd:nonNegativeInteger .

bacnet:Relationship-supplies-hot-air a bacnet:StandardEnumeration ;
    bacnet:enumName "supplies-hot-air" ;
    bacnet:enumValue "14"^^xsd:nonNegativeInteger .

bacnet:Relationship-supplies-hot-water a bacnet:StandardEnumeration ;
    bacnet:enumName "supplies-hot-water" ;
    bacnet:enumValue "24"^^xsd:nonNegativeInteger .

bacnet:Relationship-supplies-power a bacnet:StandardEnumeration ;
    bacnet:enumName "supplies-power" ;
    bacnet:enumValue "18"^^xsd:nonNegativeInteger .

bacnet:Relationship-supplies-steam a bacnet:StandardEnumeration ;
    bacnet:enumName "supplies-steam" ;
    bacnet:enumValue "28"^^xsd:nonNegativeInteger .

bacnet:Relationship-supplies-water a bacnet:StandardEnumeration ;
    bacnet:enumName "supplies-water" ;
    bacnet:enumValue "22"^^xsd:nonNegativeInteger .

bacnet:Relationship-unknown a bacnet:StandardEnumeration ;
    bacnet:enumName "unknown" ;
    bacnet:enumValue "0"^^xsd:nonNegativeInteger .

bacnet:Relationship-used-by a bacnet:StandardEnumeration ;
    bacnet:enumName "used-by" ;
    bacnet:enumValue "5"^^xsd:nonNegativeInteger .

bacnet:Relationship-uses a bacnet:StandardEnumeration ;
    bacnet:enumName "uses" ;
    bacnet:enumValue "4"^^xsd:nonNegativeInteger .

bacnet:Reliability-activation-failure a bacnet:StandardEnumeration ;
    bacnet:enumName "activation-failure" ;
    bacnet:enumValue "17"^^xsd:nonNegativeInteger .

bacnet:Reliability-communication-failure a bacnet:StandardEnumeration ;
    bacnet:enumName "communication-failure" ;
    bacnet:enumValue "12"^^xsd:nonNegativeInteger .

bacnet:Reliability-configuration-error a bacnet:StandardEnumeration ;
    bacnet:enumName "configuration-error" ;
    bacnet:enumValue "10"^^xsd:nonNegativeInteger .

bacnet:Reliability-faults-listed a bacnet:StandardEnumeration ;
    bacnet:enumName "faults-listed" ;
    bacnet:enumValue "23"^^xsd:nonNegativeInteger .

bacnet:Reliability-lamp-failure a bacnet:StandardEnumeration ;
    bacnet:enumName "lamp-failure" ;
    bacnet:enumValue "16"^^xsd:nonNegativeInteger .

bacnet:Reliability-member-fault a bacnet:StandardEnumeration ;
    bacnet:enumName "member-fault" ;
    bacnet:enumValue "13"^^xsd:nonNegativeInteger .

bacnet:Reliability-monitored-object-fault a bacnet:StandardEnumeration ;
    bacnet:enumName "monitored-object-fault" ;
    bacnet:enumValue "14"^^xsd:nonNegativeInteger .

bacnet:Reliability-multi-state-fault a bacnet:StandardEnumeration ;
    bacnet:enumName "multi-state-fault" ;
    bacnet:enumValue "9"^^xsd:nonNegativeInteger .

bacnet:Reliability-no-fault-detected a bacnet:StandardEnumeration ;
    bacnet:enumName "no-fault-detected" ;
    bacnet:enumValue "0"^^xsd:nonNegativeInteger .

bacnet:Reliability-no-output a bacnet:StandardEnumeration ;
    bacnet:enumName "no-output" ;
    bacnet:enumValue "6"^^xsd:nonNegativeInteger .

bacnet:Reliability-no-sensor a bacnet:StandardEnumeration ;
    bacnet:enumName "no-sensor" ;
    bacnet:enumValue "1"^^xsd:nonNegativeInteger .

bacnet:Reliability-open-loop a bacnet:StandardEnumeration ;
    bacnet:enumName "open-loop" ;
    bacnet:enumValue "4"^^xsd:nonNegativeInteger .

bacnet:Reliability-over-range a bacnet:StandardEnumeration ;
    bacnet:enumName "over-range" ;
    bacnet:enumValue "2"^^xsd:nonNegativeInteger .

bacnet:Reliability-process-error a bacnet:StandardEnumeration ;
    bacnet:enumName "process-error" ;
    bacnet:enumValue "8"^^xsd:nonNegativeInteger .

bacnet:Reliability-proprietary-command-failure a bacnet:StandardEnumeration ;
    bacnet:enumName "proprietary-command-failure" ;
    bacnet:enumValue "22"^^xsd:nonNegativeInteger .

bacnet:Reliability-referenced-object-fault a bacnet:StandardEnumeration ;
    bacnet:enumName "referenced-object-fault" ;
    bacnet:enumValue "24"^^xsd:nonNegativeInteger .

bacnet:Reliability-renew-dhcp-failure a bacnet:StandardEnumeration ;
    bacnet:enumName "renew-dhcp-failure" ;
    bacnet:enumValue "18"^^xsd:nonNegativeInteger .

bacnet:Reliability-renew-fd-registration-failure a bacnet:StandardEnumeration ;
    bacnet:enumName "renew-fd-registration-failure" ;
    bacnet:enumValue "19"^^xsd:nonNegativeInteger .

bacnet:Reliability-restart-auto-negotiation-failure a bacnet:StandardEnumeration ;
    bacnet:enumName "restart-auto-negotiation-failure" ;
    bacnet:enumValue "20"^^xsd:nonNegativeInteger .

bacnet:Reliability-restart-failure a bacnet:StandardEnumeration ;
    bacnet:enumName "restart-failure" ;
    bacnet:enumValue "21"^^xsd:nonNegativeInteger .

bacnet:Reliability-shorted-loop a bacnet:StandardEnumeration ;
    bacnet:enumName "shorted-loop" ;
    bacnet:enumValue "5"^^xsd:nonNegativeInteger .

bacnet:Reliability-tripped a bacnet:StandardEnumeration ;
    bacnet:enumName "tripped" ;
    bacnet:enumValue "15"^^xsd:nonNegativeInteger .

bacnet:Reliability-under-range a bacnet:StandardEnumeration ;
    bacnet:enumName "under-range" ;
    bacnet:enumValue "3"^^xsd:nonNegativeInteger .

bacnet:Reliability-unreliable-other a bacnet:StandardEnumeration ;
    bacnet:enumName "unreliable-other" ;
    bacnet:enumValue "7"^^xsd:nonNegativeInteger .

bacnet:Required a bacnet:Property .

bacnet:RestartReason-coldstart a bacnet:StandardEnumeration ;
    bacnet:enumName "coldstart" ;
    bacnet:enumValue "1"^^xsd:nonNegativeInteger .

bacnet:RestartReason-detected-power-lost a bacnet:StandardEnumeration ;
    bacnet:enumName "detected-power-lost" ;
    bacnet:enumValue "3"^^xsd:nonNegativeInteger .

bacnet:RestartReason-detected-powered-off a bacnet:StandardEnumeration ;
    bacnet:enumName "detected-powered-off" ;
    bacnet:enumValue "4"^^xsd:nonNegativeInteger .

bacnet:RestartReason-hardware-watchdog a bacnet:StandardEnumeration ;
    bacnet:enumName "hardware-watchdog" ;
    bacnet:enumValue "5"^^xsd:nonNegativeInteger .

bacnet:RestartReason-software-watchdog a bacnet:StandardEnumeration ;
    bacnet:enumName "software-watchdog" ;
    bacnet:enumValue "6"^^xsd:nonNegativeInteger .

bacnet:RestartReason-suspended a bacnet:StandardEnumeration ;
    bacnet:enumName "suspended" ;
    bacnet:enumValue "7"^^xsd:nonNegativeInteger .

bacnet:RestartReason-unknown a bacnet:StandardEnumeration ;
    bacnet:enumName "unknown" ;
    bacnet:enumValue "0"^^xsd:nonNegativeInteger .

bacnet:RestartReason-warmstart a bacnet:StandardEnumeration ;
    bacnet:enumName "warmstart" ;
    bacnet:enumValue "2"^^xsd:nonNegativeInteger .

bacnet:RouterEntryStatus-available a bacnet:StandardEnumeration ;
    bacnet:enumName "available" ;
    bacnet:enumValue "0"^^xsd:nonNegativeInteger .

bacnet:RouterEntryStatus-busy a bacnet:StandardEnumeration ;
    bacnet:enumName "busy" ;
    bacnet:enumValue "1"^^xsd:nonNegativeInteger .

bacnet:RouterEntryStatus-disconnected a bacnet:StandardEnumeration ;
    bacnet:enumName "disconnected" ;
    bacnet:enumValue "2"^^xsd:nonNegativeInteger .

bacnet:SecurityLevel-encrypted a bacnet:StandardEnumeration ;
    bacnet:enumName "encrypted" ;
    bacnet:enumValue "3"^^xsd:nonNegativeInteger .

bacnet:SecurityLevel-encrypted-end-to-end a bacnet:StandardEnumeration ;
    bacnet:enumName "encrypted-end-to-end" ;
    bacnet:enumValue "4"^^xsd:nonNegativeInteger .

bacnet:SecurityLevel-incapable a bacnet:StandardEnumeration ;
    bacnet:enumName "incapable" ;
    bacnet:enumValue "0"^^xsd:nonNegativeInteger .

bacnet:SecurityLevel-plain a bacnet:StandardEnumeration ;
    bacnet:enumName "plain" ;
    bacnet:enumValue "1"^^xsd:nonNegativeInteger .

bacnet:SecurityLevel-signed a bacnet:StandardEnumeration ;
    bacnet:enumName "signed" ;
    bacnet:enumValue "2"^^xsd:nonNegativeInteger .

bacnet:SecurityLevel-signed-end-to-end a bacnet:StandardEnumeration ;
    bacnet:enumName "signed-end-to-end" ;
    bacnet:enumValue "4"^^xsd:nonNegativeInteger .

bacnet:SecurityPolicy-encrypted-trusted a bacnet:StandardEnumeration ;
    bacnet:enumName "encrypted-trusted" ;
    bacnet:enumValue "3"^^xsd:nonNegativeInteger .

bacnet:SecurityPolicy-plain-non-trusted a bacnet:StandardEnumeration ;
    bacnet:enumName "plain-non-trusted" ;
    bacnet:enumValue "0"^^xsd:nonNegativeInteger .

bacnet:SecurityPolicy-plain-trusted a bacnet:StandardEnumeration ;
    bacnet:enumName "plain-trusted" ;
    bacnet:enumValue "1"^^xsd:nonNegativeInteger .

bacnet:SecurityPolicy-signed-trusted a bacnet:StandardEnumeration ;
    bacnet:enumName "signed-trusted" ;
    bacnet:enumValue "2"^^xsd:nonNegativeInteger .

bacnet:Segmentation-no-segmentation a bacnet:StandardEnumeration ;
    bacnet:enumName "no-segmentation" ;
    bacnet:enumValue "3"^^xsd:nonNegativeInteger .

bacnet:Segmentation-segmented-both a bacnet:StandardEnumeration ;
    bacnet:enumName "segmented-both" ;
    bacnet:enumValue "0"^^xsd:nonNegativeInteger .

bacnet:Segmentation-segmented-receive a bacnet:StandardEnumeration ;
    bacnet:enumName "segmented-receive" ;
    bacnet:enumValue "2"^^xsd:nonNegativeInteger .

bacnet:Segmentation-segmented-transmit a bacnet:StandardEnumeration ;
    bacnet:enumName "segmented-transmit" ;
    bacnet:enumValue "1"^^xsd:nonNegativeInteger .

bacnet:SequenceOfAccessEvent a sh:NodeShape ;
    rdfs:comment "Sequence Of Access Event" ;
    sh:property [ sh:datatype xsd:string ;
            sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] .

bacnet:SequenceOfActionCommand a sh:NodeShape ;
    rdfs:comment "Sequence Of Action Command" ;
    sh:property [ sh:node bacnet:ActionCommand ;
            sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] .

bacnet:SequenceOfAssignedLandingCallsLandingCalls a sh:NodeShape ;
    rdfs:comment "Sequence Of Assigned Landing Calls Landing Calls" ;
    sh:property [ sh:node bacnet:AssignedLandingCallsLandingCalls ;
            sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] .

bacnet:SequenceOfAuthenticationPolicyPolicy a sh:NodeShape ;
    rdfs:comment "Sequence Of Authentication Policy Policy" ;
    sh:property [ sh:node bacnet:AuthenticationPolicyPolicy ;
            sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] .

bacnet:SequenceOfBitString a sh:NodeShape ;
    rdfs:comment "Sequence Of Bit String" ;
    sh:property [ sh:datatype xsd:string ;
            sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] .

bacnet:SequenceOfCOVMultipleSubscriptionList a sh:NodeShape ;
    rdfs:comment "Sequence Of COVMultiple Subscription List" ;
    sh:property [ sh:node bacnet:COVMultipleSubscriptionList ;
            sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] .

bacnet:SequenceOfCOVMultipleSubscriptionListOfCOVReference a sh:NodeShape ;
    rdfs:comment "Sequence Of COVMultiple Subscription List Of COVReference" ;
    sh:property [ sh:node bacnet:COVMultipleSubscriptionListOfCOVReference ;
            sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] .

bacnet:SequenceOfEventParameterAccessEventAccessEvent a sh:NodeShape ;
    rdfs:comment "Sequence Of Event Parameter Access Event Access Event" ;
    sh:property [ sh:node bacnet:EventParameterAccessEventAccessEvent ;
            sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] .

bacnet:SequenceOfEventParameterExtendedParameters a sh:NodeShape ;
    rdfs:comment "Sequence Of Event Parameter Extended Parameters" ;
    sh:property [ sh:node bacnet:EventParameterExtendedParameters ;
            sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] .

bacnet:SequenceOfFaultParameterExtendedParameters a sh:NodeShape ;
    rdfs:comment "Sequence Of Fault Parameter Extended Parameters" ;
    sh:property [ sh:node bacnet:FaultParameterExtendedParameters ;
            sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] .

bacnet:SequenceOfKeyIdentifier a sh:NodeShape ;
    rdfs:comment "Sequence Of Key Identifier" ;
    sh:property [ sh:node bacnet:KeyIdentifier ;
            sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] .

bacnet:SequenceOfLandingDoorStatusLandingDoor a sh:NodeShape ;
    rdfs:comment "Sequence Of Landing Door Status Landing Door" ;
    sh:property [ sh:node bacnet:LandingDoorStatusLandingDoor ;
            sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] .

bacnet:SequenceOfLogDataLogData a sh:NodeShape ;
    rdfs:comment "Sequence Of Log Data Log Data" ;
    sh:property [ sh:node bacnet:LogDataLogData ;
            sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] .

bacnet:SequenceOfNameValue a sh:NodeShape ;
    rdfs:comment "Sequence Of Name Value" ;
    sh:property [ sh:node bacnet:NameValue ;
            sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] .

bacnet:SequenceOfPropertyReference a sh:NodeShape ;
    rdfs:comment "Sequence Of Property Reference" ;
    sh:property [ sh:node bacnet:PropertyReference ;
            sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] .

bacnet:SequenceOfPropertyValue a sh:NodeShape ;
    rdfs:comment "Sequence Of Property Value" ;
    sh:property [ sh:node bacnet:PropertyValue ;
            sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] .

bacnet:SequenceOfReadAccessResultElement a sh:NodeShape ;
    rdfs:comment "Sequence Of Read Access Result Element" ;
    sh:property [ sh:node bacnet:ReadAccessResultElement ;
            sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] .

bacnet:SequenceOfUnsigned8 a sh:NodeShape ;
    rdfs:comment "Sequence Of Unsigned8" ;
    sh:property [ sh:node bacnet:Unsigned8 ;
            sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] .

bacnet:ServicesSupported-acknowledge-alarm a bacnet:Bit ;
    bacnet:bitName "acknowledge-alarm" ;
    bacnet:bitValue "0"^^xsd:nonNegativeInteger .

bacnet:ServicesSupported-add-list-element a bacnet:Bit ;
    bacnet:bitName "add-list-element" ;
    bacnet:bitValue "8"^^xsd:nonNegativeInteger .

bacnet:ServicesSupported-atomic-read-file a bacnet:Bit ;
    bacnet:bitName "atomic-read-file" ;
    bacnet:bitValue "6"^^xsd:nonNegativeInteger .

bacnet:ServicesSupported-atomic-write-file a bacnet:Bit ;
    bacnet:bitName "atomic-write-file" ;
    bacnet:bitValue "7"^^xsd:nonNegativeInteger .

bacnet:ServicesSupported-confirmed-cov-notification a bacnet:Bit ;
    bacnet:bitName "confirmed-cov-notification" ;
    bacnet:bitValue "1"^^xsd:nonNegativeInteger .

bacnet:ServicesSupported-confirmed-event-notification a bacnet:Bit ;
    bacnet:bitName "confirmed-event-notification" ;
    bacnet:bitValue "2"^^xsd:nonNegativeInteger .

bacnet:ServicesSupported-confirmed-private-transfer a bacnet:Bit ;
    bacnet:bitName "confirmed-private-transfer" ;
    bacnet:bitValue "18"^^xsd:nonNegativeInteger .

bacnet:ServicesSupported-confirmed-text-message a bacnet:Bit ;
    bacnet:bitName "confirmed-text-message" ;
    bacnet:bitValue "19"^^xsd:nonNegativeInteger .

bacnet:ServicesSupported-create-object a bacnet:Bit ;
    bacnet:bitName "create-object" ;
    bacnet:bitValue "10"^^xsd:nonNegativeInteger .

bacnet:ServicesSupported-delete-object a bacnet:Bit ;
    bacnet:bitName "delete-object" ;
    bacnet:bitValue "11"^^xsd:nonNegativeInteger .

bacnet:ServicesSupported-device-communication-control a bacnet:Bit ;
    bacnet:bitName "device-communication-control" ;
    bacnet:bitValue "17"^^xsd:nonNegativeInteger .

bacnet:ServicesSupported-get-alarm-summary a bacnet:Bit ;
    bacnet:bitName "get-alarm-summary" ;
    bacnet:bitValue "3"^^xsd:nonNegativeInteger .

bacnet:ServicesSupported-get-enrollment-summary a bacnet:Bit ;
    bacnet:bitName "get-enrollment-summary" ;
    bacnet:bitValue "4"^^xsd:nonNegativeInteger .

bacnet:ServicesSupported-get-event-information a bacnet:Bit ;
    bacnet:bitName "get-event-information" ;
    bacnet:bitValue "39"^^xsd:nonNegativeInteger .

bacnet:ServicesSupported-i-am a bacnet:Bit ;
    bacnet:bitName "i-am" ;
    bacnet:bitValue "26"^^xsd:nonNegativeInteger .

bacnet:ServicesSupported-i-have a bacnet:Bit ;
    bacnet:bitName "i-have" ;
    bacnet:bitValue "27"^^xsd:nonNegativeInteger .

bacnet:ServicesSupported-life-safety-operation a bacnet:Bit ;
    bacnet:bitName "life-safety-operation" ;
    bacnet:bitValue "37"^^xsd:nonNegativeInteger .

bacnet:ServicesSupported-read-property a bacnet:Bit ;
    bacnet:bitName "read-property" ;
    bacnet:bitValue "12"^^xsd:nonNegativeInteger .

bacnet:ServicesSupported-read-property-multiple a bacnet:Bit ;
    bacnet:bitName "read-property-multiple" ;
    bacnet:bitValue "14"^^xsd:nonNegativeInteger .

bacnet:ServicesSupported-read-range a bacnet:Bit ;
    bacnet:bitName "read-range" ;
    bacnet:bitValue "35"^^xsd:nonNegativeInteger .

bacnet:ServicesSupported-reinitialize-device a bacnet:Bit ;
    bacnet:bitName "reinitialize-device" ;
    bacnet:bitValue "20"^^xsd:nonNegativeInteger .

bacnet:ServicesSupported-remove-list-element a bacnet:Bit ;
    bacnet:bitName "remove-list-element" ;
    bacnet:bitValue "9"^^xsd:nonNegativeInteger .

bacnet:ServicesSupported-subscribe-coV a bacnet:Bit ;
    bacnet:bitName "subscribe-coV" ;
    bacnet:bitValue "5"^^xsd:nonNegativeInteger .

bacnet:ServicesSupported-subscribe-cov-property a bacnet:Bit ;
    bacnet:bitName "subscribe-cov-property" ;
    bacnet:bitValue "38"^^xsd:nonNegativeInteger .

bacnet:ServicesSupported-time-synchronization a bacnet:Bit ;
    bacnet:bitName "time-synchronization" ;
    bacnet:bitValue "32"^^xsd:nonNegativeInteger .

bacnet:ServicesSupported-unconfirmed-cov-notification a bacnet:Bit ;
    bacnet:bitName "unconfirmed-cov-notification" ;
    bacnet:bitValue "28"^^xsd:nonNegativeInteger .

bacnet:ServicesSupported-unconfirmed-event-notification a bacnet:Bit ;
    bacnet:bitName "unconfirmed-event-notification" ;
    bacnet:bitValue "29"^^xsd:nonNegativeInteger .

bacnet:ServicesSupported-unconfirmed-private-transfer a bacnet:Bit ;
    bacnet:bitName "unconfirmed-private-transfer" ;
    bacnet:bitValue "30"^^xsd:nonNegativeInteger .

bacnet:ServicesSupported-unconfirmed-text-message a bacnet:Bit ;
    bacnet:bitName "unconfirmed-text-message" ;
    bacnet:bitValue "31"^^xsd:nonNegativeInteger .

bacnet:ServicesSupported-utc-time-synchronization a bacnet:Bit ;
    bacnet:bitName "utc-time-synchronization" ;
    bacnet:bitValue "36"^^xsd:nonNegativeInteger .

bacnet:ServicesSupported-vt-close a bacnet:Bit ;
    bacnet:bitName "vt-close" ;
    bacnet:bitValue "22"^^xsd:nonNegativeInteger .

bacnet:ServicesSupported-vt-data a bacnet:Bit ;
    bacnet:bitName "vt-data" ;
    bacnet:bitValue "23"^^xsd:nonNegativeInteger .

bacnet:ServicesSupported-vt-open a bacnet:Bit ;
    bacnet:bitName "vt-open" ;
    bacnet:bitValue "21"^^xsd:nonNegativeInteger .

bacnet:ServicesSupported-who-has a bacnet:Bit ;
    bacnet:bitName "who-has" ;
    bacnet:bitValue "33"^^xsd:nonNegativeInteger .

bacnet:ServicesSupported-who-is a bacnet:Bit ;
    bacnet:bitName "who-is" ;
    bacnet:bitValue "34"^^xsd:nonNegativeInteger .

bacnet:ServicesSupported-write-group a bacnet:Bit ;
    bacnet:bitName "write-group" ;
    bacnet:bitValue "40"^^xsd:nonNegativeInteger .

bacnet:ServicesSupported-write-property a bacnet:Bit ;
    bacnet:bitName "write-property" ;
    bacnet:bitValue "15"^^xsd:nonNegativeInteger .

bacnet:ServicesSupported-write-property-multiple a bacnet:Bit ;
    bacnet:bitName "write-property-multiple" ;
    bacnet:bitValue "16"^^xsd:nonNegativeInteger .

bacnet:ShedState-shed-compliant a bacnet:StandardEnumeration ;
    bacnet:enumName "shed-compliant" ;
    bacnet:enumValue "2"^^xsd:nonNegativeInteger .

bacnet:ShedState-shed-inactive a bacnet:StandardEnumeration ;
    bacnet:enumName "shed-inactive" ;
    bacnet:enumValue "0"^^xsd:nonNegativeInteger .

bacnet:ShedState-shed-non-compliant a bacnet:StandardEnumeration ;
    bacnet:enumName "shed-non-compliant" ;
    bacnet:enumValue "3"^^xsd:nonNegativeInteger .

bacnet:ShedState-shed-request-pending a bacnet:StandardEnumeration ;
    bacnet:enumName "shed-request-pending" ;
    bacnet:enumValue "1"^^xsd:nonNegativeInteger .

bacnet:SilencedState-all-silenced a bacnet:StandardEnumeration ;
    bacnet:enumName "all-silenced" ;
    bacnet:enumValue "3"^^xsd:nonNegativeInteger .

bacnet:SilencedState-audible-silenced a bacnet:StandardEnumeration ;
    bacnet:enumName "audible-silenced" ;
    bacnet:enumValue "1"^^xsd:nonNegativeInteger .

bacnet:SilencedState-unsilenced a bacnet:StandardEnumeration ;
    bacnet:enumName "unsilenced" ;
    bacnet:enumValue "0"^^xsd:nonNegativeInteger .

bacnet:SilencedState-visible-silenced a bacnet:StandardEnumeration ;
    bacnet:enumName "visible-silenced" ;
    bacnet:enumValue "2"^^xsd:nonNegativeInteger .

bacnet:StatusFlags-fault a bacnet:Bit ;
    bacnet:bitName "fault" ;
    bacnet:bitValue "1"^^xsd:nonNegativeInteger .

bacnet:StatusFlags-in-alarm a bacnet:Bit ;
    bacnet:bitName "in-alarm" ;
    bacnet:bitValue "0"^^xsd:nonNegativeInteger .

bacnet:StatusFlags-out-of-service a bacnet:Bit ;
    bacnet:bitName "out-of-service" ;
    bacnet:bitValue "3"^^xsd:nonNegativeInteger .

bacnet:StatusFlags-overridden a bacnet:Bit ;
    bacnet:bitName "overridden" ;
    bacnet:bitValue "2"^^xsd:nonNegativeInteger .

bacnet:Tags a bacnet:Property .

bacnet:TimerState-expired a bacnet:StandardEnumeration ;
    bacnet:enumName "expired" ;
    bacnet:enumValue "2"^^xsd:nonNegativeInteger .

bacnet:TimerState-idle a bacnet:StandardEnumeration ;
    bacnet:enumName "idle" ;
    bacnet:enumValue "0"^^xsd:nonNegativeInteger .

bacnet:TimerState-running a bacnet:StandardEnumeration ;
    bacnet:enumName "running" ;
    bacnet:enumValue "1"^^xsd:nonNegativeInteger .

bacnet:TimerTransition-expired-to-idle a bacnet:StandardEnumeration ;
    bacnet:enumName "expired-to-idle" ;
    bacnet:enumValue "6"^^xsd:nonNegativeInteger .

bacnet:TimerTransition-expired-to-running a bacnet:StandardEnumeration ;
    bacnet:enumName "expired-to-running" ;
    bacnet:enumValue "7"^^xsd:nonNegativeInteger .

bacnet:TimerTransition-forced-to-expired a bacnet:StandardEnumeration ;
    bacnet:enumName "forced-to-expired" ;
    bacnet:enumValue "5"^^xsd:nonNegativeInteger .

bacnet:TimerTransition-idle-to-running a bacnet:StandardEnumeration ;
    bacnet:enumName "idle-to-running" ;
    bacnet:enumValue "1"^^xsd:nonNegativeInteger .

bacnet:TimerTransition-none a bacnet:StandardEnumeration ;
    bacnet:enumName "none" ;
    bacnet:enumValue "0"^^xsd:nonNegativeInteger .

bacnet:TimerTransition-running-to-expired a bacnet:StandardEnumeration ;
    bacnet:enumName "running-to-expired" ;
    bacnet:enumValue "4"^^xsd:nonNegativeInteger .

bacnet:TimerTransition-running-to-idle a bacnet:StandardEnumeration ;
    bacnet:enumName "running-to-idle" ;
    bacnet:enumValue "2"^^xsd:nonNegativeInteger .

bacnet:TimerTransition-running-to-running a bacnet:StandardEnumeration ;
    bacnet:enumName "running-to-running" ;
    bacnet:enumValue "3"^^xsd:nonNegativeInteger .

bacnet:VTClass-ansi-x3-64 a bacnet:StandardEnumeration ;
    bacnet:enumName "ansi-x3-64" ;
    bacnet:enumValue "1"^^xsd:nonNegativeInteger .

bacnet:VTClass-dec-vt100 a bacnet:StandardEnumeration ;
    bacnet:enumName "dec-vt100" ;
    bacnet:enumValue "3"^^xsd:nonNegativeInteger .

bacnet:VTClass-dec-vt220 a bacnet:StandardEnumeration ;
    bacnet:enumName "dec-vt220" ;
    bacnet:enumValue "4"^^xsd:nonNegativeInteger .

bacnet:VTClass-dec-vt52 a bacnet:StandardEnumeration ;
    bacnet:enumName "dec-vt52" ;
    bacnet:enumValue "2"^^xsd:nonNegativeInteger .

bacnet:VTClass-default-terminal a bacnet:StandardEnumeration ;
    bacnet:enumName "default-terminal" ;
    bacnet:enumValue "0"^^xsd:nonNegativeInteger .

bacnet:VTClass-hp-700-94 a bacnet:StandardEnumeration ;
    bacnet:enumName "hp-700-94" ;
    bacnet:enumValue "5"^^xsd:nonNegativeInteger .

bacnet:VTClass-ibm-3130 a bacnet:StandardEnumeration ;
    bacnet:enumName "ibm-3130" ;
    bacnet:enumValue "6"^^xsd:nonNegativeInteger .

bacnet:WriteStatus-failed a bacnet:StandardEnumeration ;
    bacnet:enumName "failed" ;
    bacnet:enumValue "3"^^xsd:nonNegativeInteger .

bacnet:WriteStatus-idle a bacnet:StandardEnumeration ;
    bacnet:enumName "idle" ;
    bacnet:enumValue "0"^^xsd:nonNegativeInteger .

bacnet:WriteStatus-in-progress a bacnet:StandardEnumeration ;
    bacnet:enumName "in-progress" ;
    bacnet:enumValue "1"^^xsd:nonNegativeInteger .

bacnet:WriteStatus-successful a bacnet:StandardEnumeration ;
    bacnet:enumName "successful" ;
    bacnet:enumValue "2"^^xsd:nonNegativeInteger .

bacnet:absentee-limit a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-absentee-limit ;
    bacnet:propertyName "absentee-limit" ;
    bacnet:propertyRef bacnet:Absentee_Limit .

bacnet:access-alarm-events a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-access-alarm-events ;
    bacnet:propertyName "access-alarm-events" ;
    bacnet:propertyRef bacnet:Access_Alarm_Events .

bacnet:access-credential a rdf:Property ;
    rdfs:label "access-credential" .

bacnet:access-credential-disable a rdf:Property ;
    rdfs:label "access-credential-disable" .

bacnet:access-credential-disable-reason a rdf:Property ;
    rdfs:label "access-credential-disable-reason" .

bacnet:access-doors a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-access-doors ;
    bacnet:propertyName "access-doors" ;
    bacnet:propertyRef bacnet:Access_Doors .

bacnet:access-event-authentication-factor a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-access-event-authentication-factor ;
    bacnet:propertyName "access-event-authentication-factor" ;
    bacnet:propertyRef bacnet:Access_Event_Authentication_Factor .

bacnet:access-event-credential a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-access-event-credential ;
    bacnet:propertyName "access-event-credential" ;
    bacnet:propertyRef bacnet:Access_Event_Credential .

bacnet:access-event-time-reference a rdf:Property ;
    rdfs:label "access-event-time-reference" .

bacnet:access-result a rdf:Property ;
    rdfs:label "access-result" .

bacnet:access-transaction-events a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-access-transaction-events ;
    bacnet:propertyName "access-transaction-events" ;
    bacnet:propertyRef bacnet:Access_Transaction_Events .

bacnet:accompaniment a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-accompaniment ;
    bacnet:propertyName "accompaniment" ;
    bacnet:propertyRef bacnet:Accompaniment .

bacnet:accompaniment-time a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-accompaniment-time ;
    bacnet:propertyName "accompaniment-time" ;
    bacnet:propertyRef bacnet:Accompaniment_Time .

bacnet:accumulated-value a rdf:Property ;
    rdfs:label "accumulated-value" .

bacnet:accumulator-status a rdf:Property ;
    rdfs:label "accumulator-status" .

bacnet:action-text a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-action-text ;
    bacnet:propertyName "action-text" ;
    bacnet:propertyRef bacnet:Action_Text .

bacnet:active-authentication-policy a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-active-authentication-policy ;
    bacnet:propertyName "active-authentication-policy" ;
    bacnet:propertyRef bacnet:Active_Authentication_Policy .

bacnet:active-cov-multiple-subscriptions a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-active-cov-multiple-subscriptions ;
    bacnet:propertyName "active-cov-multiple-subscriptions" ;
    bacnet:propertyRef bacnet:Active_COV_Multiple_Subscriptions .

bacnet:active-cov-subscriptions a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-active-cov-subscriptions ;
    bacnet:propertyName "active-cov-subscriptions" ;
    bacnet:propertyRef bacnet:Active_COV_Subscriptions .

bacnet:active-vt-sessions a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-active-vt-sessions ;
    bacnet:propertyName "active-vt-sessions" ;
    bacnet:propertyRef bacnet:Active_VT_Sessions .

bacnet:actual-shed-level a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-actual-shed-level ;
    bacnet:propertyName "actual-shed-level" ;
    bacnet:propertyRef bacnet:Actual_Shed_Level .

bacnet:address a rdf:Property ;
    rdfs:label "address" .

bacnet:algorithm a rdf:Property ;
    rdfs:label "algorithm" .

bacnet:all-writes-successful a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-all-writes-successful ;
    bacnet:propertyName "all-writes-successful" ;
    bacnet:propertyRef bacnet:All_Writes_Successful .

bacnet:allow-group-delay-inhibit a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-allow-group-delay-inhibit ;
    bacnet:propertyName "allow-group-delay-inhibit" ;
    bacnet:propertyRef bacnet:Allow_Group_Delay_Inhibit .

bacnet:amount a rdf:Property ;
    rdfs:label "amount" .

bacnet:apdu-length a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-apdu-length ;
    bacnet:propertyName "apdu-length" ;
    bacnet:propertyRef bacnet:APDU_Length .

bacnet:apdu-segment-timeout a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-apdu-segment-timeout ;
    bacnet:propertyName "apdu-segment-timeout" ;
    bacnet:propertyRef bacnet:APDU_Segment_Timeout .

bacnet:apdu-timeout a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-apdu-timeout ;
    bacnet:propertyName "apdu-timeout" ;
    bacnet:propertyRef bacnet:APDU_Timeout .

bacnet:application-software-version a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-application-software-version ;
    bacnet:propertyName "application-software-version" ;
    bacnet:propertyRef bacnet:Application_Software_Version .

bacnet:archive a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-archive ;
    bacnet:propertyName "archive" ;
    bacnet:propertyRef bacnet:Archive .

bacnet:array-index a rdf:Property ;
    rdfs:label "array-index" .

bacnet:assigned-landing-calls a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-assigned-landing-calls ;
    bacnet:propertyName "assigned-landing-calls" ;
    bacnet:propertyRef bacnet:Assigned_Landing_Calls .

bacnet:attempted-samples a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-attempted-samples ;
    bacnet:propertyName "attempted-samples" ;
    bacnet:propertyRef bacnet:Attempted_Samples .

bacnet:audit-level a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-audit-level ;
    bacnet:propertyName "audit-level" ;
    bacnet:propertyRef bacnet:Audit_Level .

bacnet:audit-notification a rdf:Property ;
    rdfs:label "audit-notification" .

bacnet:audit-notification-recipient a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-audit-notification-recipient ;
    bacnet:propertyName "audit-notification-recipient" ;
    bacnet:propertyRef bacnet:Audit_Notification_Recipient .

bacnet:audit-source-reporter a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-audit-source-reporter ;
    bacnet:propertyName "audit-source-reporter" ;
    bacnet:propertyRef bacnet:Audit_Source_Reporter .

bacnet:auditable-operations a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-auditable-operations ;
    bacnet:propertyName "auditable-operations" ;
    bacnet:propertyRef bacnet:Auditable_Operations .

bacnet:authenication-factor a rdf:Property ;
    rdfs:label "authenication-factor" .

bacnet:authentication-factor a rdf:Property ;
    rdfs:label "authentication-factor" .

bacnet:authentication-factors a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-authentication-factors ;
    bacnet:propertyName "authentication-factors" ;
    bacnet:propertyRef bacnet:Authentication_Factors .

bacnet:authentication-policy-list a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-authentication-policy-list ;
    bacnet:propertyName "authentication-policy-list" ;
    bacnet:propertyRef bacnet:Authentication_Policy_List .

bacnet:authentication-policy-names a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-authentication-policy-names ;
    bacnet:propertyName "authentication-policy-names" ;
    bacnet:propertyRef bacnet:Authentication_Policy_Names .

bacnet:authorization-exemptions a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-authorization-exemptions ;
    bacnet:propertyName "authorization-exemptions" ;
    bacnet:propertyRef bacnet:Authorization_Exemptions .

bacnet:authorization-mode a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-authorization-mode ;
    bacnet:propertyName "authorization-mode" ;
    bacnet:propertyRef bacnet:Authorization_Mode .

bacnet:average-value a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-average-value ;
    bacnet:propertyName "average-value" ;
    bacnet:propertyRef bacnet:Average_Value .

bacnet:backup-and-restore-state a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-backup-and-restore-state ;
    bacnet:propertyName "backup-and-restore-state" ;
    bacnet:propertyRef bacnet:Backup_And_Restore_State .

bacnet:backup-failure-timeout a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-backup-failure-timeout ;
    bacnet:propertyName "backup-failure-timeout" ;
    bacnet:propertyRef bacnet:Backup_Failure_Timeout .

bacnet:backup-preparation-time a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-backup-preparation-time ;
    bacnet:propertyName "backup-preparation-time" ;
    bacnet:propertyRef bacnet:Backup_Preparation_Time .

bacnet:backup-state a rdf:Property ;
    rdfs:label "backup-state" .

bacnet:bacnet-ip-address a rdf:Property ;
    rdfs:label "bacnet-ip-address" .

bacnet:bacnet-ip-global-address a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-bacnet-ip-global-address ;
    bacnet:propertyName "bacnet-ip-global-address" ;
    bacnet:propertyRef bacnet:BACnet_IP_Global_Address .

bacnet:bacnet-ip-mode a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-bacnet-ip-mode ;
    bacnet:propertyName "bacnet-ip-mode" ;
    bacnet:propertyRef bacnet:BACnet_IP_Mode .

bacnet:bacnet-ip-multicast-address a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-bacnet-ip-multicast-address ;
    bacnet:propertyName "bacnet-ip-multicast-address" ;
    bacnet:propertyRef bacnet:BACnet_IP_Multicast_Address .

bacnet:bacnet-ip-nat-traversal a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-bacnet-ip-nat-traversal ;
    bacnet:propertyName "bacnet-ip-nat-traversal" ;
    bacnet:propertyRef bacnet:BACnet_IP_Nat_Traversal .

bacnet:bacnet-ip-udp-port a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-bacnet-ip-udp-port ;
    bacnet:propertyName "bacnet-ip-udp-port" ;
    bacnet:propertyRef bacnet:BACnet_IP_UDP_Port .

bacnet:bacnet-ipv6-mode a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-bacnet-ipv6-mode ;
    bacnet:propertyName "bacnet-ipv6-mode" ;
    bacnet:propertyRef bacnet:BACnet_IPv6_Mode .

bacnet:bacnet-ipv6-multicast-address a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-bacnet-ipv6-multicast-address ;
    bacnet:propertyName "bacnet-ipv6-multicast-address" ;
    bacnet:propertyRef bacnet:BACnet_IPv6_Multicast_Address .

bacnet:bacnet-ipv6-udp-port a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-bacnet-ipv6-udp-port ;
    bacnet:propertyName "bacnet-ipv6-udp-port" ;
    bacnet:propertyRef bacnet:BACnet_IPv6_UDP_Port .

bacnet:base-device-security-policy a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-base-device-security-policy ;
    bacnet:propertyName "base-device-security-policy" ;
    bacnet:propertyRef bacnet:Base_Device_Security_Policy .

bacnet:bbmd-accept-fd-registrations a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-bbmd-accept-fd-registrations ;
    bacnet:propertyName "bbmd-accept-fd-registrations" ;
    bacnet:propertyRef bacnet:BBMD_Accept_FD_Registrations .

bacnet:bbmd-address a rdf:Property ;
    rdfs:label "bbmd-address" .

bacnet:bbmd-broadcast-distribution-table a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-bbmd-broadcast-distribution-table ;
    bacnet:propertyName "bbmd-broadcast-distribution-table" ;
    bacnet:propertyRef bacnet:BBMD_Broadcast_Distribution_Table .

bacnet:bbmd-foreign-device-table a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-bbmd-foreign-device-table ;
    bacnet:propertyName "bbmd-foreign-device-table" ;
    bacnet:propertyRef bacnet:BBMD_Foreign_Device_Table .

bacnet:belongs-to a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-belongs-to ;
    bacnet:propertyName "belongs-to" ;
    bacnet:propertyRef bacnet:Belongs_To .

bacnet:bias a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-bias ;
    bacnet:propertyName "bias" ;
    bacnet:propertyRef bacnet:Bias .

bacnet:binary-pV a rdf:Property ;
    rdfs:label "binary-pv" .

bacnet:binary-value a rdf:Property ;
    rdfs:label "binary-value" .

bacnet:bit-mask a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-bit-mask ;
    bacnet:propertyName "bit-mask" ;
    bacnet:propertyRef bacnet:Bit_Mask .

bacnet:bit-text a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-bit-text ;
    bacnet:propertyName "bit-text" ;
    bacnet:propertyRef bacnet:Bit_Text .

bacnet:bitName a rdf:Property ;
    rdfs:comment "The name of the bit from the ASN.1 encoding, see Clause 21." ;
    rdfs:domain bacnet:Bit ;
    rdfs:range xsd:string .

bacnet:bitValue a rdf:Property ;
    rdfs:comment "The value of a bit used in encoding, see Clause 20.2.11." ;
    rdfs:domain bacnet:Bit ;
    rdfs:range xsd:nonNegativeInteger .

bacnet:bitVendor a rdf:Property ;
    rdfs:comment "A reference to the vendor that defines a proprietary bit string." ;
    rdfs:domain bacnet:Enumerated ;
    rdfs:range bacnet:Vendor .

bacnet:broadcast-mask a rdf:Property ;
    rdfs:label "broadcast-mask" .

bacnet:buffer-property a rdf:Property ;
    rdfs:label "buffer-property" .

bacnet:calendar-entry a rdf:Property ;
    rdfs:label "calendar-entry" .

bacnet:calendar-reference a rdf:Property ;
    rdfs:label "calendar-reference" .

bacnet:car-assigned-direction a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-car-assigned-direction ;
    bacnet:propertyName "car-assigned-direction" ;
    bacnet:propertyRef bacnet:Car_Assigned_Direction .

bacnet:car-door-command a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-car-door-command ;
    bacnet:propertyName "car-door-command" ;
    bacnet:propertyRef bacnet:Car_Door_Command .

bacnet:car-door-status a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-car-door-status ;
    bacnet:propertyName "car-door-status" ;
    bacnet:propertyRef bacnet:Car_Door_Status .

bacnet:car-door-text a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-car-door-text ;
    bacnet:propertyName "car-door-text" ;
    bacnet:propertyRef bacnet:Car_Door_Text .

bacnet:car-door-zone a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-car-door-zone ;
    bacnet:propertyName "car-door-zone" ;
    bacnet:propertyRef bacnet:Car_Door_Zone .

bacnet:car-drive-status a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-car-drive-status ;
    bacnet:propertyName "car-drive-status" ;
    bacnet:propertyRef bacnet:Car_Drive_Status .

bacnet:car-load a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-car-load ;
    bacnet:propertyName "car-load" ;
    bacnet:propertyRef bacnet:Car_Load .

bacnet:car-load-units a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-car-load-units ;
    bacnet:propertyName "car-load-units" ;
    bacnet:propertyRef bacnet:Car_Load_Units .

bacnet:car-mode a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-car-mode ;
    bacnet:propertyName "car-mode" ;
    bacnet:propertyRef bacnet:Car_Mode .

bacnet:car-moving-direction a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-car-moving-direction ;
    bacnet:propertyName "car-moving-direction" ;
    bacnet:propertyRef bacnet:Car_Moving_Direction .

bacnet:car-position a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-car-position ;
    bacnet:propertyName "car-position" ;
    bacnet:propertyRef bacnet:Car_Position .

bacnet:change-of-character-string a rdf:Property ;
    rdfs:label "change-of-character-string" .

bacnet:change-of-characterstring a rdf:Property ;
    rdfs:label "change-of-characterstring" .

bacnet:change-of-life-safety a rdf:Property ;
    rdfs:label "change-of-life-safety" .

bacnet:change-of-lifesafety a rdf:Property ;
    rdfs:label "change-of-lifesafety" .

bacnet:change-of-reliability a rdf:Property ;
    rdfs:label "change-of-reliability" .

bacnet:change-of-status-flags a rdf:Property ;
    rdfs:label "change-of-status-flags" .

bacnet:change-of-statusflags a rdf:Property ;
    rdfs:label "change-of-statusflags" .

bacnet:changed-bits a rdf:Property ;
    rdfs:label "changed-bits" .

bacnet:changes-pending a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-changes-pending ;
    bacnet:propertyName "changes-pending" ;
    bacnet:propertyRef bacnet:Changes_Pending .

bacnet:channel-number a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-channel-number ;
    bacnet:propertyName "channel-number" ;
    bacnet:propertyRef bacnet:Channel_Number .

bacnet:characterstring a rdf:Property ;
    rdfs:label "characterstring" .

bacnet:command-value a rdf:Property ;
    rdfs:label "command-value" .

bacnet:configuration-files a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-configuration-files ;
    bacnet:propertyName "configuration-files" ;
    bacnet:propertyRef bacnet:Configuration_Files .

bacnet:control-groups a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-control-groups ;
    bacnet:propertyName "control-groups" ;
    bacnet:propertyRef bacnet:Control_Groups .

bacnet:controlled-variable-reference a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-controlled-variable-reference ;
    bacnet:propertyName "controlled-variable-reference" ;
    bacnet:propertyRef bacnet:Controlled_Variable_Reference .

bacnet:controlled-variable-units a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-controlled-variable-units ;
    bacnet:propertyName "controlled-variable-units" ;
    bacnet:propertyRef bacnet:Controlled_Variable_Units .

bacnet:controlled-variable-value a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-controlled-variable-value ;
    bacnet:propertyName "controlled-variable-value" ;
    bacnet:propertyRef bacnet:Controlled_Variable_Value .

bacnet:count a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-count ;
    bacnet:propertyName "count" ;
    bacnet:propertyRef bacnet:Count .

bacnet:count-before-change a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-count-before-change ;
    bacnet:propertyName "count-before-change" ;
    bacnet:propertyRef bacnet:Count_Before_Change .

bacnet:count-change-time a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-count-change-time ;
    bacnet:propertyName "count-change-time" ;
    bacnet:propertyRef bacnet:Count_Change_Time .

bacnet:cov-criteria a rdf:Property ;
    rdfs:label "cov-criteria" .

bacnet:cov-period a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-cov-period ;
    bacnet:propertyName "cov-period" ;
    bacnet:propertyRef bacnet:COV_Period .

bacnet:covu-period a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-covu-period ;
    bacnet:propertyName "covu-period" ;
    bacnet:propertyRef bacnet:COVU_Period .

bacnet:covu-recipients a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-covu-recipients ;
    bacnet:propertyName "covu-recipients" ;
    bacnet:propertyRef bacnet:COVU_Recipients .

bacnet:credential-data-input a rdf:Property ;
    rdfs:label "credential-data-input" .

bacnet:credential-disable a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-credential-disable ;
    bacnet:propertyName "credential-disable" ;
    bacnet:propertyRef bacnet:Credential_Disable .

bacnet:credential-status a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-credential-status ;
    bacnet:propertyName "credential-status" ;
    bacnet:propertyRef bacnet:Credential_Status .

bacnet:credentials a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-credentials ;
    bacnet:propertyName "credentials" ;
    bacnet:propertyRef bacnet:Credentials .

bacnet:credentials-in-zone a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-credentials-in-zone ;
    bacnet:propertyName "credentials-in-zone" ;
    bacnet:propertyRef bacnet:Credentials_In_Zone .

bacnet:current-notification a rdf:Property ;
    rdfs:label "current-notification" .

bacnet:current-value a rdf:Property ;
    rdfs:label "current-value" .

bacnet:database-revision a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-database-revision ;
    bacnet:propertyName "database-revision" ;
    bacnet:propertyRef bacnet:Database_Revision .

bacnet:date-list a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-date-list ;
    bacnet:propertyName "date-list" ;
    bacnet:propertyRef bacnet:Date_List .

bacnet:date-range a rdf:Property ;
    rdfs:label "date-range" .

bacnet:date-time a rdf:Property ;
    rdfs:label "date-time" .

bacnet:day-schedule a rdf:Property ;
    rdfs:label "day-schedule" .

bacnet:daylight-savings-status a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-daylight-savings-status ;
    bacnet:propertyName "daylight-savings-status" ;
    bacnet:propertyRef bacnet:Daylight_Savings_Status .

bacnet:days-remaining a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-days-remaining ;
    bacnet:propertyName "days-remaining" ;
    bacnet:propertyRef bacnet:Days_Remaining .

bacnet:default-fade-time a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-default-fade-time ;
    bacnet:propertyName "default-fade-time" ;
    bacnet:propertyRef bacnet:Default_Fade_Time .

bacnet:default-increment a rdf:Property ;
    rdfs:label "default-increment" .

bacnet:default-present-value a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-default-present-value ;
    bacnet:propertyName "default-present-value" ;
    bacnet:propertyRef bacnet:Default_Present_Value .

bacnet:default-ramp-rate a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-default-ramp-rate ;
    bacnet:propertyName "default-ramp-rate" ;
    bacnet:propertyRef bacnet:Default_Ramp_Rate .

bacnet:default-step-increment a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-default-step-increment ;
    bacnet:propertyName "default-step-increment" ;
    bacnet:propertyRef bacnet:Default_Step_Increment .

bacnet:default-subordinate-relationship a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-default-subordinate-relationship ;
    bacnet:propertyName "default-subordinate-relationship" ;
    bacnet:propertyRef bacnet:Default_Subordinate_Relationship .

bacnet:default-timeout a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-default-timeout ;
    bacnet:propertyName "default-timeout" ;
    bacnet:propertyRef bacnet:Default_Timeout .

bacnet:delete-on-forward a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-delete-on-forward ;
    bacnet:propertyName "delete-on-forward" ;
    bacnet:propertyRef bacnet:Delete_On_Forward .

bacnet:deployed-profile-location a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-deployed-profile-location ;
    bacnet:propertyName "deployed-profile-location" ;
    bacnet:propertyRef bacnet:Deployed_Profile_Location .

bacnet:derivative-constant a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-derivative-constant ;
    bacnet:propertyName "derivative-constant" ;
    bacnet:propertyRef bacnet:Derivative_Constant .

bacnet:derivative-constant-units a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-derivative-constant-units ;
    bacnet:propertyName "derivative-constant-units" ;
    bacnet:propertyRef bacnet:Derivative_Constant_Units .

bacnet:description-of-halt a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-description-of-halt ;
    bacnet:propertyName "description-of-halt" ;
    bacnet:propertyRef bacnet:Description_Of_Halt .

bacnet:destination a rdf:Property ;
    rdfs:label "destination" .

bacnet:device a rdf:Property ;
    rdfs:label "device" .

bacnet:device-address a rdf:Property ;
    rdfs:label "device-address" .

bacnet:device-address-binding a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-device-address-binding ;
    bacnet:propertyName "device-address-binding" ;
    bacnet:propertyRef bacnet:Device_Address_Binding .

bacnet:device-object-identifier a rdf:Property ;
    rdfs:label "device-object-identifier" .

bacnet:device-uuiD a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-device-uuiD ;
    bacnet:propertyName "device-uuiD" ;
    bacnet:propertyRef bacnet:Device_UuiD .

bacnet:direct-reading a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-direct-reading ;
    bacnet:propertyName "direct-reading" ;
    bacnet:propertyRef bacnet:Direct_Reading .

bacnet:disable a rdf:Property ;
    rdfs:label "disable" .

bacnet:distribution-key-revision a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-distribution-key-revision ;
    bacnet:propertyName "distribution-key-revision" ;
    bacnet:propertyRef bacnet:Distribution_Key_Revision .

bacnet:do-not-hide a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-do-not-hide ;
    bacnet:propertyName "do-not-hide" ;
    bacnet:propertyRef bacnet:Do_Not_Hide .

bacnet:door-extended-pulse-time a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-door-extended-pulse-time ;
    bacnet:propertyName "door-extended-pulse-time" ;
    bacnet:propertyRef bacnet:Door_Extended_Pulse_Time .

bacnet:door-members a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-door-members ;
    bacnet:propertyName "door-members" ;
    bacnet:propertyRef bacnet:Door_Members .

bacnet:door-open-too-long-time a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-door-open-too-long-time ;
    bacnet:propertyName "door-open-too-long-time" ;
    bacnet:propertyRef bacnet:Door_Open_Too_Long_Time .

bacnet:door-pulse-time a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-door-pulse-time ;
    bacnet:propertyName "door-pulse-time" ;
    bacnet:propertyRef bacnet:Door_Pulse_Time .

bacnet:door-secured-status a rdf:Property ;
    rdfs:label "door-secured-status" .

bacnet:door-unlock-delay-time a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-door-unlock-delay-time ;
    bacnet:propertyName "door-unlock-delay-time" ;
    bacnet:propertyRef bacnet:Door_Unlock_Delay_Time .

bacnet:door-value a rdf:Property ;
    rdfs:label "door-value" .

bacnet:duty-window a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-duty-window ;
    bacnet:propertyName "duty-window" ;
    bacnet:propertyRef bacnet:Duty_Window .

bacnet:effective-period a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-effective-period ;
    bacnet:propertyName "effective-period" ;
    bacnet:propertyRef bacnet:Effective_Period .

bacnet:enabled a rdf:Property ;
    rdfs:label "enabled" .

bacnet:end-date a rdf:Property ;
    rdfs:label "end-date" .

bacnet:entry-points a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-entry-points ;
    bacnet:propertyName "entry-points" ;
    bacnet:propertyRef bacnet:Entry_Points .

bacnet:enumName a rdf:Property ;
    rdfs:comment "The name of the enumeration from the ASN.1 encoding, see Clause 21." ;
    rdfs:domain bacnet:Enumeration ;
    rdfs:range xsd:string .

bacnet:enumValue a rdf:Property ;
    rdfs:comment "The value of an enumeration used in encoding, see Clause 20.2.11." ;
    rdfs:domain bacnet:Enumeration ;
    rdfs:range xsd:nonNegativeInteger .

bacnet:error-class a rdf:Property ;
    rdfs:label "error-class" .

bacnet:error-code a rdf:Property ;
    rdfs:label "error-code" .

bacnet:escalator-mode a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-escalator-mode ;
    bacnet:propertyName "escalator-mode" ;
    bacnet:propertyRef bacnet:Escalator_Mode .

bacnet:event-object-identifier a rdf:Property ;
    rdfs:label "event-object-identifier" .

bacnet:event-parameters a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-event-parameters ;
    bacnet:propertyName "event-parameters" ;
    bacnet:propertyRef bacnet:Event_Parameters .

bacnet:event-priority a rdf:Property ;
    rdfs:label "event-priority" .

bacnet:event-values a rdf:Property ;
    rdfs:label "event-values" .

bacnet:exceeding-limit a rdf:Property ;
    rdfs:label "exceeding-limit" .

bacnet:exception-schedule a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-exception-schedule ;
    bacnet:propertyName "exception-schedule" ;
    bacnet:propertyRef bacnet:Exception_Schedule .

bacnet:execution-delay a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-execution-delay ;
    bacnet:propertyName "execution-delay" ;
    bacnet:propertyRef bacnet:Execution_Delay .

bacnet:exit-points a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-exit-points ;
    bacnet:propertyName "exit-points" ;
    bacnet:propertyRef bacnet:Exit_Points .

bacnet:expected-shed-level a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-expected-shed-level ;
    bacnet:propertyName "expected-shed-level" ;
    bacnet:propertyRef bacnet:Expected_Shed_Level .

bacnet:extended-fault-type a rdf:Property ;
    rdfs:label "extended-fault-type" .

bacnet:extended-time-enable a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-extended-time-enable ;
    bacnet:propertyName "extended-time-enable" ;
    bacnet:propertyRef bacnet:Extended_Time_Enable .

bacnet:fade-time a rdf:Property ;
    rdfs:label "fade-time" .

bacnet:failed-attempt-events a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-failed-attempt-events ;
    bacnet:propertyName "failed-attempt-events" ;
    bacnet:propertyRef bacnet:Failed_Attempt_Events .

bacnet:failed-attempts a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-failed-attempts ;
    bacnet:propertyName "failed-attempts" ;
    bacnet:propertyRef bacnet:Failed_Attempts .

bacnet:failed-attempts-time a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-failed-attempts-time ;
    bacnet:propertyName "failed-attempts-time" ;
    bacnet:propertyRef bacnet:Failed_Attempts_Time .

bacnet:fault-character-string a rdf:Property ;
    rdfs:label "fault-character-string" .

bacnet:fault-extended a rdf:Property ;
    rdfs:label "fault-extended" .

bacnet:fault-life-safety a rdf:Property ;
    rdfs:label "fault-life-safety" .

bacnet:fault-parameters a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-fault-parameters ;
    bacnet:propertyName "fault-parameters" ;
    bacnet:propertyRef bacnet:Fault_Parameters .

bacnet:fault-state a rdf:Property ;
    rdfs:label "fault-state" .

bacnet:fault-status-flags a rdf:Property ;
    rdfs:label "fault-status-flags" .

bacnet:fault-type a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-fault-type ;
    bacnet:propertyName "fault-type" ;
    bacnet:propertyRef bacnet:Fault_Type .

bacnet:fd-bbmd-address a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-fd-bbmd-address ;
    bacnet:propertyName "fd-bbmd-address" ;
    bacnet:propertyRef bacnet:FD_BBMD_Address .

bacnet:fd-subscription-lifetime a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-fd-subscription-lifetime ;
    bacnet:propertyName "fd-subscription-lifetime" ;
    bacnet:propertyRef bacnet:FD_Subscription_Lifetime .

bacnet:feedback-property-reference a rdf:Property ;
    rdfs:label "feedback-property-reference" .

bacnet:file-size a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-file-size ;
    bacnet:propertyName "file-size" ;
    bacnet:propertyRef bacnet:File_Size .

bacnet:file-type a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-file-type ;
    bacnet:propertyName "file-type" ;
    bacnet:propertyRef bacnet:File_Type .

bacnet:filter a rdf:Property ;
    rdfs:label "filter" .

bacnet:firmware-revision a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-firmware-revision ;
    bacnet:propertyName "firmware-revision" ;
    bacnet:propertyRef bacnet:Firmware_Revision .

bacnet:float-scale a rdf:Property ;
    rdfs:label "float-scale" .

bacnet:floor-numbers a rdf:Property ;
    rdfs:label "floor-numbers" .

bacnet:format-class a rdf:Property ;
    rdfs:label "format-class" .

bacnet:from-state a rdf:Property ;
    rdfs:label "from-state" .

bacnet:from-time a rdf:Property ;
    rdfs:label "from-time" .

bacnet:full-duty-baseline a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-full-duty-baseline ;
    bacnet:propertyName "full-duty-baseline" ;
    bacnet:propertyRef bacnet:Full_Duty_Baseline .

bacnet:group-member-names a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-group-member-names ;
    bacnet:propertyName "group-member-names" ;
    bacnet:propertyRef bacnet:Group_Member_Names .

bacnet:group-mode a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-group-mode ;
    bacnet:propertyName "group-mode" ;
    bacnet:propertyRef bacnet:Group_Mode .

bacnet:hasVID a rdf:Property ;
    rdfs:comment "The VLAN identifier (VID) is the 12-bit unsigned specifying the VLAN." .

bacnet:high-diff-limit a rdf:Property ;
    rdfs:label "high-diff-limit" .

bacnet:higher-deck a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-higher-deck ;
    bacnet:propertyName "higher-deck" ;
    bacnet:propertyRef bacnet:Higher_Deck .

bacnet:host a rdf:Property ;
    rdfs:label "host" .

bacnet:in-process a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-in-process ;
    bacnet:propertyName "in-process" ;
    bacnet:propertyRef bacnet:In_Process .

bacnet:in-progress a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-in-progress ;
    bacnet:propertyName "in-progress" ;
    bacnet:propertyRef bacnet:In_Progress .

bacnet:index a rdf:Property ;
    rdfs:label "index" .

bacnet:initial-timeout a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-initial-timeout ;
    bacnet:propertyName "initial-timeout" ;
    bacnet:propertyRef bacnet:Initial_Timeout .

bacnet:initiating-device-identifier a rdf:Property ;
    rdfs:label "initiating-device-identifier" .

bacnet:input-reference a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-input-reference ;
    bacnet:propertyName "input-reference" ;
    bacnet:propertyRef bacnet:Input_Reference .

bacnet:instance-of a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-instance-of ;
    bacnet:propertyName "instance-of" ;
    bacnet:propertyRef bacnet:Instance_Of .

bacnet:instantaneous-power a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-instantaneous-power ;
    bacnet:propertyName "instantaneous-power" ;
    bacnet:propertyRef bacnet:Instantaneous_Power .

bacnet:integer-scale a rdf:Property ;
    rdfs:label "integer-scale" .

bacnet:integral-constant a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-integral-constant ;
    bacnet:propertyName "integral-constant" ;
    bacnet:propertyRef bacnet:Integral_Constant .

bacnet:integral-constant-units a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-integral-constant-units ;
    bacnet:propertyName "integral-constant-units" ;
    bacnet:propertyRef bacnet:Integral_Constant_Units .

bacnet:invoke-iD a rdf:Property ;
    rdfs:label "invoke-id" .

bacnet:ip-default-gateway a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-ip-default-gateway ;
    bacnet:propertyName "ip-default-gateway" ;
    bacnet:propertyRef bacnet:IP_Default_Gateway .

bacnet:ip-dhcp-enable a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-ip-dhcp-enable ;
    bacnet:propertyName "ip-dhcp-enable" ;
    bacnet:propertyRef bacnet:IP_DHCP_Enable .

bacnet:ip-dhcp-lease-time a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-ip-dhcp-lease-time ;
    bacnet:propertyName "ip-dhcp-lease-time" ;
    bacnet:propertyRef bacnet:IP_DHCP_Lease_Time .

bacnet:ip-dhcp-lease-time-remaining a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-ip-dhcp-lease-time-remaining ;
    bacnet:propertyName "ip-dhcp-lease-time-remaining" ;
    bacnet:propertyRef bacnet:IP_DHCP_Lease_Time_Remaining .

bacnet:ip-dhcp-server a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-ip-dhcp-server ;
    bacnet:propertyName "ip-dhcp-server" ;
    bacnet:propertyRef bacnet:IP_DHCP_Server .

bacnet:ip-dns-server a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-ip-dns-server ;
    bacnet:propertyName "ip-dns-server" ;
    bacnet:propertyRef bacnet:IP_DNS_Server .

bacnet:ip-subnet-mask a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-ip-subnet-mask ;
    bacnet:propertyName "ip-subnet-mask" ;
    bacnet:propertyRef bacnet:IP_Subnet_Mask .

bacnet:ipv6-address a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-ipv6-address ;
    bacnet:propertyName "ipv6-address" ;
    bacnet:propertyRef bacnet:IPv6_Address .

bacnet:ipv6-auto-addressing-enabled a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-ipv6-auto-addressing-enabled ;
    bacnet:propertyName "ipv6-auto-addressing-enabled" ;
    bacnet:propertyRef bacnet:IPv6_Auto_Addressing_Enabled .

bacnet:ipv6-default-gateway a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-ipv6-default-gateway ;
    bacnet:propertyName "ipv6-default-gateway" ;
    bacnet:propertyRef bacnet:IPv6_Default_Gateway .

bacnet:ipv6-dhcp-lease-time a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-ipv6-dhcp-lease-time ;
    bacnet:propertyName "ipv6-dhcp-lease-time" ;
    bacnet:propertyRef bacnet:IPv6_DHCP_Lease_Time .

bacnet:ipv6-dhcp-lease-time-remaining a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-ipv6-dhcp-lease-time-remaining ;
    bacnet:propertyName "ipv6-dhcp-lease-time-remaining" ;
    bacnet:propertyRef bacnet:IPv6_DHCP_Lease_Time_Remaining .

bacnet:ipv6-dhcp-server a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-ipv6-dhcp-server ;
    bacnet:propertyName "ipv6-dhcp-server" ;
    bacnet:propertyRef bacnet:IPv6_DHCP_Server .

bacnet:ipv6-dns-server a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-ipv6-dns-server ;
    bacnet:propertyName "ipv6-dns-server" ;
    bacnet:propertyRef bacnet:IPv6_DNS_Server .

bacnet:ipv6-prefix-length a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-ipv6-prefix-length ;
    bacnet:propertyName "ipv6-prefix-length" ;
    bacnet:propertyRef bacnet:IPv6_Prefix_Length .

bacnet:ipv6-zone-index a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-ipv6-zone-index ;
    bacnet:propertyName "ipv6-zone-index" ;
    bacnet:propertyRef bacnet:IPv6_Zone_Index .

bacnet:key-id a rdf:Property ;
    rdfs:label "key-id" .

bacnet:key-ids a rdf:Property ;
    rdfs:label "key-ids" .

bacnet:key-revision a rdf:Property ;
    rdfs:label "key-revision" .

bacnet:key-sets a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-key-sets ;
    bacnet:propertyName "key-sets" ;
    bacnet:propertyRef bacnet:Key_Sets .

bacnet:landing-call-control a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-landing-call-control ;
    bacnet:propertyName "landing-call-control" ;
    bacnet:propertyRef bacnet:Landing_Call_Control .

bacnet:landing-door-status a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-landing-door-status ;
    bacnet:propertyName "landing-door-status" ;
    bacnet:propertyRef bacnet:Landing_Door_Status .

bacnet:landing-doors a rdf:Property ;
    rdfs:label "landing-doors" .

bacnet:last-access-event a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-last-access-event ;
    bacnet:propertyName "last-access-event" ;
    bacnet:propertyRef bacnet:Last_Access_Event .

bacnet:last-access-point a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-last-access-point ;
    bacnet:propertyName "last-access-point" ;
    bacnet:propertyRef bacnet:Last_Access_Point .

bacnet:last-credential-added a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-last-credential-added ;
    bacnet:propertyName "last-credential-added" ;
    bacnet:propertyRef bacnet:Last_Credential_Added .

bacnet:last-credential-added-time a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-last-credential-added-time ;
    bacnet:propertyName "last-credential-added-time" ;
    bacnet:propertyRef bacnet:Last_Credential_Added_Time .

bacnet:last-credential-removed a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-last-credential-removed ;
    bacnet:propertyName "last-credential-removed" ;
    bacnet:propertyRef bacnet:Last_Credential_Removed .

bacnet:last-credential-removed-time a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-last-credential-removed-time ;
    bacnet:propertyName "last-credential-removed-time" ;
    bacnet:propertyRef bacnet:Last_Credential_Removed_Time .

bacnet:last-key-server a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-last-key-server ;
    bacnet:propertyName "last-key-server" ;
    bacnet:propertyRef bacnet:Last_Key_Server .

bacnet:last-priority a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-last-priority ;
    bacnet:propertyName "last-priority" ;
    bacnet:propertyRef bacnet:Last_Priority .

bacnet:last-restart-reason a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-last-restart-reason ;
    bacnet:propertyName "last-restart-reason" ;
    bacnet:propertyRef bacnet:Last_Restart_Reason .

bacnet:last-restore-time a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-last-restore-time ;
    bacnet:propertyName "last-restore-time" ;
    bacnet:propertyRef bacnet:Last_Restore_Time .

bacnet:last-state-change a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-last-state-change ;
    bacnet:propertyName "last-state-change" ;
    bacnet:propertyRef bacnet:Last_State_Change .

bacnet:last-use-time a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-last-use-time ;
    bacnet:propertyName "last-use-time" ;
    bacnet:propertyRef bacnet:Last_Use_Time .

bacnet:layeredAbove a rdf:Property ;
    rdf:comment "A network node may be 'stacked' on one or more nodes." ;
    rdfs:domain bacnet:Node ;
    rdfs:range bacnet:Node .

bacnet:layeredBelow a rdf:Property ;
    rdf:comment "A network node may have one or more nodes 'stacked' on top." ;
    rdfs:domain bacnet:Node ;
    rdfs:range bacnet:Node .

bacnet:level a rdf:Property ;
    rdfs:label "level" .

bacnet:life-safety-mode a rdf:Property ;
    rdfs:label "life-safety-mode" .

bacnet:life-safety-operation a rdf:Property ;
    rdfs:label "life-safety-operation" .

bacnet:life-safety-state a rdf:Property ;
    rdfs:label "life-safety-state" .

bacnet:lighting-command-default-priority a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-lighting-command-default-priority ;
    bacnet:propertyName "lighting-command-default-priority" ;
    bacnet:propertyRef bacnet:Lighting_Command_Default_Priority .

bacnet:lighting-in-progress a rdf:Property ;
    rdfs:label "lighting-in-progress" .

bacnet:lighting-operation a rdf:Property ;
    rdfs:label "lighting-operation" .

bacnet:lighting-transition a rdf:Property ;
    rdfs:label "lighting-transition" .

bacnet:limit a rdf:Property ;
    rdfs:label "limit" .

bacnet:limit-monitoring-interval a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-limit-monitoring-interval ;
    bacnet:propertyName "limit-monitoring-interval" ;
    bacnet:propertyRef bacnet:Limit_Monitoring_Interval .

bacnet:link-speed a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-link-speed ;
    bacnet:propertyName "link-speed" ;
    bacnet:propertyRef bacnet:Link_Speed .

bacnet:link-speed-autonegotiate a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-link-speed-autonegotiate ;
    bacnet:propertyName "link-speed-autonegotiate" ;
    bacnet:propertyRef bacnet:Link_Speed_Autonegotiate .

bacnet:link-speeds a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-link-speeds ;
    bacnet:propertyName "link-speeds" ;
    bacnet:propertyRef bacnet:Link_Speeds .

bacnet:list-of-access-events a rdf:Property ;
    rdfs:label "list-of-access-events" .

bacnet:list-of-bitstring-values a rdf:Property ;
    rdfs:label "list-of-bitstring-values" .

bacnet:list-of-cov-references a rdf:Property ;
    rdfs:label "list-of-cov-references" .

bacnet:list-of-cov-subscription-specifications a rdf:Property ;
    rdfs:label "list-of-cov-subscription-specifications" .

bacnet:list-of-group-members a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-list-of-group-members ;
    bacnet:propertyName "list-of-group-members" ;
    bacnet:propertyRef bacnet:List_Of_Group_Members .

bacnet:list-of-life-safety-alarm-values a rdf:Property ;
    rdfs:label "list-of-life-safety-alarm-values" .

bacnet:list-of-property-references a rdf:Property ;
    rdfs:label "list-of-property-references" .

bacnet:list-of-results a rdf:Property ;
    rdfs:label "list-of-results" .

bacnet:list-of-time-values a rdf:Property ;
    rdfs:label "list-of-time-values" .

bacnet:list-of-values a rdf:Property ;
    rdfs:label "list-of-values" .

bacnet:local-date a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-local-date ;
    bacnet:propertyName "local-date" ;
    bacnet:propertyRef bacnet:Local_Date .

bacnet:local-forwarding-only a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-local-forwarding-only ;
    bacnet:propertyName "local-forwarding-only" ;
    bacnet:propertyRef bacnet:Local_Forwarding_Only .

bacnet:local-time a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-local-time ;
    bacnet:propertyName "local-time" ;
    bacnet:propertyRef bacnet:Local_Time .

bacnet:local-vt-session-iD a rdf:Property ;
    rdfs:label "local-vt-session-id" .

bacnet:location-specifier a rdf:Property ;
    rdfs:label "location-specifier" .

bacnet:lockout a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-lockout ;
    bacnet:propertyName "lockout" ;
    bacnet:propertyRef bacnet:Lockout .

bacnet:lockout-relinquish-time a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-lockout-relinquish-time ;
    bacnet:propertyName "lockout-relinquish-time" ;
    bacnet:propertyRef bacnet:Lockout_Relinquish_Time .

bacnet:logging-object a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-logging-object ;
    bacnet:propertyName "logging-object" ;
    bacnet:propertyRef bacnet:Logging_Object .

bacnet:logging-record a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-logging-record ;
    bacnet:propertyName "logging-record" ;
    bacnet:propertyRef bacnet:Logging_Record .

bacnet:lower-deck a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-lower-deck ;
    bacnet:propertyName "lower-deck" ;
    bacnet:propertyRef bacnet:Lower_Deck .

bacnet:machine-room-iD a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-machine-room-iD ;
    bacnet:propertyName "machine-room-iD" ;
    bacnet:propertyRef bacnet:Machine_Room_ID .

bacnet:maintenance a rdf:Property ;
    rdfs:label "maintenance" .

bacnet:making-car-call a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-making-car-call ;
    bacnet:propertyName "making-car-call" ;
    bacnet:propertyRef bacnet:Making_Car_Call .

bacnet:manipulated-variable-reference a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-manipulated-variable-reference ;
    bacnet:propertyName "manipulated-variable-reference" ;
    bacnet:propertyRef bacnet:Manipulated_Variable_Reference .

bacnet:masked-alarm-values a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-masked-alarm-values ;
    bacnet:propertyName "masked-alarm-values" ;
    bacnet:propertyRef bacnet:Masked_Alarm_Values .

bacnet:max-actual-value a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-max-actual-value ;
    bacnet:propertyName "max-actual-value" ;
    bacnet:propertyRef bacnet:Max_Actual_Value .

bacnet:max-apdu-length-accepted a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-max-apdu-length-accepted ;
    bacnet:propertyName "max-apdu-length-accepted" ;
    bacnet:propertyRef bacnet:Max_APDU_Length_Accepted .

bacnet:max-failed-attempts a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-max-failed-attempts ;
    bacnet:propertyName "max-failed-attempts" ;
    bacnet:propertyRef bacnet:Max_Failed_Attempts .

bacnet:max-notification-delay a rdf:Property ;
    rdfs:label "max-notification-delay" .

bacnet:max-segments-accepted a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-max-segments-accepted ;
    bacnet:propertyName "max-segments-accepted" ;
    bacnet:propertyRef bacnet:Max_Segments_Accepted .

bacnet:maximum-output a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-maximum-output ;
    bacnet:propertyName "maximum-output" ;
    bacnet:propertyRef bacnet:Maximum_Output .

bacnet:maximum-send-delay a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-maximum-send-delay ;
    bacnet:propertyName "maximum-send-delay" ;
    bacnet:propertyRef bacnet:Maximum_Send_Delay .

bacnet:maximum-value a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-maximum-value ;
    bacnet:propertyName "maximum-value" ;
    bacnet:propertyRef bacnet:Maximum_Value .

bacnet:maximum-value-timestamp a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-maximum-value-timestamp ;
    bacnet:propertyName "maximum-value-timestamp" ;
    bacnet:propertyRef bacnet:Maximum_Value_Timestamp .

bacnet:member-status-flags a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-member-status-flags ;
    bacnet:propertyName "member-status-flags" ;
    bacnet:propertyRef bacnet:Member_Status_Flags .

bacnet:message-text a rdf:Property ;
    rdfs:label "message-text" .

bacnet:min-actual-value a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-min-actual-value ;
    bacnet:propertyName "min-actual-value" ;
    bacnet:propertyRef bacnet:Min_Actual_Value .

bacnet:minimum-output a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-minimum-output ;
    bacnet:propertyName "minimum-output" ;
    bacnet:propertyRef bacnet:Minimum_Output .

bacnet:minimum-value a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-minimum-value ;
    bacnet:propertyName "minimum-value" ;
    bacnet:propertyRef bacnet:Minimum_Value .

bacnet:minimum-value-timestamp a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-minimum-value-timestamp ;
    bacnet:propertyName "minimum-value-timestamp" ;
    bacnet:propertyRef bacnet:Minimum_Value_Timestamp .

bacnet:model-name a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-model-name ;
    bacnet:propertyName "model-name" ;
    bacnet:propertyRef bacnet:Model_Name .

bacnet:modification-date a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-modification-date ;
    bacnet:propertyName "modification-date" ;
    bacnet:propertyRef bacnet:Modification_Date .

bacnet:modulo-divide a rdf:Property ;
    rdfs:label "modulo-divide" .

bacnet:monitored-object-identifier a rdf:Property ;
    rdfs:label "monitored-object-identifier" .

bacnet:monitored-objects a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-monitored-objects ;
    bacnet:propertyName "monitored-objects" ;
    bacnet:propertyRef bacnet:Monitored_Objects .

bacnet:monitored-property a rdf:Property ;
    rdfs:label "monitored-property" .

bacnet:monitored-property-reference a rdf:Property ;
    rdfs:label "monitored-property-reference" .

bacnet:multiplier a rdf:Property ;
    rdfs:label "multiplier" .

bacnet:muster-point a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-muster-point ;
    bacnet:propertyName "muster-point" ;
    bacnet:propertyRef bacnet:Muster_Point .

bacnet:native-mac-address a rdf:Property ;
    rdfs:label "native-mac-address" .

bacnet:negative-access-rules a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-negative-access-rules ;
    bacnet:propertyName "negative-access-rules" ;
    bacnet:propertyRef bacnet:Negative_Access_Rules .

bacnet:network-access-security-policies a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-network-access-security-policies ;
    bacnet:propertyName "network-access-security-policies" ;
    bacnet:propertyRef bacnet:Network_Access_Security_Policies .

bacnet:network-interface-name a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-network-interface-name ;
    bacnet:propertyName "network-interface-name" ;
    bacnet:propertyRef bacnet:Network_Interface_Name .

bacnet:network-number-quality a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-network-number-quality ;
    bacnet:propertyName "network-number-quality" ;
    bacnet:propertyRef bacnet:Network_Number_Quality .

bacnet:network-type a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-network-type ;
    bacnet:propertyName "network-type" ;
    bacnet:propertyRef bacnet:Network_Type .

bacnet:new-mode a rdf:Property ;
    rdfs:label "new-mode" .

bacnet:new-value a rdf:Property ;
    rdfs:label "new-value" .

bacnet:next-stopping-floor a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-next-stopping-floor ;
    bacnet:propertyName "next-stopping-floor" ;
    bacnet:propertyRef bacnet:Next_Stopping_Floor .

bacnet:no-value a rdf:Property ;
    rdfs:label "no-value" .

bacnet:node-subtype a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-node-subtype ;
    bacnet:propertyName "node-subtype" ;
    bacnet:propertyRef bacnet:Node_Subtype .

bacnet:notification a rdf:Property ;
    rdfs:label "notification" .

bacnet:number-of-apdu-retries a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-number-of-apdu-retries ;
    bacnet:propertyName "number-of-apdu-retries" ;
    bacnet:propertyRef bacnet:Number_Of_APDU_Retries .

bacnet:number-of-authentication-policies a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-number-of-authentication-policies ;
    bacnet:propertyName "number-of-authentication-policies" ;
    bacnet:propertyRef bacnet:Number_Of_Authentication_Policies .

bacnet:object-list a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-object-list ;
    bacnet:propertyName "object-list" ;
    bacnet:propertyRef bacnet:Object_List .

bacnet:object-name a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-object-name ;
    bacnet:propertyName "object-name" ;
    bacnet:propertyOf bacnet:Object ;
    bacnet:propertyRef bacnet:Object_Name ;
    rdfs:subPropertyOf bacnet:ReadableProperty .

bacnet:occupancy-count a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-occupancy-count ;
    bacnet:propertyName "occupancy-count" ;
    bacnet:propertyRef bacnet:Occupancy_Count .

bacnet:occupancy-count-adjust a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-occupancy-count-adjust ;
    bacnet:propertyName "occupancy-count-adjust" ;
    bacnet:propertyRef bacnet:Occupancy_Count_Adjust .

bacnet:occupancy-count-enable a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-occupancy-count-enable ;
    bacnet:propertyName "occupancy-count-enable" ;
    bacnet:propertyRef bacnet:Occupancy_Count_Enable .

bacnet:occupancy-lower-limit a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-occupancy-lower-limit ;
    bacnet:propertyName "occupancy-lower-limit" ;
    bacnet:propertyRef bacnet:Occupancy_Lower_Limit .

bacnet:occupancy-lower-limit-enforced a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-occupancy-lower-limit-enforced ;
    bacnet:propertyName "occupancy-lower-limit-enforced" ;
    bacnet:propertyRef bacnet:Occupancy_Lower_Limit_Enforced .

bacnet:occupancy-state a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-occupancy-state ;
    bacnet:propertyName "occupancy-state" ;
    bacnet:propertyRef bacnet:Occupancy_State .

bacnet:occupancy-upper-limit a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-occupancy-upper-limit ;
    bacnet:propertyName "occupancy-upper-limit" ;
    bacnet:propertyRef bacnet:Occupancy_Upper_Limit .

bacnet:occupancy-upper-limit-enforced a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-occupancy-upper-limit-enforced ;
    bacnet:propertyName "occupancy-upper-limit-enforced" ;
    bacnet:propertyRef bacnet:Occupancy_Upper_Limit_Enforced .

bacnet:octetstring a rdf:Property ;
    rdfs:label "octetstring" .

bacnet:operation-direction a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-operation-direction ;
    bacnet:propertyName "operation-direction" ;
    bacnet:propertyRef bacnet:Operation_Direction .

bacnet:order-enforced a rdf:Property ;
    rdfs:label "order-enforced" .

bacnet:output-units a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-output-units ;
    bacnet:propertyName "output-units" ;
    bacnet:propertyRef bacnet:Output_Units .

bacnet:packet-reorder-time a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-packet-reorder-time ;
    bacnet:propertyName "packet-reorder-time" ;
    bacnet:propertyRef bacnet:Packet_Reorder_Time .

bacnet:passback-mode a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-passback-mode ;
    bacnet:propertyName "passback-mode" ;
    bacnet:propertyRef bacnet:Passback_Mode .

bacnet:passback-timeout a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-passback-timeout ;
    bacnet:propertyName "passback-timeout" ;
    bacnet:propertyRef bacnet:Passback_Timeout .

bacnet:percent a rdf:Property ;
    rdfs:label "percent" .

bacnet:period a rdf:Property ;
    rdfs:label "period" .

bacnet:policy a rdf:Property ;
    rdfs:label "policy" .

bacnet:port a rdf:Property ;
    rdfs:label "port" .

bacnet:port-filter a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-port-filter ;
    bacnet:propertyName "port-filter" ;
    bacnet:propertyRef bacnet:Port_Filter .

bacnet:positive-access-rules a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-positive-access-rules ;
    bacnet:propertyName "positive-access-rules" ;
    bacnet:propertyRef bacnet:Positive_Access_Rules .

bacnet:post-delay a rdf:Property ;
    rdfs:label "post-delay" .

bacnet:power-mode a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-power-mode ;
    bacnet:propertyName "power-mode" ;
    bacnet:propertyRef bacnet:Power_Mode .

bacnet:prescale a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-prescale ;
    bacnet:propertyName "prescale" ;
    bacnet:propertyRef bacnet:Prescale .

bacnet:present-stage a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-present-stage ;
    bacnet:propertyName "present-stage" ;
    bacnet:propertyRef bacnet:Present_Stage .

bacnet:previous-notification a rdf:Property ;
    rdfs:label "previous-notification" .

bacnet:previous-notification-count a rdf:Property ;
    rdfs:label "previous-notification-count" .

bacnet:process-identifier-filter a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-process-identifier-filter ;
    bacnet:propertyName "process-identifier-filter" ;
    bacnet:propertyRef bacnet:Process_Identifier_Filter .

bacnet:profile-location a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-profile-location ;
    bacnet:propertyName "profile-location" ;
    bacnet:propertyOf bacnet:Object ;
    bacnet:propertyRef bacnet:Profile_Location ;
    rdfs:subPropertyOf bacnet:OptionalProperty .

bacnet:profile-name a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-profile-name ;
    bacnet:propertyName "profile-name" ;
    bacnet:propertyOf bacnet:Object ;
    bacnet:propertyRef bacnet:Profile_Name ;
    rdfs:subPropertyOf bacnet:OptionalProperty .

bacnet:program-location a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-program-location ;
    bacnet:propertyName "program-location" ;
    bacnet:propertyRef bacnet:Program_Location .

bacnet:property-list a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-property-list ;
    bacnet:propertyName "property-list" ;
    bacnet:propertyOf bacnet:Object ;
    bacnet:propertyRef bacnet:Property_List ;
    rdfs:subPropertyOf bacnet:ReadableProperty .

bacnet:property-values a rdf:Property ;
    rdfs:label "property-values" .

bacnet:proportional-constant a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-proportional-constant ;
    bacnet:propertyName "proportional-constant" ;
    bacnet:propertyRef bacnet:Proportional_Constant .

bacnet:proportional-constant-units a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-proportional-constant-units ;
    bacnet:propertyName "proportional-constant-units" ;
    bacnet:propertyRef bacnet:Proportional_Constant_Units .

bacnet:protocol-level a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-protocol-level ;
    bacnet:propertyName "protocol-level" ;
    bacnet:propertyRef bacnet:Protocol_Level .

bacnet:protocol-object-types-supported a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-protocol-object-types-supported ;
    bacnet:propertyName "protocol-object-types-supported" ;
    bacnet:propertyRef bacnet:Protocol_Object_Types_Supported .

bacnet:protocol-revision a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-protocol-revision ;
    bacnet:propertyName "protocol-revision" ;
    bacnet:propertyRef bacnet:Protocol_Revision .

bacnet:protocol-services-supported a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-protocol-services-supported ;
    bacnet:propertyName "protocol-services-supported" ;
    bacnet:propertyRef bacnet:Protocol_Services_Supported .

bacnet:protocol-version a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-protocol-version ;
    bacnet:propertyName "protocol-version" ;
    bacnet:propertyRef bacnet:Protocol_Version .

bacnet:pulse-rate a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-pulse-rate ;
    bacnet:propertyName "pulse-rate" ;
    bacnet:propertyRef bacnet:Pulse_Rate .

bacnet:quite-on-failure a rdf:Property ;
    rdfs:label "quite-on-failure" .

bacnet:ramp-rate a rdf:Property ;
    rdfs:label "ramp-rate" .

bacnet:read-only a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-read-only ;
    bacnet:propertyName "read-only" ;
    bacnet:propertyRef bacnet:Read_Only .

bacnet:read-result a rdf:Property ;
    rdfs:label "read-result" .

bacnet:real-increment a rdf:Property ;
    rdfs:label "real-increment" .

bacnet:reason-for-disable a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-reason-for-disable ;
    bacnet:propertyName "reason-for-disable" ;
    bacnet:propertyRef bacnet:Reason_For_Disable .

bacnet:reference-port a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-reference-port ;
    bacnet:propertyName "reference-port" ;
    bacnet:propertyRef bacnet:Reference_Port .

bacnet:reference-value a rdf:Property ;
    rdfs:label "reference-value" .

bacnet:referenced-bitstring a rdf:Property ;
    rdfs:label "referenced-bitstring" .

bacnet:referenced-flags a rdf:Property ;
    rdfs:label "referenced-flags" .

bacnet:referenced-property-increment a rdf:Property ;
    rdfs:label "referenced-property-increment" .

bacnet:registered-car-call a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-registered-car-call ;
    bacnet:propertyName "registered-car-call" ;
    bacnet:propertyRef bacnet:Registered_Car_Call .

bacnet:remaining-time-to-live a rdf:Property ;
    rdfs:label "remaining-time-to-live" .

bacnet:remote-vt-address a rdf:Property ;
    rdfs:label "remote-vt-address" .

bacnet:remote-vt-session-iD a rdf:Property ;
    rdfs:label "remote-vt-session-id" .

bacnet:represents a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-represents ;
    bacnet:propertyName "represents" ;
    bacnet:propertyRef bacnet:Represents .

bacnet:requested-shed-level a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-requested-shed-level ;
    bacnet:propertyName "requested-shed-level" ;
    bacnet:propertyRef bacnet:Requested_Shed_Level .

bacnet:requested-update-interval a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-requested-update-interval ;
    bacnet:propertyName "requested-update-interval" ;
    bacnet:propertyRef bacnet:Requested_Update_Interval .

bacnet:restart-notification-recipients a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-restart-notification-recipients ;
    bacnet:propertyName "restart-notification-recipients" ;
    bacnet:propertyRef bacnet:Restart_Notification_Recipients .

bacnet:restart-reason a rdf:Property ;
    rdfs:label "restart-reason" .

bacnet:restore-completion-time a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-restore-completion-time ;
    bacnet:propertyName "restore-completion-time" ;
    bacnet:propertyRef bacnet:Restore_Completion_Time .

bacnet:restore-preparation-time a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-restore-preparation-time ;
    bacnet:propertyName "restore-preparation-time" ;
    bacnet:propertyRef bacnet:Restore_Preparation_Time .

bacnet:result a rdf:Property ;
    rdfs:label "result" .

bacnet:routing-table a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-routing-table ;
    bacnet:propertyName "routing-table" ;
    bacnet:propertyRef bacnet:Routing_Table .

bacnet:scale a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-scale ;
    bacnet:propertyName "scale" ;
    bacnet:propertyRef bacnet:Scale .

bacnet:scale-factor a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-scale-factor ;
    bacnet:propertyName "scale-factor" ;
    bacnet:propertyRef bacnet:Scale_Factor .

bacnet:schedule-default a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-schedule-default ;
    bacnet:propertyName "schedule-default" ;
    bacnet:propertyRef bacnet:Schedule_Default .

bacnet:secured-status a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-secured-status ;
    bacnet:propertyName "secured-status" ;
    bacnet:propertyRef bacnet:Secured_Status .

bacnet:security-pdu-timeout a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-security-pdu-timeout ;
    bacnet:propertyName "security-pdu-timeout" ;
    bacnet:propertyRef bacnet:Security_PDU_Timeout .

bacnet:security-time-window a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-security-time-window ;
    bacnet:propertyName "security-time-window" ;
    bacnet:propertyRef bacnet:Security_Time_Window .

bacnet:segmentation-supported a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-segmentation-supported ;
    bacnet:propertyName "segmentation-supported" ;
    bacnet:propertyRef bacnet:Segmentation_Supported .

bacnet:selected-flags a rdf:Property ;
    rdfs:label "selected-flags" .

bacnet:send-now a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-send-now ;
    bacnet:propertyName "send-now" ;
    bacnet:propertyRef bacnet:Send_Now .

bacnet:sequence-number a rdf:Property ;
    rdfs:label "sequence-number" .

bacnet:serial-number a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-serial-number ;
    bacnet:propertyName "serial-number" ;
    bacnet:propertyRef bacnet:Serial_Number .

bacnet:setpoint a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-setpoint ;
    bacnet:propertyName "setpoint" ;
    bacnet:propertyRef bacnet:Setpoint .

bacnet:setpoint-value a rdf:Property ;
    rdfs:label "setpoint-value" .

bacnet:setting a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-setting ;
    bacnet:propertyName "setting" ;
    bacnet:propertyRef bacnet:Setting .

bacnet:shed-duration a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-shed-duration ;
    bacnet:propertyName "shed-duration" ;
    bacnet:propertyRef bacnet:Shed_Duration .

bacnet:shed-level-descriptions a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-shed-level-descriptions ;
    bacnet:propertyName "shed-level-descriptions" ;
    bacnet:propertyRef bacnet:Shed_Level_Descriptions .

bacnet:shed-levels a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-shed-levels ;
    bacnet:propertyName "shed-levels" ;
    bacnet:propertyRef bacnet:Shed_Levels .

bacnet:shed-state a rdf:Property ;
    rdfs:label "shed-state" .

bacnet:silenced-state a rdf:Property ;
    rdfs:label "silenced-state" .

bacnet:source-comment a rdf:Property ;
    rdfs:label "source-comment" .

bacnet:source-device a rdf:Property ;
    rdfs:label "source-device" .

bacnet:source-object a rdf:Property ;
    rdfs:label "source-object" .

bacnet:source-timestamp a rdf:Property ;
    rdfs:label "source-timestamp" .

bacnet:source-user-iD a rdf:Property ;
    rdfs:label "source-user-id" .

bacnet:source-user-role a rdf:Property ;
    rdfs:label "source-user-role" .

bacnet:stage-names a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-stage-names ;
    bacnet:propertyName "stage-names" ;
    bacnet:propertyRef bacnet:Stage_Names .

bacnet:stages a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-stages ;
    bacnet:propertyName "stages" ;
    bacnet:propertyRef bacnet:Stages .

bacnet:start-date a rdf:Property ;
    rdfs:label "start-date" .

bacnet:state a rdf:Property ;
    rdfs:label "state" .

bacnet:state-change-values a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-state-change-values ;
    bacnet:propertyName "state-change-values" ;
    bacnet:propertyRef bacnet:State_Change_Values .

bacnet:state-description a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-state-description ;
    bacnet:propertyName "state-description" ;
    bacnet:propertyRef bacnet:State_Description .

bacnet:status a rdf:Property ;
    rdfs:label "status" .

bacnet:status-flags-reference a rdf:Property ;
    rdfs:label "status-flags-reference" .

bacnet:step-increment a rdf:Property ;
    rdfs:label "step-increment" .

bacnet:strike-count a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-strike-count ;
    bacnet:propertyName "strike-count" ;
    bacnet:propertyRef bacnet:Strike_Count .

bacnet:structured-object-list a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-structured-object-list ;
    bacnet:propertyName "structured-object-list" ;
    bacnet:propertyRef bacnet:Structured_Object_List .

bacnet:subordinate-annotations a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-subordinate-annotations ;
    bacnet:propertyName "subordinate-annotations" ;
    bacnet:propertyRef bacnet:Subordinate_Annotations .

bacnet:subordinate-list a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-subordinate-list ;
    bacnet:propertyName "subordinate-list" ;
    bacnet:propertyRef bacnet:Subordinate_List .

bacnet:subordinate-node-types a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-subordinate-node-types ;
    bacnet:propertyName "subordinate-node-types" ;
    bacnet:propertyRef bacnet:Subordinate_Node_Types .

bacnet:subordinate-relationships a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-subordinate-relationships ;
    bacnet:propertyName "subordinate-relationships" ;
    bacnet:propertyRef bacnet:Subordinate_Relationships .

bacnet:subordinate-tags a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-subordinate-tags ;
    bacnet:propertyName "subordinate-tags" ;
    bacnet:propertyRef bacnet:Subordinate_Tags .

bacnet:subscribed-recipients a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-subscribed-recipients ;
    bacnet:propertyName "subscribed-recipients" ;
    bacnet:propertyRef bacnet:Subscribed_Recipients .

bacnet:supported-format-classes a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-supported-format-classes ;
    bacnet:propertyName "supported-format-classes" ;
    bacnet:propertyRef bacnet:Supported_Format_Classes .

bacnet:supported-formats a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-supported-formats ;
    bacnet:propertyName "supported-formats" ;
    bacnet:propertyRef bacnet:Supported_Formats .

bacnet:supported-security-algorithms a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-supported-security-algorithms ;
    bacnet:propertyName "supported-security-algorithms" ;
    bacnet:propertyRef bacnet:Supported_Security_Algorithms .

bacnet:tags a bacnet:StandardProperty,
        rdf:Property ;
    rdfs:label "tags" ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-tags ;
    bacnet:propertyName "tags" ;
    bacnet:propertyRef bacnet:Tags ;
    rdfs:domain bacnet:Object ;
    rdfs:subPropertyOf bacnet:OptionalProperty .

bacnet:target-comment a rdf:Property ;
    rdfs:label "target-comment" .

bacnet:target-device a rdf:Property ;
    rdfs:label "target-device" .

bacnet:target-level a rdf:Property ;
    rdfs:label "target-level" .

bacnet:target-object a rdf:Property ;
    rdfs:label "target-object" .

bacnet:target-priority a rdf:Property ;
    rdfs:label "target-priority" .

bacnet:target-property a rdf:Property ;
    rdfs:label "target-property" .

bacnet:target-references a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-target-references ;
    bacnet:propertyName "target-references" ;
    bacnet:propertyRef bacnet:Target_References .

bacnet:target-timestamp a rdf:Property ;
    rdfs:label "target-timestamp" .

bacnet:target-value a rdf:Property ;
    rdfs:label "target-value" .

bacnet:threat-authority a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-threat-authority ;
    bacnet:propertyName "threat-authority" ;
    bacnet:propertyRef bacnet:Threat_Authority .

bacnet:threat-level a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-threat-level ;
    bacnet:propertyName "threat-level" ;
    bacnet:propertyRef bacnet:Threat_Level .

bacnet:time-of-device-restart a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-time-of-device-restart ;
    bacnet:propertyName "time-of-device-restart" ;
    bacnet:propertyRef bacnet:Time_Of_Device_Restart .

bacnet:time-of-strike-count-reset a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-time-of-strike-count-reset ;
    bacnet:propertyName "time-of-strike-count-reset" ;
    bacnet:propertyRef bacnet:Time_Of_Strike_Count_Reset .

bacnet:time-range a rdf:Property ;
    rdfs:label "time-range" .

bacnet:time-range-specifier a rdf:Property ;
    rdfs:label "time-range-specifier" .

bacnet:time-stamp a rdf:Property ;
    rdfs:label "time-stamp" .

bacnet:time-synchronization-interval a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-time-synchronization-interval ;
    bacnet:propertyName "time-synchronization-interval" ;
    bacnet:propertyRef bacnet:Time_Synchronization_Interval .

bacnet:time-synchronization-recipients a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-time-synchronization-recipients ;
    bacnet:propertyName "time-synchronization-recipients" ;
    bacnet:propertyRef bacnet:Time_Synchronization_Recipients .

bacnet:time-to-live a rdf:Property ;
    rdfs:label "time-to-live" .

bacnet:timeout a rdf:Property ;
    rdfs:label "timeout" .

bacnet:timer-running a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-timer-running ;
    bacnet:propertyName "timer-running" ;
    bacnet:propertyRef bacnet:Timer_Running .

bacnet:timer-state a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-timer-state ;
    bacnet:propertyName "timer-state" ;
    bacnet:propertyRef bacnet:Timer_State .

bacnet:timestamped a rdf:Property ;
    rdfs:label "timestamped" .

bacnet:to-state a rdf:Property ;
    rdfs:label "to-state" .

bacnet:to-time a rdf:Property ;
    rdfs:label "to-time" .

bacnet:trace-flag a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-trace-flag ;
    bacnet:propertyName "trace-flag" ;
    bacnet:propertyRef bacnet:Trace_Flag .

bacnet:transaction-notification-class a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-transaction-notification-class ;
    bacnet:propertyName "transaction-notification-class" ;
    bacnet:propertyRef bacnet:Transaction_Notification_Class .

bacnet:transition a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-transition ;
    bacnet:propertyName "transition" ;
    bacnet:propertyRef bacnet:Transition .

bacnet:transitions a rdf:Property ;
    rdfs:label "transitions" .

bacnet:update-key-set-timeout a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-update-key-set-timeout ;
    bacnet:propertyName "update-key-set-timeout" ;
    bacnet:propertyRef bacnet:Update_Key_Set_Timeout .

bacnet:user-external-identifier a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-user-external-identifier ;
    bacnet:propertyName "user-external-identifier" ;
    bacnet:propertyRef bacnet:User_External_Identifier .

bacnet:user-information-reference a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-user-information-reference ;
    bacnet:propertyName "user-information-reference" ;
    bacnet:propertyRef bacnet:User_Information_Reference .

bacnet:user-name a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-user-name ;
    bacnet:propertyName "user-name" ;
    bacnet:propertyRef bacnet:User_Name .

bacnet:user-type a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-user-type ;
    bacnet:propertyName "user-type" ;
    bacnet:propertyRef bacnet:User_Type .

bacnet:uses-remaining a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-uses-remaining ;
    bacnet:propertyName "uses-remaining" ;
    bacnet:propertyRef bacnet:Uses_Remaining .

bacnet:utc-offset a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-utc-offset ;
    bacnet:propertyName "utc-offset" ;
    bacnet:propertyRef bacnet:UTC_Offset .

bacnet:utc-time-synchronization-recipients a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-utc-time-synchronization-recipients ;
    bacnet:propertyName "utc-time-synchronization-recipients" ;
    bacnet:propertyRef bacnet:UTC_Time_Synchronization_Recipients .

bacnet:valid-days a rdf:Property ;
    rdfs:label "valid-days" .

bacnet:valid-samples a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-valid-samples ;
    bacnet:propertyName "valid-samples" ;
    bacnet:propertyRef bacnet:Valid_Samples .

bacnet:value-before-change a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-value-before-change ;
    bacnet:propertyName "value-before-change" ;
    bacnet:propertyRef bacnet:Value_Before_Change .

bacnet:value-change-time a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-value-change-time ;
    bacnet:propertyName "value-change-time" ;
    bacnet:propertyRef bacnet:Value_Change_Time .

bacnet:value-set a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-value-set ;
    bacnet:propertyName "value-set" ;
    bacnet:propertyRef bacnet:Value_Set .

bacnet:values a rdf:Property ;
    rdfs:label "values" .

bacnet:variance-value a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-variance-value ;
    bacnet:propertyName "variance-value" ;
    bacnet:propertyRef bacnet:Variance_Value .

bacnet:vendor-format a rdf:Property ;
    rdfs:label "vendor-format" .

bacnet:vendor-identifier a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-vendor-identifier ;
    bacnet:propertyName "vendor-identifier" ;
    bacnet:propertyRef bacnet:Vendor_Identifier .

bacnet:vendor-name a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-vendor-name ;
    bacnet:propertyName "vendor-name" ;
    bacnet:propertyRef bacnet:Vendor_Name .

bacnet:verification-time a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-verification-time ;
    bacnet:propertyName "verification-time" ;
    bacnet:propertyRef bacnet:Verification_Time .

bacnet:virtual-mac-address a rdf:Property ;
    rdfs:label "virtual-mac-address" .

bacnet:virtual-mac-address-table a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-virtual-mac-address-table ;
    bacnet:propertyName "virtual-mac-address-table" ;
    bacnet:propertyRef bacnet:Virtual_MAC_Address_Table .

bacnet:vt-classes-supported a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-vt-classes-supported ;
    bacnet:propertyName "vt-classes-supported" ;
    bacnet:propertyRef bacnet:VT_Classes_Supported .

bacnet:week-nday a rdf:Property ;
    rdfs:label "week-nday" .

bacnet:weekly-schedule a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-weekly-schedule ;
    bacnet:propertyName "weekly-schedule" ;
    bacnet:propertyRef bacnet:Weekly_Schedule .

bacnet:window-interval a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-window-interval ;
    bacnet:propertyName "window-interval" ;
    bacnet:propertyRef bacnet:Window_Interval .

bacnet:window-samples a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-window-samples ;
    bacnet:propertyName "window-samples" ;
    bacnet:propertyRef bacnet:Window_Samples .

bacnet:write-success-ful a rdf:Property ;
    rdfs:label "write-success-ful" .

bacnet:zone-from a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-zone-from ;
    bacnet:propertyName "zone-from" ;
    bacnet:propertyRef bacnet:Zone_From .

bacnet:zone-members a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-zone-members ;
    bacnet:propertyName "zone-members" ;
    bacnet:propertyRef bacnet:Zone_Members .

bacnet:zone-occupancy-state a rdf:Property ;
    rdfs:label "zone-occupancy-state" .

bacnet:zone-to a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-zone-to ;
    bacnet:propertyName "zone-to" ;
    bacnet:propertyRef bacnet:Zone_To .

bacnet:APDU_Length a bacnet:Property ;
    bacnet:propertyOf bacnet:NetworkPortObject .

bacnet:APDU_Segment_Timeout a bacnet:Property ;
    bacnet:propertyOf bacnet:DeviceObject .

bacnet:APDU_Timeout a bacnet:Property ;
    bacnet:propertyOf bacnet:DeviceObject .

bacnet:Absentee_Limit a bacnet:Property ;
    bacnet:propertyOf bacnet:AccessCredentialObject .

bacnet:Access_Alarm_Events a bacnet:Property ;
    bacnet:propertyOf bacnet:AccessPointObject .

bacnet:Access_Doors a bacnet:Property ;
    bacnet:propertyOf bacnet:AccessPointObject .

bacnet:Access_Event a bacnet:Property ;
    bacnet:propertyOf bacnet:AccessPointObject .

bacnet:Access_Event_Authentication_Factor a bacnet:Property ;
    bacnet:propertyOf bacnet:AccessPointObject .

bacnet:Access_Event_Credential a bacnet:Property ;
    bacnet:propertyOf bacnet:AccessPointObject .

bacnet:Access_Event_Tag a bacnet:Property ;
    bacnet:propertyOf bacnet:AccessPointObject .

bacnet:Access_Event_Time a bacnet:Property ;
    bacnet:propertyOf bacnet:AccessPointObject .

bacnet:Access_Transaction_Events a bacnet:Property ;
    bacnet:propertyOf bacnet:AccessPointObject .

bacnet:Accompaniment a bacnet:Property ;
    bacnet:propertyOf bacnet:AccessRightsObject .

bacnet:Accompaniment_Time a bacnet:Property ;
    bacnet:propertyOf bacnet:AccessPointObject .

bacnet:Ack_Required a bacnet:Property ;
    bacnet:propertyOf bacnet:NotificationClassObject .

bacnet:Action_Text a bacnet:Property ;
    bacnet:propertyOf bacnet:CommandObject .

bacnet:Activation_Time a bacnet:Property ;
    bacnet:propertyOf bacnet:AccessCredentialObject .

bacnet:Active_Authentication_Policy a bacnet:Property ;
    bacnet:propertyOf bacnet:AccessPointObject .

bacnet:Active_COV_Multiple_Subscriptions a bacnet:Property ;
    bacnet:propertyOf bacnet:DeviceObject .

bacnet:Active_COV_Subscriptions a bacnet:Property ;
    bacnet:propertyOf bacnet:DeviceObject .

bacnet:Active_VT_Sessions a bacnet:Property ;
    bacnet:propertyOf bacnet:DeviceObject .

bacnet:Actual_Shed_Level a bacnet:Property ;
    bacnet:propertyOf bacnet:LoadControlObject .

bacnet:All_Writes_Successful a bacnet:Property ;
    bacnet:propertyOf bacnet:CommandObject .

bacnet:Allow_Group_Delay_Inhibit a bacnet:Property ;
    bacnet:propertyOf bacnet:ChannelObject .

bacnet:Application_Software_Version a bacnet:Property ;
    bacnet:propertyOf bacnet:DeviceObject .

bacnet:Archive a bacnet:Property ;
    bacnet:propertyOf bacnet:FileObject .

bacnet:ArrayOfAccessRule a sh:NodeShape ;
    rdfs:comment "Array Of Access Rule" ;
    rdfs:subClassOf bacnet:Array ;
    sh:property [ sh:node bacnet:AccessRule ;
            sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] .

bacnet:ArrayOfBoolean a sh:NodeShape ;
    rdfs:comment "Array Of Boolean" ;
    rdfs:subClassOf bacnet:Array ;
    sh:property [ sh:datatype xsd:boolean ;
            sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] .

bacnet:ArrayOfOptionalCharacterString a sh:NodeShape ;
    rdfs:comment "Array Of Optional Character String" ;
    rdfs:subClassOf bacnet:Array ;
    sh:property [ sh:node bacnet:OptionalCharacterString ;
            sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] .

bacnet:Assigned_Access_Rights a bacnet:Property ;
    bacnet:propertyOf bacnet:AccessCredentialObject .

bacnet:Assigned_Landing_Calls a bacnet:Property ;
    bacnet:propertyOf bacnet:LiftObject .

bacnet:Attempted_Samples a bacnet:Property ;
    bacnet:propertyOf bacnet:AveragingObject .

bacnet:Audit_Level a bacnet:Property ;
    bacnet:propertyOf bacnet:AuditReporterObject .

bacnet:Audit_Notification_Recipient a bacnet:Property ;
    bacnet:propertyOf bacnet:DeviceObject .

bacnet:Audit_Source_Reporter a bacnet:Property ;
    bacnet:propertyOf bacnet:AuditReporterObject .

bacnet:Auditable_Operations a bacnet:Property ;
    bacnet:propertyOf bacnet:AuditReporterObject .

bacnet:Authentication_Factors a bacnet:Property ;
    bacnet:propertyOf bacnet:AccessCredentialObject .

bacnet:Authentication_Policy_List a bacnet:Property ;
    bacnet:propertyOf bacnet:AccessPointObject .

bacnet:Authentication_Policy_Names a bacnet:Property ;
    bacnet:propertyOf bacnet:AccessPointObject .

bacnet:Authentication_Status a bacnet:Property ;
    bacnet:propertyOf bacnet:AccessPointObject .

bacnet:Authorization_Exemptions a bacnet:Property ;
    bacnet:propertyOf bacnet:AccessCredentialObject .

bacnet:Authorization_Mode a bacnet:Property ;
    bacnet:propertyOf bacnet:AccessPointObject .

bacnet:Average_Value a bacnet:Property ;
    bacnet:propertyOf bacnet:AveragingObject .

bacnet:BACnet_IP_Global_Address a bacnet:Property ;
    bacnet:propertyOf bacnet:NetworkPortObject .

bacnet:BACnet_IP_Mode a bacnet:Property ;
    bacnet:propertyOf bacnet:NetworkPortObject .

bacnet:BACnet_IP_Multicast_Address a bacnet:Property ;
    bacnet:propertyOf bacnet:NetworkPortObject .

bacnet:BACnet_IP_Nat_Traversal a bacnet:Property ;
    bacnet:propertyOf bacnet:NetworkPortObject .

bacnet:BACnet_IP_UDP_Port a bacnet:Property ;
    bacnet:propertyOf bacnet:NetworkPortObject .

bacnet:BACnet_IPv6_Mode a bacnet:Property ;
    bacnet:propertyOf bacnet:NetworkPortObject .

bacnet:BACnet_IPv6_Multicast_Address a bacnet:Property ;
    bacnet:propertyOf bacnet:NetworkPortObject .

bacnet:BACnet_IPv6_UDP_Port a bacnet:Property ;
    bacnet:propertyOf bacnet:NetworkPortObject .

bacnet:BBMD_Accept_FD_Registrations a bacnet:Property ;
    bacnet:propertyOf bacnet:NetworkPortObject .

bacnet:BBMD_Broadcast_Distribution_Table a bacnet:Property ;
    bacnet:propertyOf bacnet:NetworkPortObject .

bacnet:BBMD_Foreign_Device_Table a bacnet:Property ;
    bacnet:propertyOf bacnet:NetworkPortObject .

bacnet:Backup_And_Restore_State a bacnet:Property ;
    bacnet:propertyOf bacnet:DeviceObject .

bacnet:Backup_Failure_Timeout a bacnet:Property ;
    bacnet:propertyOf bacnet:DeviceObject .

bacnet:Backup_Preparation_Time a bacnet:Property ;
    bacnet:propertyOf bacnet:DeviceObject .

bacnet:Base_Device_Security_Policy a bacnet:Property ;
    bacnet:propertyOf bacnet:NetworkSecurityObject .

bacnet:Belongs_To a bacnet:Property ;
    bacnet:propertyOf bacnet:AccessCredentialObject .

bacnet:Bias a bacnet:Property ;
    bacnet:propertyOf bacnet:LoopObject .

bacnet:Bit_Mask a bacnet:Property ;
    bacnet:propertyOf bacnet:BitStringValueObject .

bacnet:Bit_Text a bacnet:Property ;
    bacnet:propertyOf bacnet:BitStringValueObject .

bacnet:COVU_Period a bacnet:Property ;
    bacnet:propertyOf bacnet:GlobalGroupObject .

bacnet:COVU_Recipients a bacnet:Property ;
    bacnet:propertyOf bacnet:GlobalGroupObject .

bacnet:COV_Period a bacnet:Property ;
    bacnet:propertyOf bacnet:PulseConverterObject .

bacnet:Car_Assigned_Direction a bacnet:Property ;
    bacnet:propertyOf bacnet:LiftObject .

bacnet:Car_Door_Command a bacnet:Property ;
    bacnet:propertyOf bacnet:LiftObject .

bacnet:Car_Door_Status a bacnet:Property ;
    bacnet:propertyOf bacnet:LiftObject .

bacnet:Car_Door_Text a bacnet:Property ;
    bacnet:propertyOf bacnet:LiftObject .

bacnet:Car_Door_Zone a bacnet:Property ;
    bacnet:propertyOf bacnet:LiftObject .

bacnet:Car_Drive_Status a bacnet:Property ;
    bacnet:propertyOf bacnet:LiftObject .

bacnet:Car_Load a bacnet:Property ;
    bacnet:propertyOf bacnet:LiftObject .

bacnet:Car_Load_Units a bacnet:Property ;
    bacnet:propertyOf bacnet:LiftObject .

bacnet:Car_Mode a bacnet:Property ;
    bacnet:propertyOf bacnet:LiftObject .

bacnet:Car_Moving_Direction a bacnet:Property ;
    bacnet:propertyOf bacnet:LiftObject .

bacnet:Car_Position a bacnet:Property ;
    bacnet:propertyOf bacnet:LiftObject .

bacnet:Changes_Pending a bacnet:Property ;
    bacnet:propertyOf bacnet:NetworkPortObject .

bacnet:Channel_Number a bacnet:Property ;
    bacnet:propertyOf bacnet:ChannelObject .

bacnet:Command a bacnet:Property ;
    bacnet:propertyOf bacnet:NetworkPortObject .

bacnet:Configuration_Files a bacnet:Property ;
    bacnet:propertyOf bacnet:DeviceObject .

bacnet:Control_Groups a bacnet:Property ;
    bacnet:propertyOf bacnet:ChannelObject .

bacnet:Controlled_Variable_Reference a bacnet:Property ;
    bacnet:propertyOf bacnet:LoopObject .

bacnet:Controlled_Variable_Units a bacnet:Property ;
    bacnet:propertyOf bacnet:LoopObject .

bacnet:Controlled_Variable_Value a bacnet:Property ;
    bacnet:propertyOf bacnet:LoopObject .

bacnet:Count a bacnet:Property ;
    bacnet:propertyOf bacnet:PulseConverterObject .

bacnet:Count_Before_Change a bacnet:Property ;
    bacnet:propertyOf bacnet:PulseConverterObject .

bacnet:Count_Change_Time a bacnet:Property ;
    bacnet:propertyOf bacnet:PulseConverterObject .

bacnet:Credential_Disable a bacnet:Property ;
    bacnet:propertyOf bacnet:AccessCredentialObject .

bacnet:Credential_Status a bacnet:Property ;
    bacnet:propertyOf bacnet:AccessCredentialObject .

bacnet:Credentials a bacnet:Property ;
    bacnet:propertyOf bacnet:AccessUserObject .

bacnet:Credentials_In_Zone a bacnet:Property ;
    bacnet:propertyOf bacnet:AccessZoneObject .

bacnet:Database_Revision a bacnet:Property ;
    bacnet:propertyOf bacnet:DeviceObject .

bacnet:Date_List a bacnet:Property ;
    bacnet:propertyOf bacnet:CalendarObject .

bacnet:Daylight_Savings_Status a bacnet:Property ;
    bacnet:propertyOf bacnet:DeviceObject .

bacnet:Days_Remaining a bacnet:Property ;
    bacnet:propertyOf bacnet:AccessCredentialObject .

bacnet:Default_Fade_Time a bacnet:Property ;
    bacnet:propertyOf bacnet:LightingOutputObject .

bacnet:Default_Present_Value a bacnet:Property ;
    bacnet:propertyOf bacnet:StagingObject .

bacnet:Default_Ramp_Rate a bacnet:Property ;
    bacnet:propertyOf bacnet:LightingOutputObject .

bacnet:Default_Step_Increment a bacnet:Property ;
    bacnet:propertyOf bacnet:LightingOutputObject .

bacnet:Default_Subordinate_Relationship a bacnet:Property ;
    bacnet:propertyOf bacnet:StructuredViewObject .

bacnet:Default_Timeout a bacnet:Property ;
    bacnet:propertyOf bacnet:TimerObject .

bacnet:Delete_On_Forward a bacnet:Property ;
    bacnet:propertyOf bacnet:AuditLogObject .

bacnet:Deployed_Profile_Location a bacnet:Property ;
    bacnet:propertyOf bacnet:DeviceObject .

bacnet:Derivative_Constant a bacnet:Property ;
    bacnet:propertyOf bacnet:LoopObject .

bacnet:Derivative_Constant_Units a bacnet:Property ;
    bacnet:propertyOf bacnet:LoopObject .

bacnet:Description_Of_Halt a bacnet:Property ;
    bacnet:propertyOf bacnet:ProgramObject .

bacnet:Device_Address_Binding a bacnet:Property ;
    bacnet:propertyOf bacnet:DeviceObject .

bacnet:Device_UuiD a bacnet:Property ;
    bacnet:propertyOf bacnet:DeviceObject .

bacnet:Direct_Reading a bacnet:Property ;
    bacnet:propertyOf bacnet:LifeSafetyPointObject .

bacnet:Distribution_Key_Revision a bacnet:Property ;
    bacnet:propertyOf bacnet:NetworkSecurityObject .

bacnet:Do_Not_Hide a bacnet:Property ;
    bacnet:propertyOf bacnet:NetworkSecurityObject .

bacnet:Door_Alarm_State a bacnet:Property ;
    bacnet:propertyOf bacnet:AccessDoorObject .

bacnet:Door_Extended_Pulse_Time a bacnet:Property ;
    bacnet:propertyOf bacnet:AccessDoorObject .

bacnet:Door_Members a bacnet:Property ;
    bacnet:propertyOf bacnet:AccessDoorObject .

bacnet:Door_Open_Too_Long_Time a bacnet:Property ;
    bacnet:propertyOf bacnet:AccessDoorObject .

bacnet:Door_Pulse_Time a bacnet:Property ;
    bacnet:propertyOf bacnet:AccessDoorObject .

bacnet:Door_Status a bacnet:Property ;
    bacnet:propertyOf bacnet:AccessDoorObject .

bacnet:Door_Unlock_Delay_Time a bacnet:Property ;
    bacnet:propertyOf bacnet:AccessDoorObject .

bacnet:Duty_Window a bacnet:Property ;
    bacnet:propertyOf bacnet:LoadControlObject .

bacnet:Effective_Period a bacnet:Property ;
    bacnet:propertyOf bacnet:ScheduleObject .

bacnet:Entry_Points a bacnet:Property ;
    bacnet:propertyOf bacnet:AccessZoneObject .

bacnet:Error_Limit a bacnet:Property ;
    bacnet:propertyOf bacnet:LoopObject .

bacnet:Escalator_Mode a bacnet:Property ;
    bacnet:propertyOf bacnet:EscalatorObject .

bacnet:Event_Parameters a bacnet:Property ;
    bacnet:propertyOf bacnet:EventEnrollmentObject .

bacnet:Event_Type a bacnet:Property ;
    bacnet:propertyOf bacnet:EventEnrollmentObject .

bacnet:Exception_Schedule a bacnet:Property ;
    bacnet:propertyOf bacnet:ScheduleObject .

bacnet:Execution_Delay a bacnet:Property ;
    bacnet:propertyOf bacnet:ChannelObject .

bacnet:Exit_Points a bacnet:Property ;
    bacnet:propertyOf bacnet:AccessZoneObject .

bacnet:Expected_Shed_Level a bacnet:Property ;
    bacnet:propertyOf bacnet:LoadControlObject .

bacnet:Extended_Time_Enable a bacnet:Property ;
    bacnet:propertyOf bacnet:AccessCredentialObject .

bacnet:FD_BBMD_Address a bacnet:Property ;
    bacnet:propertyOf bacnet:NetworkPortObject .

bacnet:FD_Subscription_Lifetime a bacnet:Property ;
    bacnet:propertyOf bacnet:NetworkPortObject .

bacnet:Failed_Attempt_Events a bacnet:Property ;
    bacnet:propertyOf bacnet:AccessPointObject .

bacnet:Failed_Attempts a bacnet:Property ;
    bacnet:propertyOf bacnet:AccessPointObject .

bacnet:Failed_Attempts_Time a bacnet:Property ;
    bacnet:propertyOf bacnet:AccessPointObject .

bacnet:Fault_Parameters a bacnet:Property ;
    bacnet:propertyOf bacnet:EventEnrollmentObject .

bacnet:Fault_Type a bacnet:Property ;
    bacnet:propertyOf bacnet:EventEnrollmentObject .

bacnet:File_Access_Method a bacnet:Property ;
    bacnet:propertyOf bacnet:FileObject .

bacnet:File_Size a bacnet:Property ;
    bacnet:propertyOf bacnet:FileObject .

bacnet:File_Type a bacnet:Property ;
    bacnet:propertyOf bacnet:FileObject .

bacnet:Firmware_Revision a bacnet:Property ;
    bacnet:propertyOf bacnet:DeviceObject .

bacnet:Floor_Text a bacnet:Property ;
    bacnet:propertyOf bacnet:LiftObject .

bacnet:Full_Duty_Baseline a bacnet:Property ;
    bacnet:propertyOf bacnet:LoadControlObject .

bacnet:Group_Member_Names a bacnet:Property ;
    bacnet:propertyOf bacnet:GlobalGroupObject .

bacnet:Group_Mode a bacnet:Property ;
    bacnet:propertyOf bacnet:ElevatorGroupObject .

bacnet:Higher_Deck a bacnet:Property ;
    bacnet:propertyOf bacnet:LiftObject .

bacnet:IP_Address a bacnet:Property ;
    bacnet:propertyOf bacnet:NetworkPortObject .

bacnet:IP_DHCP_Enable a bacnet:Property ;
    bacnet:propertyOf bacnet:NetworkPortObject .

bacnet:IP_DHCP_Lease_Time a bacnet:Property ;
    bacnet:propertyOf bacnet:NetworkPortObject .

bacnet:IP_DHCP_Lease_Time_Remaining a bacnet:Property ;
    bacnet:propertyOf bacnet:NetworkPortObject .

bacnet:IP_DHCP_Server a bacnet:Property ;
    bacnet:propertyOf bacnet:NetworkPortObject .

bacnet:IP_DNS_Server a bacnet:Property ;
    bacnet:propertyOf bacnet:NetworkPortObject .

bacnet:IP_Default_Gateway a bacnet:Property ;
    bacnet:propertyOf bacnet:NetworkPortObject .

bacnet:IP_Subnet_Mask a bacnet:Property ;
    bacnet:propertyOf bacnet:NetworkPortObject .

bacnet:IPv6_Address a bacnet:Property ;
    bacnet:propertyOf bacnet:NetworkPortObject .

bacnet:IPv6_Auto_Addressing_Enabled a bacnet:Property ;
    bacnet:propertyOf bacnet:NetworkPortObject .

bacnet:IPv6_DHCP_Lease_Time a bacnet:Property ;
    bacnet:propertyOf bacnet:NetworkPortObject .

bacnet:IPv6_DHCP_Lease_Time_Remaining a bacnet:Property ;
    bacnet:propertyOf bacnet:NetworkPortObject .

bacnet:IPv6_DHCP_Server a bacnet:Property ;
    bacnet:propertyOf bacnet:NetworkPortObject .

bacnet:IPv6_DNS_Server a bacnet:Property ;
    bacnet:propertyOf bacnet:NetworkPortObject .

bacnet:IPv6_Default_Gateway a bacnet:Property ;
    bacnet:propertyOf bacnet:NetworkPortObject .

bacnet:IPv6_Prefix_Length a bacnet:Property ;
    bacnet:propertyOf bacnet:NetworkPortObject .

bacnet:IPv6_Zone_Index a bacnet:Property ;
    bacnet:propertyOf bacnet:NetworkPortObject .

bacnet:In_Process a bacnet:Property ;
    bacnet:propertyOf bacnet:CommandObject .

bacnet:In_Progress a bacnet:Property ;
    bacnet:propertyOf bacnet:LightingOutputObject .

bacnet:Initial_Timeout a bacnet:Property ;
    bacnet:propertyOf bacnet:TimerObject .

bacnet:Input_Reference a bacnet:Property ;
    bacnet:propertyOf bacnet:PulseConverterObject .

bacnet:Instance_Of a bacnet:Property ;
    bacnet:propertyOf bacnet:ProgramObject .

bacnet:Instantaneous_Power a bacnet:Property ;
    bacnet:propertyOf bacnet:LightingOutputObject .

bacnet:Integral_Constant a bacnet:Property ;
    bacnet:propertyOf bacnet:LoopObject .

bacnet:Integral_Constant_Units a bacnet:Property ;
    bacnet:propertyOf bacnet:LoopObject .

bacnet:Key_Sets a bacnet:Property ;
    bacnet:propertyOf bacnet:NetworkSecurityObject .

bacnet:Landing_Call_Control a bacnet:Property ;
    bacnet:propertyOf bacnet:ElevatorGroupObject .

bacnet:Landing_Calls a bacnet:Property ;
    bacnet:propertyOf bacnet:ElevatorGroupObject .

bacnet:Landing_Door_Status a bacnet:Property ;
    bacnet:propertyOf bacnet:LiftObject .

bacnet:Last_Access_Event a bacnet:Property ;
    bacnet:propertyOf bacnet:AccessCredentialObject .

bacnet:Last_Access_Point a bacnet:Property ;
    bacnet:propertyOf bacnet:AccessCredentialObject .

bacnet:Last_Credential_Added a bacnet:Property ;
    bacnet:propertyOf bacnet:AccessZoneObject .

bacnet:Last_Credential_Added_Time a bacnet:Property ;
    bacnet:propertyOf bacnet:AccessZoneObject .

bacnet:Last_Credential_Removed a bacnet:Property ;
    bacnet:propertyOf bacnet:AccessZoneObject .

bacnet:Last_Credential_Removed_Time a bacnet:Property ;
    bacnet:propertyOf bacnet:AccessZoneObject .

bacnet:Last_Key_Server a bacnet:Property ;
    bacnet:propertyOf bacnet:NetworkSecurityObject .

bacnet:Last_Priority a bacnet:Property ;
    bacnet:propertyOf bacnet:ChannelObject .

bacnet:Last_Restart_Reason a bacnet:Property ;
    bacnet:propertyOf bacnet:DeviceObject .

bacnet:Last_Restore_Time a bacnet:Property ;
    bacnet:propertyOf bacnet:DeviceObject .

bacnet:Last_State_Change a bacnet:Property ;
    bacnet:propertyOf bacnet:TimerObject .

bacnet:Last_Use_Time a bacnet:Property ;
    bacnet:propertyOf bacnet:AccessCredentialObject .

bacnet:Lighting_Command a bacnet:Property ;
    bacnet:propertyOf bacnet:LightingOutputObject .

bacnet:Lighting_Command_Default_Priority a bacnet:Property ;
    bacnet:propertyOf bacnet:LightingOutputObject .

bacnet:Limit_Monitoring_Interval a bacnet:Property ;
    bacnet:propertyOf bacnet:AccumulatorObject .

bacnet:Link_Speed a bacnet:Property ;
    bacnet:propertyOf bacnet:NetworkPortObject .

bacnet:Link_Speed_Autonegotiate a bacnet:Property ;
    bacnet:propertyOf bacnet:NetworkPortObject .

bacnet:Link_Speeds a bacnet:Property ;
    bacnet:propertyOf bacnet:NetworkPortObject .

bacnet:ListOfDestination a sh:NodeShape ;
    rdfs:comment "List Of Destination" ;
    rdfs:subClassOf bacnet:List ;
    sh:property [ sh:node bacnet:Destination ;
            sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] .

bacnet:ListOfDeviceObjectPropertyReference a sh:NodeShape ;
    rdfs:comment "List Of Device Object Property Reference" ;
    rdfs:subClassOf bacnet:List ;
    sh:property [ sh:node bacnet:DeviceObjectPropertyReference ;
            sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] .

bacnet:ListOfLifeSafetyMode a sh:NodeShape ;
    rdfs:comment "List Of Life Safety Mode" ;
    rdfs:subClassOf bacnet:List ;
    sh:property [ sh:datatype xsd:string ;
            sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] .

bacnet:ListOfLiftFault a sh:NodeShape ;
    rdfs:comment "List Of Lift Fault" ;
    rdfs:subClassOf bacnet:List ;
    sh:property [ sh:datatype xsd:string ;
            sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] .

bacnet:List_Of_Group_Members a bacnet:Property ;
    bacnet:propertyOf bacnet:GroupObject .

bacnet:Local_Date a bacnet:Property ;
    bacnet:propertyOf bacnet:DeviceObject .

bacnet:Local_Forwarding_Only a bacnet:Property ;
    bacnet:propertyOf bacnet:NotificationForwarderObject .

bacnet:Local_Time a bacnet:Property ;
    bacnet:propertyOf bacnet:DeviceObject .

bacnet:Location a bacnet:Property ;
    bacnet:propertyOf bacnet:DeviceObject .

bacnet:Lock_Status a bacnet:Property ;
    bacnet:propertyOf bacnet:AccessDoorObject .

bacnet:Lockout a bacnet:Property ;
    bacnet:propertyOf bacnet:AccessPointObject .

bacnet:Lockout_Relinquish_Time a bacnet:Property ;
    bacnet:propertyOf bacnet:AccessPointObject .

bacnet:Logging_Object a bacnet:Property ;
    bacnet:propertyOf bacnet:AccumulatorObject .

bacnet:Logging_Record a bacnet:Property ;
    bacnet:propertyOf bacnet:AccumulatorObject .

bacnet:Low_Diff_Limit a bacnet:Property ;
    bacnet:propertyOf bacnet:LoopObject .

bacnet:Lower_Deck a bacnet:Property ;
    bacnet:propertyOf bacnet:LiftObject .

bacnet:MAC_Address a bacnet:Property ;
    bacnet:propertyOf bacnet:NetworkPortObject .

bacnet:Machine_Room_ID a bacnet:Property ;
    bacnet:propertyOf bacnet:ElevatorGroupObject .

bacnet:Making_Car_Call a bacnet:Property ;
    bacnet:propertyOf bacnet:LiftObject .

bacnet:Manipulated_Variable_Reference a bacnet:Property ;
    bacnet:propertyOf bacnet:LoopObject .

bacnet:Masked_Alarm_Values a bacnet:Property ;
    bacnet:propertyOf bacnet:AccessDoorObject .

bacnet:Max_APDU_Length_Accepted a bacnet:Property ;
    bacnet:propertyOf bacnet:DeviceObject .

bacnet:Max_Actual_Value a bacnet:Property ;
    bacnet:propertyOf bacnet:LightingOutputObject .

bacnet:Max_Failed_Attempts a bacnet:Property ;
    bacnet:propertyOf bacnet:AccessPointObject .

bacnet:Max_Segments_Accepted a bacnet:Property ;
    bacnet:propertyOf bacnet:DeviceObject .

bacnet:Maximum_Output a bacnet:Property ;
    bacnet:propertyOf bacnet:LoopObject .

bacnet:Maximum_Send_Delay a bacnet:Property ;
    bacnet:propertyOf bacnet:AuditReporterObject .

bacnet:Maximum_Value a bacnet:Property ;
    bacnet:propertyOf bacnet:AveragingObject .

bacnet:Maximum_Value_Timestamp a bacnet:Property ;
    bacnet:propertyOf bacnet:AveragingObject .

bacnet:Member_Status_Flags a bacnet:Property ;
    bacnet:propertyOf bacnet:GlobalGroupObject .

bacnet:Members a bacnet:Property ;
    bacnet:propertyOf bacnet:AccessUserObject .

bacnet:Min_Actual_Value a bacnet:Property ;
    bacnet:propertyOf bacnet:LightingOutputObject .

bacnet:Minimum_Output a bacnet:Property ;
    bacnet:propertyOf bacnet:LoopObject .

bacnet:Minimum_Value a bacnet:Property ;
    bacnet:propertyOf bacnet:AveragingObject .

bacnet:Minimum_Value_Timestamp a bacnet:Property ;
    bacnet:propertyOf bacnet:AveragingObject .

bacnet:Model_Name a bacnet:Property ;
    bacnet:propertyOf bacnet:DeviceObject .

bacnet:Modification_Date a bacnet:Property ;
    bacnet:propertyOf bacnet:FileObject .

bacnet:Monitored_Objects a bacnet:Property ;
    bacnet:propertyOf bacnet:AuditReporterObject .

bacnet:Muster_Point a bacnet:Property ;
    bacnet:propertyOf bacnet:AccessPointObject .

bacnet:Negative_Access_Rules a bacnet:Property ;
    bacnet:propertyOf bacnet:AccessRightsObject .

bacnet:Network_Access_Security_Policies a bacnet:Property ;
    bacnet:propertyOf bacnet:NetworkSecurityObject .

bacnet:Network_Interface_Name a bacnet:Property ;
    bacnet:propertyOf bacnet:NetworkPortObject .

bacnet:Network_Number a bacnet:Property ;
    bacnet:propertyOf bacnet:NetworkPortObject .

bacnet:Network_Number_Quality a bacnet:Property ;
    bacnet:propertyOf bacnet:NetworkPortObject .

bacnet:Network_Type a bacnet:Property ;
    bacnet:propertyOf bacnet:NetworkPortObject .

bacnet:Next_Stopping_Floor a bacnet:Property ;
    bacnet:propertyOf bacnet:LiftObject .

bacnet:Node_Subtype a bacnet:Property ;
    bacnet:propertyOf bacnet:StructuredViewObject .

bacnet:Node_Type a bacnet:Property ;
    bacnet:propertyOf bacnet:StructuredViewObject .

bacnet:Number_Of_APDU_Retries a bacnet:Property ;
    bacnet:propertyOf bacnet:DeviceObject .

bacnet:Number_Of_Authentication_Policies a bacnet:Property ;
    bacnet:propertyOf bacnet:AccessPointObject .

bacnet:Object_List a bacnet:Property ;
    bacnet:propertyOf bacnet:DeviceObject .

bacnet:Occupancy_Count a bacnet:Property ;
    bacnet:propertyOf bacnet:AccessZoneObject .

bacnet:Occupancy_Count_Adjust a bacnet:Property ;
    bacnet:propertyOf bacnet:AccessPointObject .

bacnet:Occupancy_Count_Enable a bacnet:Property ;
    bacnet:propertyOf bacnet:AccessZoneObject .

bacnet:Occupancy_Lower_Limit a bacnet:Property ;
    bacnet:propertyOf bacnet:AccessZoneObject .

bacnet:Occupancy_Lower_Limit_Enforced a bacnet:Property ;
    bacnet:propertyOf bacnet:AccessPointObject .

bacnet:Occupancy_State a bacnet:Property ;
    bacnet:propertyOf bacnet:AccessZoneObject .

bacnet:Occupancy_Upper_Limit a bacnet:Property ;
    bacnet:propertyOf bacnet:AccessZoneObject .

bacnet:Occupancy_Upper_Limit_Enforced a bacnet:Property ;
    bacnet:propertyOf bacnet:AccessPointObject .

bacnet:Operation_Direction a bacnet:Property ;
    bacnet:propertyOf bacnet:EscalatorObject .

bacnet:Output_Units a bacnet:Property ;
    bacnet:propertyOf bacnet:LoopObject .

bacnet:Packet_Reorder_Time a bacnet:Property ;
    bacnet:propertyOf bacnet:NetworkSecurityObject .

bacnet:Passback_Mode a bacnet:Property ;
    bacnet:propertyOf bacnet:AccessZoneObject .

bacnet:Passback_Timeout a bacnet:Property ;
    bacnet:propertyOf bacnet:AccessZoneObject .

bacnet:Port_Filter a bacnet:Property ;
    bacnet:propertyOf bacnet:NotificationForwarderObject .

bacnet:Positive_Access_Rules a bacnet:Property ;
    bacnet:propertyOf bacnet:AccessRightsObject .

bacnet:Power_Mode a bacnet:Property ;
    bacnet:propertyOf bacnet:EscalatorObject .

bacnet:Present_Stage a bacnet:Property ;
    bacnet:propertyOf bacnet:StagingObject .

bacnet:Priority a bacnet:Property ;
    bacnet:propertyOf bacnet:NotificationClassObject .

bacnet:Process_Identifier_Filter a bacnet:Property ;
    bacnet:propertyOf bacnet:NotificationForwarderObject .

bacnet:Program_Change a bacnet:Property ;
    bacnet:propertyOf bacnet:ProgramObject .

bacnet:Program_Location a bacnet:Property ;
    bacnet:propertyOf bacnet:ProgramObject .

bacnet:Program_State a bacnet:Property ;
    bacnet:propertyOf bacnet:ProgramObject .

bacnet:PropertyIdentifier-absentee-limit a bacnet:StandardEnumeration ;
    bacnet:enumName "absentee-limit" ;
    bacnet:enumValue "244"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-accepted-modes a bacnet:StandardEnumeration ;
    bacnet:enumName "accepted-modes" ;
    bacnet:enumValue "175"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-access-alarm-events a bacnet:StandardEnumeration ;
    bacnet:enumName "access-alarm-events" ;
    bacnet:enumValue "245"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-access-doors a bacnet:StandardEnumeration ;
    bacnet:enumName "access-doors" ;
    bacnet:enumValue "246"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-access-event a bacnet:StandardEnumeration ;
    bacnet:enumName "access-event" ;
    bacnet:enumValue "247"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-access-event-authentication-factor a bacnet:StandardEnumeration ;
    bacnet:enumName "access-event-authentication-factor" ;
    bacnet:enumValue "248"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-access-event-credential a bacnet:StandardEnumeration ;
    bacnet:enumName "access-event-credential" ;
    bacnet:enumValue "249"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-access-event-tag a bacnet:StandardEnumeration ;
    bacnet:enumName "access-event-tag" ;
    bacnet:enumValue "322"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-access-event-time a bacnet:StandardEnumeration ;
    bacnet:enumName "access-event-time" ;
    bacnet:enumValue "250"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-access-transaction-events a bacnet:StandardEnumeration ;
    bacnet:enumName "access-transaction-events" ;
    bacnet:enumValue "251"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-accompaniment a bacnet:StandardEnumeration ;
    bacnet:enumName "accompaniment" ;
    bacnet:enumValue "252"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-accompaniment-time a bacnet:StandardEnumeration ;
    bacnet:enumName "accompaniment-time" ;
    bacnet:enumValue "253"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-ack-required a bacnet:StandardEnumeration ;
    bacnet:enumName "ack-required" ;
    bacnet:enumValue "1"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-acked-transitions a bacnet:StandardEnumeration ;
    bacnet:enumName "acked-transitions" ;
    bacnet:enumValue "0"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-action a bacnet:StandardEnumeration ;
    bacnet:enumName "action" ;
    bacnet:enumValue "2"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-action-text a bacnet:StandardEnumeration ;
    bacnet:enumName "action-text" ;
    bacnet:enumValue "3"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-activation-time a bacnet:StandardEnumeration ;
    bacnet:enumName "activation-time" ;
    bacnet:enumValue "254"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-active-authentication-policy a bacnet:StandardEnumeration ;
    bacnet:enumName "active-authentication-policy" ;
    bacnet:enumValue "255"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-active-cov-multiple-subscriptions a bacnet:StandardEnumeration ;
    bacnet:enumName "active-cov-multiple-subscriptions" ;
    bacnet:enumValue "481"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-active-cov-subscriptions a bacnet:StandardEnumeration ;
    bacnet:enumName "active-cov-subscriptions" ;
    bacnet:enumValue "152"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-active-text a bacnet:StandardEnumeration ;
    bacnet:enumName "active-text" ;
    bacnet:enumValue "4"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-active-vt-sessions a bacnet:StandardEnumeration ;
    bacnet:enumName "active-vt-sessions" ;
    bacnet:enumValue "5"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-actual-shed-level a bacnet:StandardEnumeration ;
    bacnet:enumName "actual-shed-level" ;
    bacnet:enumValue "212"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-adjust-value a bacnet:StandardEnumeration ;
    bacnet:enumName "adjust-value" ;
    bacnet:enumValue "176"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-alarm-value a bacnet:StandardEnumeration ;
    bacnet:enumName "alarm-value" ;
    bacnet:enumValue "6"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-alarm-values a bacnet:StandardEnumeration ;
    bacnet:enumName "alarm-values" ;
    bacnet:enumValue "7"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-align-intervals a bacnet:StandardEnumeration ;
    bacnet:enumName "align-intervals" ;
    bacnet:enumValue "193"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-all a bacnet:StandardEnumeration ;
    bacnet:enumName "all" ;
    bacnet:enumValue "8"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-all-writes-successful a bacnet:StandardEnumeration ;
    bacnet:enumName "all-writes-successful" ;
    bacnet:enumValue "9"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-allow-group-delay-inhibit a bacnet:StandardEnumeration ;
    bacnet:enumName "allow-group-delay-inhibit" ;
    bacnet:enumValue "365"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-apdu-length a bacnet:StandardEnumeration ;
    bacnet:enumName "apdu-length" ;
    bacnet:enumValue "388"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-apdu-segment-timeout a bacnet:StandardEnumeration ;
    bacnet:enumName "apdu-segment-timeout" ;
    bacnet:enumValue "10"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-apdu-timeout a bacnet:StandardEnumeration ;
    bacnet:enumName "apdu-timeout" ;
    bacnet:enumValue "11"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-application-software-version a bacnet:StandardEnumeration ;
    bacnet:enumName "application-software-version" ;
    bacnet:enumValue "12"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-archive a bacnet:StandardEnumeration ;
    bacnet:enumName "archive" ;
    bacnet:enumValue "13"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-assigned-access-rights a bacnet:StandardEnumeration ;
    bacnet:enumName "assigned-access-rights" ;
    bacnet:enumValue "256"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-assigned-landing-calls a bacnet:StandardEnumeration ;
    bacnet:enumName "assigned-landing-calls" ;
    bacnet:enumValue "447"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-attempted-samples a bacnet:StandardEnumeration ;
    bacnet:enumName "attempted-samples" ;
    bacnet:enumValue "124"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-audit-level a bacnet:StandardEnumeration ;
    bacnet:enumName "audit-level" ;
    bacnet:enumValue "498"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-audit-notification-recipient a bacnet:StandardEnumeration ;
    bacnet:enumName "audit-notification-recipient" ;
    bacnet:enumValue "499"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-audit-source-reporter a bacnet:StandardEnumeration ;
    bacnet:enumName "audit-source-reporter" ;
    bacnet:enumValue "497"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-auditable-operations a bacnet:StandardEnumeration ;
    bacnet:enumName "auditable-operations" ;
    bacnet:enumValue "501"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-auditable-priority-filter a bacnet:StandardEnumeration ;
    bacnet:enumName "auditable-priority-filter" ;
    bacnet:enumValue "500"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-authentication-factors a bacnet:StandardEnumeration ;
    bacnet:enumName "authentication-factors" ;
    bacnet:enumValue "257"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-authentication-policy-list a bacnet:StandardEnumeration ;
    bacnet:enumName "authentication-policy-list" ;
    bacnet:enumValue "258"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-authentication-policy-names a bacnet:StandardEnumeration ;
    bacnet:enumName "authentication-policy-names" ;
    bacnet:enumValue "259"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-authentication-status a bacnet:StandardEnumeration ;
    bacnet:enumName "authentication-status" ;
    bacnet:enumValue "260"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-authorization-exemptions a bacnet:StandardEnumeration ;
    bacnet:enumName "authorization-exemptions" ;
    bacnet:enumValue "364"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-authorization-mode a bacnet:StandardEnumeration ;
    bacnet:enumName "authorization-mode" ;
    bacnet:enumValue "261"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-auto-slave-discovery a bacnet:StandardEnumeration ;
    bacnet:enumName "auto-slave-discovery" ;
    bacnet:enumValue "169"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-average-value a bacnet:StandardEnumeration ;
    bacnet:enumName "average-value" ;
    bacnet:enumValue "125"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-backup-and-restore-state a bacnet:StandardEnumeration ;
    bacnet:enumName "backup-and-restore-state" ;
    bacnet:enumValue "338"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-backup-failure-timeout a bacnet:StandardEnumeration ;
    bacnet:enumName "backup-failure-timeout" ;
    bacnet:enumValue "153"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-backup-preparation-time a bacnet:StandardEnumeration ;
    bacnet:enumName "backup-preparation-time" ;
    bacnet:enumValue "339"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-bacnet-ip-global-address a bacnet:StandardEnumeration ;
    bacnet:enumName "bacnet-ip-global-address" ;
    bacnet:enumValue "407"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-bacnet-ip-mode a bacnet:StandardEnumeration ;
    bacnet:enumName "bacnet-ip-mode" ;
    bacnet:enumValue "408"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-bacnet-ip-multicast-address a bacnet:StandardEnumeration ;
    bacnet:enumName "bacnet-ip-multicast-address" ;
    bacnet:enumValue "409"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-bacnet-ip-nat-traversal a bacnet:StandardEnumeration ;
    bacnet:enumName "bacnet-ip-nat-traversal" ;
    bacnet:enumValue "410"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-bacnet-ip-udp-port a bacnet:StandardEnumeration ;
    bacnet:enumName "bacnet-ip-udp-port" ;
    bacnet:enumValue "412"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-bacnet-ipv6-mode a bacnet:StandardEnumeration ;
    bacnet:enumName "bacnet-ipv6-mode" ;
    bacnet:enumValue "435"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-bacnet-ipv6-multicast-address a bacnet:StandardEnumeration ;
    bacnet:enumName "bacnet-ipv6-multicast-address" ;
    bacnet:enumValue "440"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-bacnet-ipv6-udp-port a bacnet:StandardEnumeration ;
    bacnet:enumName "bacnet-ipv6-udp-port" ;
    bacnet:enumValue "438"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-base-device-security-policy a bacnet:StandardEnumeration ;
    bacnet:enumName "base-device-security-policy" ;
    bacnet:enumValue "327"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-bbmd-accept-fd-registrations a bacnet:StandardEnumeration ;
    bacnet:enumName "bbmd-accept-fd-registrations" ;
    bacnet:enumValue "413"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-bbmd-broadcast-distribution-table a bacnet:StandardEnumeration ;
    bacnet:enumName "bbmd-broadcast-distribution-table" ;
    bacnet:enumValue "414"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-bbmd-foreign-device-table a bacnet:StandardEnumeration ;
    bacnet:enumName "bbmd-foreign-device-table" ;
    bacnet:enumValue "415"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-belongs-to a bacnet:StandardEnumeration ;
    bacnet:enumName "belongs-to" ;
    bacnet:enumValue "262"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-bias a bacnet:StandardEnumeration ;
    bacnet:enumName "bias" ;
    bacnet:enumValue "14"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-bit-mask a bacnet:StandardEnumeration ;
    bacnet:enumName "bit-mask" ;
    bacnet:enumValue "342"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-bit-text a bacnet:StandardEnumeration ;
    bacnet:enumName "bit-text" ;
    bacnet:enumValue "343"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-blink-warn-enable a bacnet:StandardEnumeration ;
    bacnet:enumName "blink-warn-enable" ;
    bacnet:enumValue "373"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-buffer-size a bacnet:StandardEnumeration ;
    bacnet:enumName "buffer-size" ;
    bacnet:enumValue "126"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-car-assigned-direction a bacnet:StandardEnumeration ;
    bacnet:enumName "car-assigned-direction" ;
    bacnet:enumValue "448"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-car-door-command a bacnet:StandardEnumeration ;
    bacnet:enumName "car-door-command" ;
    bacnet:enumValue "449"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-car-door-status a bacnet:StandardEnumeration ;
    bacnet:enumName "car-door-status" ;
    bacnet:enumValue "450"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-car-door-text a bacnet:StandardEnumeration ;
    bacnet:enumName "car-door-text" ;
    bacnet:enumValue "451"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-car-door-zone a bacnet:StandardEnumeration ;
    bacnet:enumName "car-door-zone" ;
    bacnet:enumValue "452"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-car-drive-status a bacnet:StandardEnumeration ;
    bacnet:enumName "car-drive-status" ;
    bacnet:enumValue "453"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-car-load a bacnet:StandardEnumeration ;
    bacnet:enumName "car-load" ;
    bacnet:enumValue "454"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-car-load-units a bacnet:StandardEnumeration ;
    bacnet:enumName "car-load-units" ;
    bacnet:enumValue "455"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-car-mode a bacnet:StandardEnumeration ;
    bacnet:enumName "car-mode" ;
    bacnet:enumValue "456"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-car-moving-direction a bacnet:StandardEnumeration ;
    bacnet:enumName "car-moving-direction" ;
    bacnet:enumValue "457"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-car-position a bacnet:StandardEnumeration ;
    bacnet:enumName "car-position" ;
    bacnet:enumValue "458"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-change-of-state-count a bacnet:StandardEnumeration ;
    bacnet:enumName "change-of-state-count" ;
    bacnet:enumValue "15"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-change-of-state-time a bacnet:StandardEnumeration ;
    bacnet:enumName "change-of-state-time" ;
    bacnet:enumValue "16"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-changes-pending a bacnet:StandardEnumeration ;
    bacnet:enumName "changes-pending" ;
    bacnet:enumValue "416"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-channel-number a bacnet:StandardEnumeration ;
    bacnet:enumName "channel-number" ;
    bacnet:enumValue "366"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-client-cov-increment a bacnet:StandardEnumeration ;
    bacnet:enumName "client-cov-increment" ;
    bacnet:enumValue "127"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-command a bacnet:StandardEnumeration ;
    bacnet:enumName "command" ;
    bacnet:enumValue "417"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-command-time-array a bacnet:StandardEnumeration ;
    bacnet:enumName "command-time-array" ;
    bacnet:enumValue "430"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-configuration-files a bacnet:StandardEnumeration ;
    bacnet:enumName "configuration-files" ;
    bacnet:enumValue "154"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-control-groups a bacnet:StandardEnumeration ;
    bacnet:enumName "control-groups" ;
    bacnet:enumValue "367"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-controlled-variable-reference a bacnet:StandardEnumeration ;
    bacnet:enumName "controlled-variable-reference" ;
    bacnet:enumValue "19"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-controlled-variable-units a bacnet:StandardEnumeration ;
    bacnet:enumName "controlled-variable-units" ;
    bacnet:enumValue "20"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-controlled-variable-value a bacnet:StandardEnumeration ;
    bacnet:enumName "controlled-variable-value" ;
    bacnet:enumValue "21"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-count a bacnet:StandardEnumeration ;
    bacnet:enumName "count" ;
    bacnet:enumValue "177"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-count-before-change a bacnet:StandardEnumeration ;
    bacnet:enumName "count-before-change" ;
    bacnet:enumValue "178"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-count-change-time a bacnet:StandardEnumeration ;
    bacnet:enumName "count-change-time" ;
    bacnet:enumValue "179"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-cov-increment a bacnet:StandardEnumeration ;
    bacnet:enumName "cov-increment" ;
    bacnet:enumValue "22"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-cov-period a bacnet:StandardEnumeration ;
    bacnet:enumName "cov-period" ;
    bacnet:enumValue "180"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-cov-resubscription-interval a bacnet:StandardEnumeration ;
    bacnet:enumName "cov-resubscription-interval" ;
    bacnet:enumValue "128"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-covu-period a bacnet:StandardEnumeration ;
    bacnet:enumName "covu-period" ;
    bacnet:enumValue "349"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-covu-recipients a bacnet:StandardEnumeration ;
    bacnet:enumName "covu-recipients" ;
    bacnet:enumValue "350"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-credential-disable a bacnet:StandardEnumeration ;
    bacnet:enumName "credential-disable" ;
    bacnet:enumValue "263"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-credential-status a bacnet:StandardEnumeration ;
    bacnet:enumName "credential-status" ;
    bacnet:enumValue "264"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-credentials a bacnet:StandardEnumeration ;
    bacnet:enumName "credentials" ;
    bacnet:enumValue "265"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-credentials-in-zone a bacnet:StandardEnumeration ;
    bacnet:enumName "credentials-in-zone" ;
    bacnet:enumValue "266"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-current-command-priority a bacnet:StandardEnumeration ;
    bacnet:enumName "current-command-priority" ;
    bacnet:enumValue "431"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-database-revision a bacnet:StandardEnumeration ;
    bacnet:enumName "database-revision" ;
    bacnet:enumValue "155"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-date-list a bacnet:StandardEnumeration ;
    bacnet:enumName "date-list" ;
    bacnet:enumValue "23"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-daylight-savings-status a bacnet:StandardEnumeration ;
    bacnet:enumName "daylight-savings-status" ;
    bacnet:enumValue "24"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-days-remaining a bacnet:StandardEnumeration ;
    bacnet:enumName "days-remaining" ;
    bacnet:enumValue "267"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-deadband a bacnet:StandardEnumeration ;
    bacnet:enumName "deadband" ;
    bacnet:enumValue "25"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-default-fade-time a bacnet:StandardEnumeration ;
    bacnet:enumName "default-fade-time" ;
    bacnet:enumValue "374"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-default-present-value a bacnet:StandardEnumeration ;
    bacnet:enumName "default-present-value" ;
    bacnet:enumValue "492"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-default-ramp-rate a bacnet:StandardEnumeration ;
    bacnet:enumName "default-ramp-rate" ;
    bacnet:enumValue "375"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-default-step-increment a bacnet:StandardEnumeration ;
    bacnet:enumName "default-step-increment" ;
    bacnet:enumValue "376"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-default-subordinate-relationship a bacnet:StandardEnumeration ;
    bacnet:enumName "default-subordinate-relationship" ;
    bacnet:enumValue "490"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-default-timeout a bacnet:StandardEnumeration ;
    bacnet:enumName "default-timeout" ;
    bacnet:enumValue "393"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-delete-on-forward a bacnet:StandardEnumeration ;
    bacnet:enumName "delete-on-forward" ;
    bacnet:enumValue "502"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-deployed-profile-location a bacnet:StandardEnumeration ;
    bacnet:enumName "deployed-profile-location" ;
    bacnet:enumValue "484"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-derivative-constant a bacnet:StandardEnumeration ;
    bacnet:enumName "derivative-constant" ;
    bacnet:enumValue "26"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-derivative-constant-units a bacnet:StandardEnumeration ;
    bacnet:enumName "derivative-constant-units" ;
    bacnet:enumValue "27"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-description a bacnet:StandardEnumeration ;
    bacnet:enumName "description" ;
    bacnet:enumValue "28"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-description-of-halt a bacnet:StandardEnumeration ;
    bacnet:enumName "description-of-halt" ;
    bacnet:enumValue "29"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-device-address-binding a bacnet:StandardEnumeration ;
    bacnet:enumName "device-address-binding" ;
    bacnet:enumValue "30"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-device-type a bacnet:StandardEnumeration ;
    bacnet:enumName "device-type" ;
    bacnet:enumValue "31"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-device-uuiD a bacnet:StandardEnumeration ;
    bacnet:enumName "device-uuiD" ;
    bacnet:enumValue "507"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-direct-reading a bacnet:StandardEnumeration ;
    bacnet:enumName "direct-reading" ;
    bacnet:enumValue "156"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-distribution-key-revision a bacnet:StandardEnumeration ;
    bacnet:enumName "distribution-key-revision" ;
    bacnet:enumValue "328"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-do-not-hide a bacnet:StandardEnumeration ;
    bacnet:enumName "do-not-hide" ;
    bacnet:enumValue "329"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-door-alarm-state a bacnet:StandardEnumeration ;
    bacnet:enumName "door-alarm-state" ;
    bacnet:enumValue "226"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-door-extended-pulse-time a bacnet:StandardEnumeration ;
    bacnet:enumName "door-extended-pulse-time" ;
    bacnet:enumValue "227"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-door-members a bacnet:StandardEnumeration ;
    bacnet:enumName "door-members" ;
    bacnet:enumValue "228"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-door-open-too-long-time a bacnet:StandardEnumeration ;
    bacnet:enumName "door-open-too-long-time" ;
    bacnet:enumValue "229"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-door-pulse-time a bacnet:StandardEnumeration ;
    bacnet:enumName "door-pulse-time" ;
    bacnet:enumValue "230"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-door-status a bacnet:StandardEnumeration ;
    bacnet:enumName "door-status" ;
    bacnet:enumValue "231"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-door-unlock-delay-time a bacnet:StandardEnumeration ;
    bacnet:enumName "door-unlock-delay-time" ;
    bacnet:enumValue "232"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-duty-window a bacnet:StandardEnumeration ;
    bacnet:enumName "duty-window" ;
    bacnet:enumValue "213"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-effective-period a bacnet:StandardEnumeration ;
    bacnet:enumName "effective-period" ;
    bacnet:enumValue "32"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-egress-active a bacnet:StandardEnumeration ;
    bacnet:enumName "egress-active" ;
    bacnet:enumValue "386"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-egress-time a bacnet:StandardEnumeration ;
    bacnet:enumName "egress-time" ;
    bacnet:enumValue "377"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-elapsed-active-time a bacnet:StandardEnumeration ;
    bacnet:enumName "elapsed-active-time" ;
    bacnet:enumValue "33"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-elevator-group a bacnet:StandardEnumeration ;
    bacnet:enumName "elevator-group" ;
    bacnet:enumValue "459"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-enable a bacnet:StandardEnumeration ;
    bacnet:enumName "enable" ;
    bacnet:enumValue "133"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-energy-meter a bacnet:StandardEnumeration ;
    bacnet:enumName "energy-meter" ;
    bacnet:enumValue "460"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-energy-meter-ref a bacnet:StandardEnumeration ;
    bacnet:enumName "energy-meter-ref" ;
    bacnet:enumValue "461"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-entry-points a bacnet:StandardEnumeration ;
    bacnet:enumName "entry-points" ;
    bacnet:enumValue "268"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-error-limit a bacnet:StandardEnumeration ;
    bacnet:enumName "error-limit" ;
    bacnet:enumValue "34"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-escalator-mode a bacnet:StandardEnumeration ;
    bacnet:enumName "escalator-mode" ;
    bacnet:enumValue "462"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-event-algorithm-inhibit a bacnet:StandardEnumeration ;
    bacnet:enumName "event-algorithm-inhibit" ;
    bacnet:enumValue "354"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-event-algorithm-inhibit-ref a bacnet:StandardEnumeration ;
    bacnet:enumName "event-algorithm-inhibit-ref" ;
    bacnet:enumValue "355"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-event-detection-enable a bacnet:StandardEnumeration ;
    bacnet:enumName "event-detection-enable" ;
    bacnet:enumValue "353"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-event-enable a bacnet:StandardEnumeration ;
    bacnet:enumName "event-enable" ;
    bacnet:enumValue "35"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-event-message-texts a bacnet:StandardEnumeration ;
    bacnet:enumName "event-message-texts" ;
    bacnet:enumValue "351"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-event-message-texts-config a bacnet:StandardEnumeration ;
    bacnet:enumName "event-message-texts-config" ;
    bacnet:enumValue "352"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-event-parameters a bacnet:StandardEnumeration ;
    bacnet:enumName "event-parameters" ;
    bacnet:enumValue "83"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-event-state a bacnet:StandardEnumeration ;
    bacnet:enumName "event-state" ;
    bacnet:enumValue "36"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-event-time-stamps a bacnet:StandardEnumeration ;
    bacnet:enumName "event-time-stamps" ;
    bacnet:enumValue "130"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-event-type a bacnet:StandardEnumeration ;
    bacnet:enumName "event-type" ;
    bacnet:enumValue "37"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-exception-schedule a bacnet:StandardEnumeration ;
    bacnet:enumName "exception-schedule" ;
    bacnet:enumValue "38"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-execution-delay a bacnet:StandardEnumeration ;
    bacnet:enumName "execution-delay" ;
    bacnet:enumValue "368"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-exit-points a bacnet:StandardEnumeration ;
    bacnet:enumName "exit-points" ;
    bacnet:enumValue "269"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-expected-shed-level a bacnet:StandardEnumeration ;
    bacnet:enumName "expected-shed-level" ;
    bacnet:enumValue "214"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-expiration-time a bacnet:StandardEnumeration ;
    bacnet:enumName "expiration-time" ;
    bacnet:enumValue "270"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-extended-time-enable a bacnet:StandardEnumeration ;
    bacnet:enumName "extended-time-enable" ;
    bacnet:enumValue "271"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-failed-attempt-events a bacnet:StandardEnumeration ;
    bacnet:enumName "failed-attempt-events" ;
    bacnet:enumValue "272"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-failed-attempts a bacnet:StandardEnumeration ;
    bacnet:enumName "failed-attempts" ;
    bacnet:enumValue "273"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-failed-attempts-time a bacnet:StandardEnumeration ;
    bacnet:enumName "failed-attempts-time" ;
    bacnet:enumValue "274"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-fault-high-limit a bacnet:StandardEnumeration ;
    bacnet:enumName "fault-high-limit" ;
    bacnet:enumValue "388"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-fault-low-limit a bacnet:StandardEnumeration ;
    bacnet:enumName "fault-low-limit" ;
    bacnet:enumValue "389"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-fault-parameters a bacnet:StandardEnumeration ;
    bacnet:enumName "fault-parameters" ;
    bacnet:enumValue "358"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-fault-signals a bacnet:StandardEnumeration ;
    bacnet:enumName "fault-signals" ;
    bacnet:enumValue "463"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-fault-type a bacnet:StandardEnumeration ;
    bacnet:enumName "fault-type" ;
    bacnet:enumValue "359"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-fault-values a bacnet:StandardEnumeration ;
    bacnet:enumName "fault-values" ;
    bacnet:enumValue "39"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-fd-bbmd-address a bacnet:StandardEnumeration ;
    bacnet:enumName "fd-bbmd-address" ;
    bacnet:enumValue "418"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-fd-subscription-lifetime a bacnet:StandardEnumeration ;
    bacnet:enumName "fd-subscription-lifetime" ;
    bacnet:enumValue "419"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-feedback-value a bacnet:StandardEnumeration ;
    bacnet:enumName "feedback-value" ;
    bacnet:enumValue "40"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-file-access-method a bacnet:StandardEnumeration ;
    bacnet:enumName "file-access-method" ;
    bacnet:enumValue "41"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-file-size a bacnet:StandardEnumeration ;
    bacnet:enumName "file-size" ;
    bacnet:enumValue "42"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-file-type a bacnet:StandardEnumeration ;
    bacnet:enumName "file-type" ;
    bacnet:enumValue "43"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-firmware-revision a bacnet:StandardEnumeration ;
    bacnet:enumName "firmware-revision" ;
    bacnet:enumValue "44"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-floor-number a bacnet:StandardEnumeration ;
    bacnet:enumName "floor-number" ;
    bacnet:enumValue "506"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-floor-text a bacnet:StandardEnumeration ;
    bacnet:enumName "floor-text" ;
    bacnet:enumValue "464"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-full-duty-baseline a bacnet:StandardEnumeration ;
    bacnet:enumName "full-duty-baseline" ;
    bacnet:enumValue "215"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-global-identifier a bacnet:StandardEnumeration ;
    bacnet:enumName "global-identifier" ;
    bacnet:enumValue "323"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-group-iD a bacnet:StandardEnumeration ;
    bacnet:enumName "group-iD" ;
    bacnet:enumValue "465"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-group-member-names a bacnet:StandardEnumeration ;
    bacnet:enumName "group-member-names" ;
    bacnet:enumValue "346"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-group-members a bacnet:StandardEnumeration ;
    bacnet:enumName "group-members" ;
    bacnet:enumValue "345"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-group-mode a bacnet:StandardEnumeration ;
    bacnet:enumName "group-mode" ;
    bacnet:enumValue "467"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-high-limit a bacnet:StandardEnumeration ;
    bacnet:enumName "high-limit" ;
    bacnet:enumValue "45"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-higher-deck a bacnet:StandardEnumeration ;
    bacnet:enumName "higher-deck" ;
    bacnet:enumValue "468"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-in-process a bacnet:StandardEnumeration ;
    bacnet:enumName "in-process" ;
    bacnet:enumValue "47"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-in-progress a bacnet:StandardEnumeration ;
    bacnet:enumName "in-progress" ;
    bacnet:enumValue "378"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-inactive-text a bacnet:StandardEnumeration ;
    bacnet:enumName "inactive-text" ;
    bacnet:enumValue "46"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-initial-timeout a bacnet:StandardEnumeration ;
    bacnet:enumName "initial-timeout" ;
    bacnet:enumValue "394"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-input-reference a bacnet:StandardEnumeration ;
    bacnet:enumName "input-reference" ;
    bacnet:enumValue "181"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-installation-iD a bacnet:StandardEnumeration ;
    bacnet:enumName "installation-iD" ;
    bacnet:enumValue "469"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-instance-of a bacnet:StandardEnumeration ;
    bacnet:enumName "instance-of" ;
    bacnet:enumValue "48"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-instantaneous-power a bacnet:StandardEnumeration ;
    bacnet:enumName "instantaneous-power" ;
    bacnet:enumValue "379"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-integral-constant a bacnet:StandardEnumeration ;
    bacnet:enumName "integral-constant" ;
    bacnet:enumValue "49"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-integral-constant-units a bacnet:StandardEnumeration ;
    bacnet:enumName "integral-constant-units" ;
    bacnet:enumValue "50"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-interface-value a bacnet:StandardEnumeration ;
    bacnet:enumName "interface-value" ;
    bacnet:enumValue "387"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-interval-offset a bacnet:StandardEnumeration ;
    bacnet:enumName "interval-offset" ;
    bacnet:enumValue "195"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-ip-address a bacnet:StandardEnumeration ;
    bacnet:enumName "ip-address" ;
    bacnet:enumValue "400"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-ip-default-gateway a bacnet:StandardEnumeration ;
    bacnet:enumName "ip-default-gateway" ;
    bacnet:enumValue "401"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-ip-dhcp-enable a bacnet:StandardEnumeration ;
    bacnet:enumName "ip-dhcp-enable" ;
    bacnet:enumValue "402"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-ip-dhcp-lease-time a bacnet:StandardEnumeration ;
    bacnet:enumName "ip-dhcp-lease-time" ;
    bacnet:enumValue "403"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-ip-dhcp-lease-time-remaining a bacnet:StandardEnumeration ;
    bacnet:enumName "ip-dhcp-lease-time-remaining" ;
    bacnet:enumValue "404"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-ip-dhcp-server a bacnet:StandardEnumeration ;
    bacnet:enumName "ip-dhcp-server" ;
    bacnet:enumValue "405"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-ip-dns-server a bacnet:StandardEnumeration ;
    bacnet:enumName "ip-dns-server" ;
    bacnet:enumValue "406"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-ip-subnet-mask a bacnet:StandardEnumeration ;
    bacnet:enumName "ip-subnet-mask" ;
    bacnet:enumValue "411"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-ipv6-address a bacnet:StandardEnumeration ;
    bacnet:enumName "ipv6-address" ;
    bacnet:enumValue "436"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-ipv6-auto-addressing-enabled a bacnet:StandardEnumeration ;
    bacnet:enumName "ipv6-auto-addressing-enabled" ;
    bacnet:enumValue "442"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-ipv6-default-gateway a bacnet:StandardEnumeration ;
    bacnet:enumName "ipv6-default-gateway" ;
    bacnet:enumValue "439"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-ipv6-dhcp-lease-time a bacnet:StandardEnumeration ;
    bacnet:enumName "ipv6-dhcp-lease-time" ;
    bacnet:enumValue "443"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-ipv6-dhcp-lease-time-remaining a bacnet:StandardEnumeration ;
    bacnet:enumName "ipv6-dhcp-lease-time-remaining" ;
    bacnet:enumValue "444"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-ipv6-dhcp-server a bacnet:StandardEnumeration ;
    bacnet:enumName "ipv6-dhcp-server" ;
    bacnet:enumValue "445"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-ipv6-dns-server a bacnet:StandardEnumeration ;
    bacnet:enumName "ipv6-dns-server" ;
    bacnet:enumValue "441"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-ipv6-prefix-length a bacnet:StandardEnumeration ;
    bacnet:enumName "ipv6-prefix-length" ;
    bacnet:enumValue "437"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-ipv6-zone-index a bacnet:StandardEnumeration ;
    bacnet:enumName "ipv6-zone-index" ;
    bacnet:enumValue "446"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-is-utc a bacnet:StandardEnumeration ;
    bacnet:enumName "is-utc" ;
    bacnet:enumValue "344"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-issue-confirmed-notifications a bacnet:StandardEnumeration ;
    bacnet:enumName "issue-confirmed-notifications" ;
    bacnet:enumValue "51"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-key-sets a bacnet:StandardEnumeration ;
    bacnet:enumName "key-sets" ;
    bacnet:enumValue "330"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-landing-call-control a bacnet:StandardEnumeration ;
    bacnet:enumName "landing-call-control" ;
    bacnet:enumValue "471"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-landing-calls a bacnet:StandardEnumeration ;
    bacnet:enumName "landing-calls" ;
    bacnet:enumValue "470"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-landing-door-status a bacnet:StandardEnumeration ;
    bacnet:enumName "landing-door-status" ;
    bacnet:enumValue "472"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-last-access-event a bacnet:StandardEnumeration ;
    bacnet:enumName "last-access-event" ;
    bacnet:enumValue "275"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-last-access-point a bacnet:StandardEnumeration ;
    bacnet:enumName "last-access-point" ;
    bacnet:enumValue "276"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-last-command-time a bacnet:StandardEnumeration ;
    bacnet:enumName "last-command-time" ;
    bacnet:enumValue "432"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-last-credential-added a bacnet:StandardEnumeration ;
    bacnet:enumName "last-credential-added" ;
    bacnet:enumValue "277"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-last-credential-added-time a bacnet:StandardEnumeration ;
    bacnet:enumName "last-credential-added-time" ;
    bacnet:enumValue "278"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-last-credential-removed a bacnet:StandardEnumeration ;
    bacnet:enumName "last-credential-removed" ;
    bacnet:enumValue "279"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-last-credential-removed-time a bacnet:StandardEnumeration ;
    bacnet:enumName "last-credential-removed-time" ;
    bacnet:enumValue "280"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-last-key-server a bacnet:StandardEnumeration ;
    bacnet:enumName "last-key-server" ;
    bacnet:enumValue "331"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-last-notify-record a bacnet:StandardEnumeration ;
    bacnet:enumName "last-notify-record" ;
    bacnet:enumValue "173"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-last-priority a bacnet:StandardEnumeration ;
    bacnet:enumName "last-priority" ;
    bacnet:enumValue "369"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-last-restart-reason a bacnet:StandardEnumeration ;
    bacnet:enumName "last-restart-reason" ;
    bacnet:enumValue "196"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-last-restore-time a bacnet:StandardEnumeration ;
    bacnet:enumName "last-restore-time" ;
    bacnet:enumValue "157"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-last-state-change a bacnet:StandardEnumeration ;
    bacnet:enumName "last-state-change" ;
    bacnet:enumValue "395"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-last-use-time a bacnet:StandardEnumeration ;
    bacnet:enumName "last-use-time" ;
    bacnet:enumValue "281"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-life-safety-alarm-values a bacnet:StandardEnumeration ;
    bacnet:enumName "life-safety-alarm-values" ;
    bacnet:enumValue "166"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-lighting-command a bacnet:StandardEnumeration ;
    bacnet:enumName "lighting-command" ;
    bacnet:enumValue "380"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-lighting-command-default-priority a bacnet:StandardEnumeration ;
    bacnet:enumName "lighting-command-default-priority" ;
    bacnet:enumValue "381"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-limit-enable a bacnet:StandardEnumeration ;
    bacnet:enumName "limit-enable" ;
    bacnet:enumValue "52"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-limit-monitoring-interval a bacnet:StandardEnumeration ;
    bacnet:enumName "limit-monitoring-interval" ;
    bacnet:enumValue "182"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-link-speed a bacnet:StandardEnumeration ;
    bacnet:enumName "link-speed" ;
    bacnet:enumValue "420"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-link-speed-autonegotiate a bacnet:StandardEnumeration ;
    bacnet:enumName "link-speed-autonegotiate" ;
    bacnet:enumValue "422"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-link-speeds a bacnet:StandardEnumeration ;
    bacnet:enumName "link-speeds" ;
    bacnet:enumValue "421"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-list-of-group-members a bacnet:StandardEnumeration ;
    bacnet:enumName "list-of-group-members" ;
    bacnet:enumValue "53"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-list-of-object-property-references a bacnet:StandardEnumeration ;
    bacnet:enumName "list-of-object-property-references" ;
    bacnet:enumValue "54"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-list-of-session-keys a bacnet:StandardEnumeration ;
    bacnet:enumName "list-of-session-keys" ;
    bacnet:enumValue "55"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-local-date a bacnet:StandardEnumeration ;
    bacnet:enumName "local-date" ;
    bacnet:enumValue "56"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-local-forwarding-only a bacnet:StandardEnumeration ;
    bacnet:enumName "local-forwarding-only" ;
    bacnet:enumValue "360"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-local-time a bacnet:StandardEnumeration ;
    bacnet:enumName "local-time" ;
    bacnet:enumValue "57"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-location a bacnet:StandardEnumeration ;
    bacnet:enumName "location" ;
    bacnet:enumValue "58"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-lock-status a bacnet:StandardEnumeration ;
    bacnet:enumName "lock-status" ;
    bacnet:enumValue "233"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-lockout a bacnet:StandardEnumeration ;
    bacnet:enumName "lockout" ;
    bacnet:enumValue "282"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-lockout-relinquish-time a bacnet:StandardEnumeration ;
    bacnet:enumName "lockout-relinquish-time" ;
    bacnet:enumValue "283"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-log-buffer a bacnet:StandardEnumeration ;
    bacnet:enumName "log-buffer" ;
    bacnet:enumValue "131"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-log-device-object-property a bacnet:StandardEnumeration ;
    bacnet:enumName "log-device-object-property" ;
    bacnet:enumValue "132"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-log-interval a bacnet:StandardEnumeration ;
    bacnet:enumName "log-interval" ;
    bacnet:enumValue "134"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-logging-object a bacnet:StandardEnumeration ;
    bacnet:enumName "logging-object" ;
    bacnet:enumValue "183"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-logging-record a bacnet:StandardEnumeration ;
    bacnet:enumName "logging-record" ;
    bacnet:enumValue "184"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-logging-type a bacnet:StandardEnumeration ;
    bacnet:enumName "logging-type" ;
    bacnet:enumValue "197"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-low-diff-limit a bacnet:StandardEnumeration ;
    bacnet:enumName "low-diff-limit" ;
    bacnet:enumValue "390"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-low-limit a bacnet:StandardEnumeration ;
    bacnet:enumName "low-limit" ;
    bacnet:enumValue "59"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-lower-deck a bacnet:StandardEnumeration ;
    bacnet:enumName "lower-deck" ;
    bacnet:enumValue "473"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-mac-address a bacnet:StandardEnumeration ;
    bacnet:enumName "mac-address" ;
    bacnet:enumValue "423"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-machine-room-iD a bacnet:StandardEnumeration ;
    bacnet:enumName "machine-room-iD" ;
    bacnet:enumValue "474"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-maintenance-required a bacnet:StandardEnumeration ;
    bacnet:enumName "maintenance-required" ;
    bacnet:enumValue "158"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-making-car-call a bacnet:StandardEnumeration ;
    bacnet:enumName "making-car-call" ;
    bacnet:enumValue "475"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-manipulated-variable-reference a bacnet:StandardEnumeration ;
    bacnet:enumName "manipulated-variable-reference" ;
    bacnet:enumValue "60"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-manual-slave-address-binding a bacnet:StandardEnumeration ;
    bacnet:enumName "manual-slave-address-binding" ;
    bacnet:enumValue "170"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-masked-alarm-values a bacnet:StandardEnumeration ;
    bacnet:enumName "masked-alarm-values" ;
    bacnet:enumValue "234"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-master-exemption a bacnet:StandardEnumeration ;
    bacnet:enumName "master-exemption" ;
    bacnet:enumValue "284"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-max-actual-value a bacnet:StandardEnumeration ;
    bacnet:enumName "max-actual-value" ;
    bacnet:enumValue "382"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-max-apdu-length-accepted a bacnet:StandardEnumeration ;
    bacnet:enumName "max-apdu-length-accepted" ;
    bacnet:enumValue "62"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-max-failed-attempts a bacnet:StandardEnumeration ;
    bacnet:enumName "max-failed-attempts" ;
    bacnet:enumValue "285"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-max-info-frames a bacnet:StandardEnumeration ;
    bacnet:enumName "max-info-frames" ;
    bacnet:enumValue "63"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-max-master a bacnet:StandardEnumeration ;
    bacnet:enumName "max-master" ;
    bacnet:enumValue "64"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-max-pres-value a bacnet:StandardEnumeration ;
    bacnet:enumName "max-pres-value" ;
    bacnet:enumValue "65"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-max-segments-accepted a bacnet:StandardEnumeration ;
    bacnet:enumName "max-segments-accepted" ;
    bacnet:enumValue "167"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-maximum-output a bacnet:StandardEnumeration ;
    bacnet:enumName "maximum-output" ;
    bacnet:enumValue "61"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-maximum-send-delay a bacnet:StandardEnumeration ;
    bacnet:enumName "maximum-send-delay" ;
    bacnet:enumValue "503"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-maximum-value a bacnet:StandardEnumeration ;
    bacnet:enumName "maximum-value" ;
    bacnet:enumValue "135"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-maximum-value-timestamp a bacnet:StandardEnumeration ;
    bacnet:enumName "maximum-value-timestamp" ;
    bacnet:enumValue "149"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-member-of a bacnet:StandardEnumeration ;
    bacnet:enumName "member-of" ;
    bacnet:enumValue "159"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-member-status-flags a bacnet:StandardEnumeration ;
    bacnet:enumName "member-status-flags" ;
    bacnet:enumValue "347"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-members a bacnet:StandardEnumeration ;
    bacnet:enumName "members" ;
    bacnet:enumValue "286"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-min-actual-value a bacnet:StandardEnumeration ;
    bacnet:enumName "min-actual-value" ;
    bacnet:enumValue "383"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-min-pres-value a bacnet:StandardEnumeration ;
    bacnet:enumName "min-pres-value" ;
    bacnet:enumValue "69"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-minimum-off-time a bacnet:StandardEnumeration ;
    bacnet:enumName "minimum-off-time" ;
    bacnet:enumValue "66"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-minimum-on-time a bacnet:StandardEnumeration ;
    bacnet:enumName "minimum-on-time" ;
    bacnet:enumValue "67"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-minimum-output a bacnet:StandardEnumeration ;
    bacnet:enumName "minimum-output" ;
    bacnet:enumValue "68"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-minimum-value a bacnet:StandardEnumeration ;
    bacnet:enumName "minimum-value" ;
    bacnet:enumValue "136"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-minimum-value-timestamp a bacnet:StandardEnumeration ;
    bacnet:enumName "minimum-value-timestamp" ;
    bacnet:enumValue "150"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-mode a bacnet:StandardEnumeration ;
    bacnet:enumName "mode" ;
    bacnet:enumValue "160"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-model-name a bacnet:StandardEnumeration ;
    bacnet:enumName "model-name" ;
    bacnet:enumValue "70"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-modification-date a bacnet:StandardEnumeration ;
    bacnet:enumName "modification-date" ;
    bacnet:enumValue "71"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-monitored-objects a bacnet:StandardEnumeration ;
    bacnet:enumName "monitored-objects" ;
    bacnet:enumValue "504"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-muster-point a bacnet:StandardEnumeration ;
    bacnet:enumName "muster-point" ;
    bacnet:enumValue "287"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-negative-access-rules a bacnet:StandardEnumeration ;
    bacnet:enumName "negative-access-rules" ;
    bacnet:enumValue "288"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-network-access-security-policies a bacnet:StandardEnumeration ;
    bacnet:enumName "network-access-security-policies" ;
    bacnet:enumValue "332"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-network-interface-name a bacnet:StandardEnumeration ;
    bacnet:enumName "network-interface-name" ;
    bacnet:enumValue "424"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-network-number a bacnet:StandardEnumeration ;
    bacnet:enumName "network-number" ;
    bacnet:enumValue "425"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-network-number-quality a bacnet:StandardEnumeration ;
    bacnet:enumName "network-number-quality" ;
    bacnet:enumValue "427"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-network-type a bacnet:StandardEnumeration ;
    bacnet:enumName "network-type" ;
    bacnet:enumValue "427"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-next-stopping-floor a bacnet:StandardEnumeration ;
    bacnet:enumName "next-stopping-floor" ;
    bacnet:enumValue "476"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-node-subtype a bacnet:StandardEnumeration ;
    bacnet:enumName "node-subtype" ;
    bacnet:enumValue "207"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-node-type a bacnet:StandardEnumeration ;
    bacnet:enumName "node-type" ;
    bacnet:enumValue "208"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-notification-class a bacnet:StandardEnumeration ;
    bacnet:enumName "notification-class" ;
    bacnet:enumValue "17"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-notification-threshold a bacnet:StandardEnumeration ;
    bacnet:enumName "notification-threshold" ;
    bacnet:enumValue "137"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-notify-type a bacnet:StandardEnumeration ;
    bacnet:enumName "notify-type" ;
    bacnet:enumValue "72"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-number-of-apdu-retries a bacnet:StandardEnumeration ;
    bacnet:enumName "number-of-apdu-retries" ;
    bacnet:enumValue "73"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-number-of-authentication-policies a bacnet:StandardEnumeration ;
    bacnet:enumName "number-of-authentication-policies" ;
    bacnet:enumValue "289"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-number-of-states a bacnet:StandardEnumeration ;
    bacnet:enumName "number-of-states" ;
    bacnet:enumValue "74"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-object-identifier a bacnet:StandardEnumeration ;
    bacnet:enumName "object-identifier" ;
    bacnet:enumValue "75"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-object-list a bacnet:StandardEnumeration ;
    bacnet:enumName "object-list" ;
    bacnet:enumValue "76"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-object-name a bacnet:StandardEnumeration ;
    bacnet:enumName "object-name" ;
    bacnet:enumValue "77"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-object-property-reference a bacnet:StandardEnumeration ;
    bacnet:enumName "object-property-reference" ;
    bacnet:enumValue "78"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-object-type a bacnet:StandardEnumeration ;
    bacnet:enumName "object-type" ;
    bacnet:enumValue "79"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-occupancy-count a bacnet:StandardEnumeration ;
    bacnet:enumName "occupancy-count" ;
    bacnet:enumValue "290"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-occupancy-count-adjust a bacnet:StandardEnumeration ;
    bacnet:enumName "occupancy-count-adjust" ;
    bacnet:enumValue "291"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-occupancy-count-enable a bacnet:StandardEnumeration ;
    bacnet:enumName "occupancy-count-enable" ;
    bacnet:enumValue "292"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-occupancy-exemption a bacnet:StandardEnumeration ;
    bacnet:enumName "occupancy-exemption" ;
    bacnet:enumValue "293"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-occupancy-lower-limit a bacnet:StandardEnumeration ;
    bacnet:enumName "occupancy-lower-limit" ;
    bacnet:enumValue "294"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-occupancy-lower-limit-enforced a bacnet:StandardEnumeration ;
    bacnet:enumName "occupancy-lower-limit-enforced" ;
    bacnet:enumValue "295"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-occupancy-state a bacnet:StandardEnumeration ;
    bacnet:enumName "occupancy-state" ;
    bacnet:enumValue "296"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-occupancy-upper-limit a bacnet:StandardEnumeration ;
    bacnet:enumName "occupancy-upper-limit" ;
    bacnet:enumValue "297"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-occupancy-upper-limit-enforced a bacnet:StandardEnumeration ;
    bacnet:enumName "occupancy-upper-limit-enforced" ;
    bacnet:enumValue "298"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-operation-direction a bacnet:StandardEnumeration ;
    bacnet:enumName "operation-direction" ;
    bacnet:enumValue "477"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-operation-expected a bacnet:StandardEnumeration ;
    bacnet:enumName "operation-expected" ;
    bacnet:enumValue "161"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-optional a bacnet:StandardEnumeration ;
    bacnet:enumName "optional" ;
    bacnet:enumValue "80"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-out-of-service a bacnet:StandardEnumeration ;
    bacnet:enumName "out-of-service" ;
    bacnet:enumValue "81"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-output-units a bacnet:StandardEnumeration ;
    bacnet:enumName "output-units" ;
    bacnet:enumValue "82"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-packet-reorder-time a bacnet:StandardEnumeration ;
    bacnet:enumName "packet-reorder-time" ;
    bacnet:enumValue "333"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-passback-exemption a bacnet:StandardEnumeration ;
    bacnet:enumName "passback-exemption" ;
    bacnet:enumValue "299"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-passback-mode a bacnet:StandardEnumeration ;
    bacnet:enumName "passback-mode" ;
    bacnet:enumValue "300"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-passback-timeout a bacnet:StandardEnumeration ;
    bacnet:enumName "passback-timeout" ;
    bacnet:enumValue "301"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-passenger-alarm a bacnet:StandardEnumeration ;
    bacnet:enumName "passenger-alarm" ;
    bacnet:enumValue "478"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-polarity a bacnet:StandardEnumeration ;
    bacnet:enumName "polarity" ;
    bacnet:enumValue "84"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-port-filter a bacnet:StandardEnumeration ;
    bacnet:enumName "port-filter" ;
    bacnet:enumValue "363"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-positive-access-rules a bacnet:StandardEnumeration ;
    bacnet:enumName "positive-access-rules" ;
    bacnet:enumValue "302"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-power a bacnet:StandardEnumeration ;
    bacnet:enumName "power" ;
    bacnet:enumValue "384"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-power-mode a bacnet:StandardEnumeration ;
    bacnet:enumName "power-mode" ;
    bacnet:enumValue "479"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-prescale a bacnet:StandardEnumeration ;
    bacnet:enumName "prescale" ;
    bacnet:enumValue "185"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-present-stage a bacnet:StandardEnumeration ;
    bacnet:enumName "present-stage" ;
    bacnet:enumValue "493"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-present-value a bacnet:StandardEnumeration ;
    bacnet:enumName "present-value" ;
    bacnet:enumValue "85"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-priority a bacnet:StandardEnumeration ;
    bacnet:enumName "priority" ;
    bacnet:enumValue "86"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-priority-array a bacnet:StandardEnumeration ;
    bacnet:enumName "priority-array" ;
    bacnet:enumValue "87"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-priority-for-writing a bacnet:StandardEnumeration ;
    bacnet:enumName "priority-for-writing" ;
    bacnet:enumValue "88"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-process-identifier a bacnet:StandardEnumeration ;
    bacnet:enumName "process-identifier" ;
    bacnet:enumValue "89"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-process-identifier-filter a bacnet:StandardEnumeration ;
    bacnet:enumName "process-identifier-filter" ;
    bacnet:enumValue "361"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-profile-location a bacnet:StandardEnumeration ;
    bacnet:enumName "profile-location" ;
    bacnet:enumValue "91"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-profile-name a bacnet:StandardEnumeration ;
    bacnet:enumName "profile-name" ;
    bacnet:enumValue "168"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-program-change a bacnet:StandardEnumeration ;
    bacnet:enumName "program-change" ;
    bacnet:enumValue "90"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-program-location a bacnet:StandardEnumeration ;
    bacnet:enumName "program-location" ;
    bacnet:enumValue "91"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-program-state a bacnet:StandardEnumeration ;
    bacnet:enumName "program-state" ;
    bacnet:enumValue "92"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-property-list a bacnet:StandardEnumeration ;
    bacnet:enumName "property-list" ;
    bacnet:enumValue "371"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-proportional-constant a bacnet:StandardEnumeration ;
    bacnet:enumName "proportional-constant" ;
    bacnet:enumValue "93"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-proportional-constant-units a bacnet:StandardEnumeration ;
    bacnet:enumName "proportional-constant-units" ;
    bacnet:enumValue "94"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-protocol-level a bacnet:StandardEnumeration ;
    bacnet:enumName "protocol-level" ;
    bacnet:enumValue "482"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-protocol-object-types-supported a bacnet:StandardEnumeration ;
    bacnet:enumName "protocol-object-types-supported" ;
    bacnet:enumValue "96"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-protocol-revision a bacnet:StandardEnumeration ;
    bacnet:enumName "protocol-revision" ;
    bacnet:enumValue "139"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-protocol-services-supported a bacnet:StandardEnumeration ;
    bacnet:enumName "protocol-services-supported" ;
    bacnet:enumValue "97"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-protocol-version a bacnet:StandardEnumeration ;
    bacnet:enumName "protocol-version" ;
    bacnet:enumValue "98"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-pulse-rate a bacnet:StandardEnumeration ;
    bacnet:enumName "pulse-rate" ;
    bacnet:enumValue "186"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-read-only a bacnet:StandardEnumeration ;
    bacnet:enumName "read-only" ;
    bacnet:enumValue "99"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-reason-for-disable a bacnet:StandardEnumeration ;
    bacnet:enumName "reason-for-disable" ;
    bacnet:enumValue "303"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-reason-for-halt a bacnet:StandardEnumeration ;
    bacnet:enumName "reason-for-halt" ;
    bacnet:enumValue "100"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-recipient-list a bacnet:StandardEnumeration ;
    bacnet:enumName "recipient-list" ;
    bacnet:enumValue "102"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-record-count a bacnet:StandardEnumeration ;
    bacnet:enumName "record-count" ;
    bacnet:enumValue "141"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-records-since-notification a bacnet:StandardEnumeration ;
    bacnet:enumName "records-since-notification" ;
    bacnet:enumValue "140"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-reference-port a bacnet:StandardEnumeration ;
    bacnet:enumName "reference-port" ;
    bacnet:enumValue "483"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-registered-car-call a bacnet:StandardEnumeration ;
    bacnet:enumName "registered-car-call" ;
    bacnet:enumValue "480"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-reliability a bacnet:StandardEnumeration ;
    bacnet:enumName "reliability" ;
    bacnet:enumValue "103"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-reliability-evaluation-inhibit a bacnet:StandardEnumeration ;
    bacnet:enumName "reliability-evaluation-inhibit" ;
    bacnet:enumValue "357"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-relinquish-default a bacnet:StandardEnumeration ;
    bacnet:enumName "relinquish-default" ;
    bacnet:enumValue "104"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-represents a bacnet:StandardEnumeration ;
    bacnet:enumName "represents" ;
    bacnet:enumValue "491"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-requested-shed-level a bacnet:StandardEnumeration ;
    bacnet:enumName "requested-shed-level" ;
    bacnet:enumValue "218"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-requested-update-interval a bacnet:StandardEnumeration ;
    bacnet:enumName "requested-update-interval" ;
    bacnet:enumValue "348"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-required a bacnet:StandardEnumeration ;
    bacnet:enumName "required" ;
    bacnet:enumValue "105"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-resolution a bacnet:StandardEnumeration ;
    bacnet:enumName "resolution" ;
    bacnet:enumValue "106"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-restart-notification-recipients a bacnet:StandardEnumeration ;
    bacnet:enumName "restart-notification-recipients" ;
    bacnet:enumValue "202"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-restore-completion-time a bacnet:StandardEnumeration ;
    bacnet:enumName "restore-completion-time" ;
    bacnet:enumValue "340"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-restore-preparation-time a bacnet:StandardEnumeration ;
    bacnet:enumName "restore-preparation-time" ;
    bacnet:enumValue "341"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-routing-table a bacnet:StandardEnumeration ;
    bacnet:enumName "routing-table" ;
    bacnet:enumValue "428"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-scale a bacnet:StandardEnumeration ;
    bacnet:enumName "scale" ;
    bacnet:enumValue "187"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-scale-factor a bacnet:StandardEnumeration ;
    bacnet:enumName "scale-factor" ;
    bacnet:enumValue "188"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-schedule-default a bacnet:StandardEnumeration ;
    bacnet:enumName "schedule-default" ;
    bacnet:enumValue "174"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-secured-status a bacnet:StandardEnumeration ;
    bacnet:enumName "secured-status" ;
    bacnet:enumValue "235"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-security-pdu-timeout a bacnet:StandardEnumeration ;
    bacnet:enumName "security-pdu-timeout" ;
    bacnet:enumValue "334"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-security-time-window a bacnet:StandardEnumeration ;
    bacnet:enumName "security-time-window" ;
    bacnet:enumValue "335"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-segmentation-supported a bacnet:StandardEnumeration ;
    bacnet:enumName "segmentation-supported" ;
    bacnet:enumValue "107"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-send-now a bacnet:StandardEnumeration ;
    bacnet:enumName "send-now" ;
    bacnet:enumValue "505"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-serial-number a bacnet:StandardEnumeration ;
    bacnet:enumName "serial-number" ;
    bacnet:enumValue "372"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-setpoint a bacnet:StandardEnumeration ;
    bacnet:enumName "setpoint" ;
    bacnet:enumValue "108"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-setpoint-reference a bacnet:StandardEnumeration ;
    bacnet:enumName "setpoint-reference" ;
    bacnet:enumValue "109"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-setting a bacnet:StandardEnumeration ;
    bacnet:enumName "setting" ;
    bacnet:enumValue "162"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-shed-duration a bacnet:StandardEnumeration ;
    bacnet:enumName "shed-duration" ;
    bacnet:enumValue "219"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-shed-level-descriptions a bacnet:StandardEnumeration ;
    bacnet:enumName "shed-level-descriptions" ;
    bacnet:enumValue "220"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-shed-levels a bacnet:StandardEnumeration ;
    bacnet:enumName "shed-levels" ;
    bacnet:enumValue "221"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-silenced a bacnet:StandardEnumeration ;
    bacnet:enumName "silenced" ;
    bacnet:enumValue "163"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-slave-address-binding a bacnet:StandardEnumeration ;
    bacnet:enumName "slave-address-binding" ;
    bacnet:enumValue "171"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-slave-proxy-enable a bacnet:StandardEnumeration ;
    bacnet:enumName "slave-proxy-enable" ;
    bacnet:enumValue "172"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-stage-names a bacnet:StandardEnumeration ;
    bacnet:enumName "stage-names" ;
    bacnet:enumValue "495"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-stages a bacnet:StandardEnumeration ;
    bacnet:enumName "stages" ;
    bacnet:enumValue "494"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-start-time a bacnet:StandardEnumeration ;
    bacnet:enumName "start-time" ;
    bacnet:enumValue "142"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-state-change-values a bacnet:StandardEnumeration ;
    bacnet:enumName "state-change-values" ;
    bacnet:enumValue "396"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-state-description a bacnet:StandardEnumeration ;
    bacnet:enumName "state-description" ;
    bacnet:enumValue "222"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-state-text a bacnet:StandardEnumeration ;
    bacnet:enumName "state-text" ;
    bacnet:enumValue "110"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-status-flags a bacnet:StandardEnumeration ;
    bacnet:enumName "status-flags" ;
    bacnet:enumValue "111"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-stop-time a bacnet:StandardEnumeration ;
    bacnet:enumName "stop-time" ;
    bacnet:enumValue "143"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-stop-when-full a bacnet:StandardEnumeration ;
    bacnet:enumName "stop-when-full" ;
    bacnet:enumValue "144"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-strike-count a bacnet:StandardEnumeration ;
    bacnet:enumName "strike-count" ;
    bacnet:enumValue "391"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-structured-object-list a bacnet:StandardEnumeration ;
    bacnet:enumName "structured-object-list" ;
    bacnet:enumValue "209"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-subordinate-annotations a bacnet:StandardEnumeration ;
    bacnet:enumName "subordinate-annotations" ;
    bacnet:enumValue "210"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-subordinate-list a bacnet:StandardEnumeration ;
    bacnet:enumName "subordinate-list" ;
    bacnet:enumValue "211"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-subordinate-node-types a bacnet:StandardEnumeration ;
    bacnet:enumName "subordinate-node-types" ;
    bacnet:enumValue "487"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-subordinate-relationships a bacnet:StandardEnumeration ;
    bacnet:enumName "subordinate-relationships" ;
    bacnet:enumValue "489"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-subordinate-tags a bacnet:StandardEnumeration ;
    bacnet:enumName "subordinate-tags" ;
    bacnet:enumValue "488"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-subscribed-recipients a bacnet:StandardEnumeration ;
    bacnet:enumName "subscribed-recipients" ;
    bacnet:enumValue "362"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-supported-format-classes a bacnet:StandardEnumeration ;
    bacnet:enumName "supported-format-classes" ;
    bacnet:enumValue "305"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-supported-formats a bacnet:StandardEnumeration ;
    bacnet:enumName "supported-formats" ;
    bacnet:enumValue "304"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-supported-security-algorithms a bacnet:StandardEnumeration ;
    bacnet:enumName "supported-security-algorithms" ;
    bacnet:enumValue "336"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-system-status a bacnet:StandardEnumeration ;
    bacnet:enumName "system-status" ;
    bacnet:enumValue "112"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-tags a bacnet:StandardEnumeration ;
    bacnet:enumName "tags" ;
    bacnet:enumValue "486"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-target-references a bacnet:StandardEnumeration ;
    bacnet:enumName "target-references" ;
    bacnet:enumValue "496"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-threat-authority a bacnet:StandardEnumeration ;
    bacnet:enumName "threat-authority" ;
    bacnet:enumValue "306"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-threat-level a bacnet:StandardEnumeration ;
    bacnet:enumName "threat-level" ;
    bacnet:enumValue "307"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-time-delay a bacnet:StandardEnumeration ;
    bacnet:enumName "time-delay" ;
    bacnet:enumValue "113"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-time-delay-normal a bacnet:StandardEnumeration ;
    bacnet:enumName "time-delay-normal" ;
    bacnet:enumValue "356"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-time-of-active-time-reset a bacnet:StandardEnumeration ;
    bacnet:enumName "time-of-active-time-reset" ;
    bacnet:enumValue "114"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-time-of-device-restart a bacnet:StandardEnumeration ;
    bacnet:enumName "time-of-device-restart" ;
    bacnet:enumValue "203"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-time-of-state-count-reset a bacnet:StandardEnumeration ;
    bacnet:enumName "time-of-state-count-reset" ;
    bacnet:enumValue "115"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-time-of-strike-count-reset a bacnet:StandardEnumeration ;
    bacnet:enumName "time-of-strike-count-reset" ;
    bacnet:enumValue "392"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-time-synchronization-interval a bacnet:StandardEnumeration ;
    bacnet:enumName "time-synchronization-interval" ;
    bacnet:enumValue "204"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-time-synchronization-recipients a bacnet:StandardEnumeration ;
    bacnet:enumName "time-synchronization-recipients" ;
    bacnet:enumValue "116"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-timer-running a bacnet:StandardEnumeration ;
    bacnet:enumName "timer-running" ;
    bacnet:enumValue "397"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-timer-state a bacnet:StandardEnumeration ;
    bacnet:enumName "timer-state" ;
    bacnet:enumValue "398"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-total-record-count a bacnet:StandardEnumeration ;
    bacnet:enumName "total-record-count" ;
    bacnet:enumValue "145"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-trace-flag a bacnet:StandardEnumeration ;
    bacnet:enumName "trace-flag" ;
    bacnet:enumValue "308"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-tracking-value a bacnet:StandardEnumeration ;
    bacnet:enumName "tracking-value" ;
    bacnet:enumValue "164"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-transaction-notification-class a bacnet:StandardEnumeration ;
    bacnet:enumName "transaction-notification-class" ;
    bacnet:enumValue "309"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-transition a bacnet:StandardEnumeration ;
    bacnet:enumName "transition" ;
    bacnet:enumValue "385"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-trigger a bacnet:StandardEnumeration ;
    bacnet:enumName "trigger" ;
    bacnet:enumValue "205"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-units a bacnet:StandardEnumeration ;
    bacnet:enumName "units" ;
    bacnet:enumValue "117"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-update-interval a bacnet:StandardEnumeration ;
    bacnet:enumName "update-interval" ;
    bacnet:enumValue "118"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-update-key-set-timeout a bacnet:StandardEnumeration ;
    bacnet:enumName "update-key-set-timeout" ;
    bacnet:enumValue "337"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-update-time a bacnet:StandardEnumeration ;
    bacnet:enumName "update-time" ;
    bacnet:enumValue "189"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-user-external-identifier a bacnet:StandardEnumeration ;
    bacnet:enumName "user-external-identifier" ;
    bacnet:enumValue "310"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-user-information-reference a bacnet:StandardEnumeration ;
    bacnet:enumName "user-information-reference" ;
    bacnet:enumValue "311"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-user-name a bacnet:StandardEnumeration ;
    bacnet:enumName "user-name" ;
    bacnet:enumValue "317"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-user-type a bacnet:StandardEnumeration ;
    bacnet:enumName "user-type" ;
    bacnet:enumValue "318"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-uses-remaining a bacnet:StandardEnumeration ;
    bacnet:enumName "uses-remaining" ;
    bacnet:enumValue "319"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-utc-offset a bacnet:StandardEnumeration ;
    bacnet:enumName "utc-offset" ;
    bacnet:enumValue "119"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-utc-time-synchronization-recipients a bacnet:StandardEnumeration ;
    bacnet:enumName "utc-time-synchronization-recipients" ;
    bacnet:enumValue "206"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-valid-samples a bacnet:StandardEnumeration ;
    bacnet:enumName "valid-samples" ;
    bacnet:enumValue "146"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-value-before-change a bacnet:StandardEnumeration ;
    bacnet:enumName "value-before-change" ;
    bacnet:enumValue "190"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-value-change-time a bacnet:StandardEnumeration ;
    bacnet:enumName "value-change-time" ;
    bacnet:enumValue "192"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-value-set a bacnet:StandardEnumeration ;
    bacnet:enumName "value-set" ;
    bacnet:enumValue "191"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-value-source a bacnet:StandardEnumeration ;
    bacnet:enumName "value-source" ;
    bacnet:enumValue "433"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-value-source-array a bacnet:StandardEnumeration ;
    bacnet:enumName "value-source-array" ;
    bacnet:enumValue "434"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-variance-value a bacnet:StandardEnumeration ;
    bacnet:enumName "variance-value" ;
    bacnet:enumValue "151"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-vendor-identifier a bacnet:StandardEnumeration ;
    bacnet:enumName "vendor-identifier" ;
    bacnet:enumValue "120"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-vendor-name a bacnet:StandardEnumeration ;
    bacnet:enumName "vendor-name" ;
    bacnet:enumValue "121"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-verification-time a bacnet:StandardEnumeration ;
    bacnet:enumName "verification-time" ;
    bacnet:enumValue "326"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-virtual-mac-address-table a bacnet:StandardEnumeration ;
    bacnet:enumName "virtual-mac-address-table" ;
    bacnet:enumValue "429"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-vt-classes-supported a bacnet:StandardEnumeration ;
    bacnet:enumName "vt-classes-supported" ;
    bacnet:enumValue "122"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-weekly-schedule a bacnet:StandardEnumeration ;
    bacnet:enumName "weekly-schedule" ;
    bacnet:enumValue "123"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-window-interval a bacnet:StandardEnumeration ;
    bacnet:enumName "window-interval" ;
    bacnet:enumValue "147"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-window-samples a bacnet:StandardEnumeration ;
    bacnet:enumName "window-samples" ;
    bacnet:enumValue "148"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-write-status a bacnet:StandardEnumeration ;
    bacnet:enumName "write-status" ;
    bacnet:enumValue "370"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-zone-from a bacnet:StandardEnumeration ;
    bacnet:enumName "zone-from" ;
    bacnet:enumValue "320"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-zone-members a bacnet:StandardEnumeration ;
    bacnet:enumName "zone-members" ;
    bacnet:enumValue "165"^^xsd:nonNegativeInteger .

bacnet:PropertyIdentifier-zone-to a bacnet:StandardEnumeration ;
    bacnet:enumName "zone-to" ;
    bacnet:enumValue "321"^^xsd:nonNegativeInteger .

bacnet:Proportional_Constant a bacnet:Property ;
    bacnet:propertyOf bacnet:LoopObject .

bacnet:Proportional_Constant_Units a bacnet:Property ;
    bacnet:propertyOf bacnet:LoopObject .

bacnet:Protocol_Level a bacnet:Property ;
    bacnet:propertyOf bacnet:NetworkPortObject .

bacnet:Protocol_Object_Types_Supported a bacnet:Property ;
    bacnet:propertyOf bacnet:DeviceObject .

bacnet:Protocol_Revision a bacnet:Property ;
    bacnet:propertyOf bacnet:DeviceObject .

bacnet:Protocol_Services_Supported a bacnet:Property ;
    bacnet:propertyOf bacnet:DeviceObject .

bacnet:Protocol_Version a bacnet:Property ;
    bacnet:propertyOf bacnet:DeviceObject .

bacnet:Pulse_Rate a bacnet:Property ;
    bacnet:propertyOf bacnet:AccumulatorObject .

bacnet:Read_Only a bacnet:Property ;
    bacnet:propertyOf bacnet:FileObject .

bacnet:Reason_For_Disable a bacnet:Property ;
    bacnet:propertyOf bacnet:AccessCredentialObject .

bacnet:Reason_For_Halt a bacnet:Property ;
    bacnet:propertyOf bacnet:ProgramObject .

bacnet:Reference_Port a bacnet:Property ;
    bacnet:propertyOf bacnet:NetworkPortObject .

bacnet:Registered_Car_Call a bacnet:Property ;
    bacnet:propertyOf bacnet:LiftObject .

bacnet:Represents a bacnet:Property ;
    bacnet:propertyOf bacnet:StructuredViewObject .

bacnet:Requested_Shed_Level a bacnet:Property ;
    bacnet:propertyOf bacnet:LoadControlObject .

bacnet:Requested_Update_Interval a bacnet:Property ;
    bacnet:propertyOf bacnet:GlobalGroupObject .

bacnet:Restart_Notification_Recipients a bacnet:Property ;
    bacnet:propertyOf bacnet:DeviceObject .

bacnet:Restore_Completion_Time a bacnet:Property ;
    bacnet:propertyOf bacnet:DeviceObject .

bacnet:Restore_Preparation_Time a bacnet:Property ;
    bacnet:propertyOf bacnet:DeviceObject .

bacnet:Routing_Table a bacnet:Property ;
    bacnet:propertyOf bacnet:NetworkPortObject .

bacnet:Scale_Factor a bacnet:Property ;
    bacnet:propertyOf bacnet:PulseConverterObject .

bacnet:Schedule_Default a bacnet:Property ;
    bacnet:propertyOf bacnet:ScheduleObject .

bacnet:Secured_Status a bacnet:Property ;
    bacnet:propertyOf bacnet:AccessDoorObject .

bacnet:Security_PDU_Timeout a bacnet:Property ;
    bacnet:propertyOf bacnet:NetworkSecurityObject .

bacnet:Security_Time_Window a bacnet:Property ;
    bacnet:propertyOf bacnet:NetworkSecurityObject .

bacnet:Segmentation_Supported a bacnet:Property ;
    bacnet:propertyOf bacnet:DeviceObject .

bacnet:Send_Now a bacnet:Property ;
    bacnet:propertyOf bacnet:AuditReporterObject .

bacnet:SequenceOfCharacterString a sh:NodeShape ;
    rdfs:comment "Sequence Of Character String" ;
    sh:property [ sh:datatype xsd:string ;
            sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] .

bacnet:SequenceOfPropertyStates a sh:NodeShape ;
    rdfs:comment "Sequence Of Property States" ;
    sh:property [ sh:node bacnet:PropertyStates ;
            sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] .

bacnet:SequenceOfTimeValue a sh:NodeShape ;
    rdfs:comment "Sequence Of Time Value" ;
    sh:property [ sh:node bacnet:TimeValue ;
            sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] .

bacnet:Serial_Number a bacnet:Property ;
    bacnet:propertyOf bacnet:DeviceObject .

bacnet:Setpoint a bacnet:Property ;
    bacnet:propertyOf bacnet:LoopObject .

bacnet:Setpoint_Reference a bacnet:Property ;
    bacnet:propertyOf bacnet:LoopObject .

bacnet:Setting a bacnet:Property ;
    bacnet:propertyOf bacnet:LifeSafetyPointObject .

bacnet:Shed_Duration a bacnet:Property ;
    bacnet:propertyOf bacnet:LoadControlObject .

bacnet:Shed_Level_Descriptions a bacnet:Property ;
    bacnet:propertyOf bacnet:LoadControlObject .

bacnet:Shed_Levels a bacnet:Property ;
    bacnet:propertyOf bacnet:LoadControlObject .

bacnet:Stage_Names a bacnet:Property ;
    bacnet:propertyOf bacnet:StagingObject .

bacnet:Stages a bacnet:Property ;
    bacnet:propertyOf bacnet:StagingObject .

bacnet:State_Change_Values a bacnet:Property ;
    bacnet:propertyOf bacnet:TimerObject .

bacnet:State_Description a bacnet:Property ;
    bacnet:propertyOf bacnet:LoadControlObject .

bacnet:Strike_Count a bacnet:Property ;
    bacnet:propertyOf bacnet:BinaryLightingOutputObject .

bacnet:Structured_Object_List a bacnet:Property ;
    bacnet:propertyOf bacnet:DeviceObject .

bacnet:Subordinate_Annotations a bacnet:Property ;
    bacnet:propertyOf bacnet:StructuredViewObject .

bacnet:Subordinate_List a bacnet:Property ;
    bacnet:propertyOf bacnet:StructuredViewObject .

bacnet:Subordinate_Node_Types a bacnet:Property ;
    bacnet:propertyOf bacnet:StructuredViewObject .

bacnet:Subordinate_Relationships a bacnet:Property ;
    bacnet:propertyOf bacnet:StructuredViewObject .

bacnet:Subordinate_Tags a bacnet:Property ;
    bacnet:propertyOf bacnet:StructuredViewObject .

bacnet:Subscribed_Recipients a bacnet:Property ;
    bacnet:propertyOf bacnet:NotificationForwarderObject .

bacnet:Supported_Format_Classes a bacnet:Property ;
    bacnet:propertyOf bacnet:CredentialDataInputObject .

bacnet:Supported_Formats a bacnet:Property ;
    bacnet:propertyOf bacnet:CredentialDataInputObject .

bacnet:Supported_Security_Algorithms a bacnet:Property ;
    bacnet:propertyOf bacnet:NetworkSecurityObject .

bacnet:System_Status a bacnet:Property ;
    bacnet:propertyOf bacnet:DeviceObject .

bacnet:Target_References a bacnet:Property ;
    bacnet:propertyOf bacnet:StagingObject .

bacnet:Threat_Authority a bacnet:Property ;
    bacnet:propertyOf bacnet:AccessCredentialObject .

bacnet:Threat_Level a bacnet:Property ;
    bacnet:propertyOf bacnet:AccessPointObject .

bacnet:Time_Of_Device_Restart a bacnet:Property ;
    bacnet:propertyOf bacnet:DeviceObject .

bacnet:Time_Of_Strike_Count_Reset a bacnet:Property ;
    bacnet:propertyOf bacnet:BinaryLightingOutputObject .

bacnet:Time_Synchronization_Interval a bacnet:Property ;
    bacnet:propertyOf bacnet:DeviceObject .

bacnet:Time_Synchronization_Recipients a bacnet:Property ;
    bacnet:propertyOf bacnet:DeviceObject .

bacnet:Timer_Running a bacnet:Property ;
    bacnet:propertyOf bacnet:TimerObject .

bacnet:Timer_State a bacnet:Property ;
    bacnet:propertyOf bacnet:TimerObject .

bacnet:Trace_Flag a bacnet:Property ;
    bacnet:propertyOf bacnet:AccessCredentialObject .

bacnet:Transaction_Notification_Class a bacnet:Property ;
    bacnet:propertyOf bacnet:AccessPointObject .

bacnet:Transition a bacnet:Property ;
    bacnet:propertyOf bacnet:LightingOutputObject .

bacnet:UTC_Offset a bacnet:Property ;
    bacnet:propertyOf bacnet:DeviceObject .

bacnet:UTC_Time_Synchronization_Recipients a bacnet:Property ;
    bacnet:propertyOf bacnet:DeviceObject .

bacnet:Update_Key_Set_Timeout a bacnet:Property ;
    bacnet:propertyOf bacnet:NetworkSecurityObject .

bacnet:User_External_Identifier a bacnet:Property ;
    bacnet:propertyOf bacnet:AccessUserObject .

bacnet:User_Information_Reference a bacnet:Property ;
    bacnet:propertyOf bacnet:AccessUserObject .

bacnet:User_Name a bacnet:Property ;
    bacnet:propertyOf bacnet:AccessUserObject .

bacnet:User_Type a bacnet:Property ;
    bacnet:propertyOf bacnet:AccessUserObject .

bacnet:Uses_Remaining a bacnet:Property ;
    bacnet:propertyOf bacnet:AccessCredentialObject .

bacnet:VT_Classes_Supported a bacnet:Property ;
    bacnet:propertyOf bacnet:DeviceObject .

bacnet:Valid_Samples a bacnet:Property ;
    bacnet:propertyOf bacnet:AveragingObject .

bacnet:Value_Before_Change a bacnet:Property ;
    bacnet:propertyOf bacnet:AccumulatorObject .

bacnet:Value_Change_Time a bacnet:Property ;
    bacnet:propertyOf bacnet:AccumulatorObject .

bacnet:Value_Set a bacnet:Property ;
    bacnet:propertyOf bacnet:AccumulatorObject .

bacnet:Variance_Value a bacnet:Property ;
    bacnet:propertyOf bacnet:AveragingObject .

bacnet:Vendor_Identifier a bacnet:Property ;
    bacnet:propertyOf bacnet:DeviceObject .

bacnet:Vendor_Name a bacnet:Property ;
    bacnet:propertyOf bacnet:DeviceObject .

bacnet:Verification_Time a bacnet:Property ;
    bacnet:propertyOf bacnet:AccessPointObject .

bacnet:Virtual_MAC_Address_Table a bacnet:Property ;
    bacnet:propertyOf bacnet:NetworkPortObject .

bacnet:Weekly_Schedule a bacnet:Property ;
    bacnet:propertyOf bacnet:ScheduleObject .

bacnet:Window_Interval a bacnet:Property ;
    bacnet:propertyOf bacnet:AveragingObject .

bacnet:Window_Samples a bacnet:Property ;
    bacnet:propertyOf bacnet:AveragingObject .

bacnet:Write_Status a bacnet:Property ;
    bacnet:propertyOf bacnet:ChannelObject .

bacnet:Zone_From a bacnet:Property ;
    bacnet:propertyOf bacnet:AccessPointObject .

bacnet:Zone_Members a bacnet:Property ;
    bacnet:propertyOf bacnet:LifeSafetyZoneObject .

bacnet:Zone_To a bacnet:Property ;
    bacnet:propertyOf bacnet:AccessPointObject .

bacnet:accepted-modes a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-accepted-modes ;
    bacnet:propertyName "accepted-modes" ;
    bacnet:propertyRef bacnet:Accepted_Modes .

bacnet:access-event-tag a bacnet:StandardProperty,
        rdf:Property ;
    rdfs:label "access-event-tag" ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-access-event-tag ;
    bacnet:propertyName "access-event-tag" ;
    bacnet:propertyRef bacnet:Access_Event_Tag .

bacnet:access-event-time a bacnet:StandardProperty,
        rdf:Property ;
    rdfs:label "access-event-time" ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-access-event-time ;
    bacnet:propertyName "access-event-time" ;
    bacnet:propertyRef bacnet:Access_Event_Time .

bacnet:ack-required a bacnet:StandardProperty,
        rdf:Property ;
    rdfs:label "ack-required" ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-ack-required ;
    bacnet:propertyName "ack-required" ;
    bacnet:propertyRef bacnet:Ack_Required .

bacnet:activation-time a bacnet:StandardProperty,
        rdf:Property ;
    rdfs:label "activation-time" ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-activation-time ;
    bacnet:propertyName "activation-time" ;
    bacnet:propertyRef bacnet:Activation_Time .

bacnet:adjust-value a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-adjust-value ;
    bacnet:propertyName "adjust-value" ;
    bacnet:propertyRef bacnet:Adjust_Value .

bacnet:any-value a rdf:Property ;
    rdfs:label "any-value" .

bacnet:assigned-access-rights a bacnet:StandardProperty,
        rdf:Property ;
    rdfs:label "assigned-access-rights" ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-assigned-access-rights ;
    bacnet:propertyName "assigned-access-rights" ;
    bacnet:propertyRef bacnet:Assigned_Access_Rights .

bacnet:authentication-status a bacnet:StandardProperty,
        rdf:Property ;
    rdfs:label "authentication-status" ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-authentication-status ;
    bacnet:propertyName "authentication-status" ;
    bacnet:propertyRef bacnet:Authentication_Status .

bacnet:auto-slave-discovery a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-auto-slave-discovery ;
    bacnet:propertyName "auto-slave-discovery" ;
    bacnet:propertyRef bacnet:Auto_Slave_Discovery .

bacnet:bit-string a rdf:Property ;
    rdfs:label "bit-string" .

bacnet:bitmask a rdf:Property ;
    rdfs:label "bitmask" .

bacnet:bitstring-value a rdf:Property ;
    rdfs:label "bitstring-value" .

bacnet:blink-warn-enable a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-blink-warn-enable ;
    bacnet:propertyName "blink-warn-enable" ;
    bacnet:propertyRef bacnet:Blink_Warn_Enable .

bacnet:buffer-ready a rdf:Property ;
    rdfs:label "buffer-ready" .

bacnet:change-of-bitstring a rdf:Property ;
    rdfs:label "change-of-bitstring" .

bacnet:change-of-state a rdf:Property ;
    rdfs:label "change-of-state" .

bacnet:change-of-value a rdf:Property ;
    rdfs:label "change-of-value" .

bacnet:changed-value a rdf:Property ;
    rdfs:label "changed-value" .

bacnet:client-cov-increment a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-client-cov-increment ;
    bacnet:propertyName "client-cov-increment" ;
    bacnet:propertyRef bacnet:Client_COV_Increment .

bacnet:command a bacnet:StandardProperty,
        rdf:Property ;
    rdfs:label "command" ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-command ;
    bacnet:propertyName "command" ;
    bacnet:propertyRef bacnet:Command .

bacnet:command-failure a rdf:Property ;
    rdfs:label "command-failure" .

bacnet:complex-event-type a rdf:Property ;
    rdfs:label "complex-event-type" .

bacnet:constructed-value a rdf:Property ;
    rdfs:label "constructed-value" .

bacnet:cov-resubscription-interval a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-cov-resubscription-interval ;
    bacnet:propertyName "cov-resubscription-interval" ;
    bacnet:propertyRef bacnet:COV_Resubscription_Interval .

bacnet:datetime a rdf:Property ;
    rdfs:label "datetime" .

bacnet:direction a rdf:Property ;
    rdfs:label "direction" .

bacnet:door-alarm-state a bacnet:StandardProperty,
        rdf:Property ;
    rdfs:label "door-alarm-state" ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-door-alarm-state ;
    bacnet:propertyName "door-alarm-state" ;
    bacnet:propertyRef bacnet:Door_Alarm_State .

bacnet:double-out-of-range a rdf:Property ;
    rdfs:label "double-out-of-range" .

bacnet:egress-active a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-egress-active ;
    bacnet:propertyName "egress-active" ;
    bacnet:propertyRef bacnet:Egress_Active .

bacnet:egress-time a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-egress-time ;
    bacnet:propertyName "egress-time" ;
    bacnet:propertyRef bacnet:Egress_Time .

bacnet:elevator-group a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-elevator-group ;
    bacnet:propertyName "elevator-group" ;
    bacnet:propertyRef bacnet:Elevator_Group .

bacnet:energy-meter a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-energy-meter ;
    bacnet:propertyName "energy-meter" ;
    bacnet:propertyRef bacnet:Energy_Meter .

bacnet:energy-meter-ref a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-energy-meter-ref ;
    bacnet:propertyName "energy-meter-ref" ;
    bacnet:propertyRef bacnet:Energy_Meter_Ref .

bacnet:enum-value a rdf:Property ;
    rdfs:label "enum-value" .

bacnet:error-limit a bacnet:StandardProperty,
        rdf:Property ;
    rdfs:label "error-limit" ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-error-limit ;
    bacnet:propertyName "error-limit" ;
    bacnet:propertyRef bacnet:Error_Limit .

bacnet:extended a rdf:Property ;
    rdfs:label "extended" .

bacnet:extended-event-type a rdf:Property ;
    rdfs:label "extended-event-type" .

bacnet:failure a rdf:Property ;
    rdfs:label "failure" .

bacnet:fault-signals a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-fault-signals ;
    bacnet:propertyName "fault-signals" ;
    bacnet:propertyRef bacnet:Fault_Signals .

bacnet:file-access-method a bacnet:StandardProperty,
        rdf:Property ;
    rdfs:label "file-access-method" ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-file-access-method ;
    bacnet:propertyName "file-access-method" ;
    bacnet:propertyRef bacnet:File_Access_Method .

bacnet:floating-limit a rdf:Property ;
    rdfs:label "floating-limit" .

bacnet:floor-text a bacnet:StandardProperty,
        rdf:Property ;
    rdfs:label "floor-text" ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-floor-text ;
    bacnet:propertyName "floor-text" ;
    bacnet:propertyRef bacnet:Floor_Text .

bacnet:format-type a rdf:Property ;
    rdfs:label "format-type" .

bacnet:group-members a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-group-members ;
    bacnet:propertyName "group-members" ;
    bacnet:propertyRef bacnet:Group_Members .

bacnet:hasPort a rdf:Property ;
    rdf:comment "The relationship between a device and one or more ports." ;
    rdfs:range bacnet:Port .

bacnet:installation-iD a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-installation-iD ;
    bacnet:propertyName "installation-iD" ;
    bacnet:propertyRef bacnet:Installation_ID .

bacnet:ip-address a bacnet:StandardProperty,
        rdf:Property ;
    rdfs:label "ip-address" ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-ip-address ;
    bacnet:propertyName "ip-address" ;
    bacnet:propertyRef bacnet:IP_Address .

bacnet:is-utc a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-is-utc ;
    bacnet:propertyName "is-utc" ;
    bacnet:propertyRef bacnet:Is_UTC .

bacnet:landing-calls a bacnet:StandardProperty,
        rdf:Property ;
    rdfs:label "landing-calls" ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-landing-calls ;
    bacnet:propertyName "landing-calls" ;
    bacnet:propertyRef bacnet:Landing_Calls .

bacnet:life-safety-alarm-values a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-life-safety-alarm-values ;
    bacnet:propertyName "life-safety-alarm-values" ;
    bacnet:propertyRef bacnet:Life_Safety_Alarm_Values .

bacnet:list-of-alarm-values a rdf:Property ;
    rdfs:label "list-of-alarm-values" .

bacnet:location a bacnet:StandardProperty,
        rdf:Property ;
    rdfs:label "location" ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-location ;
    bacnet:propertyName "location" ;
    bacnet:propertyRef bacnet:Location .

bacnet:lock-status a bacnet:StandardProperty,
        rdf:Property ;
    rdfs:label "lock-status" ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-lock-status ;
    bacnet:propertyName "lock-status" ;
    bacnet:propertyRef bacnet:Lock_Status .

bacnet:log-data a rdf:Property ;
    rdfs:label "log-data" .

bacnet:log-device-object-property a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-log-device-object-property ;
    bacnet:propertyName "log-device-object-property" ;
    bacnet:propertyRef bacnet:Log_Device_Object_Property .

bacnet:log-interval a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-log-interval ;
    bacnet:propertyName "log-interval" ;
    bacnet:propertyRef bacnet:Log_Interval .

bacnet:logging-type a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-logging-type ;
    bacnet:propertyName "logging-type" ;
    bacnet:propertyRef bacnet:Logging_Type .

bacnet:low-diff-limit a bacnet:StandardProperty,
        rdf:Property ;
    rdfs:label "low-diff-limit" ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-low-diff-limit ;
    bacnet:propertyName "low-diff-limit" ;
    bacnet:propertyRef bacnet:Low_Diff_Limit .

bacnet:manual-slave-address-binding a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-manual-slave-address-binding ;
    bacnet:propertyName "manual-slave-address-binding" ;
    bacnet:propertyRef bacnet:Manual_Slave_Address_Binding .

bacnet:max-info-frames a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-max-info-frames ;
    bacnet:propertyName "max-info-frames" ;
    bacnet:propertyRef bacnet:Max_Info_Frames .

bacnet:max-master a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-max-master ;
    bacnet:propertyName "max-master" ;
    bacnet:propertyRef bacnet:Max_Master .

bacnet:members a bacnet:StandardProperty,
        rdf:Property ;
    rdfs:label "members" ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-members ;
    bacnet:propertyName "members" ;
    bacnet:propertyRef bacnet:Members .

bacnet:minimum-off-time a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-minimum-off-time ;
    bacnet:propertyName "minimum-off-time" ;
    bacnet:propertyRef bacnet:Minimum_Off_Time .

bacnet:minimum-on-time a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-minimum-on-time ;
    bacnet:propertyName "minimum-on-time" ;
    bacnet:propertyRef bacnet:Minimum_On_Time .

bacnet:mode a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-mode ;
    bacnet:propertyName "mode" ;
    bacnet:propertyRef bacnet:Mode .

bacnet:mode-property-reference a rdf:Property ;
    rdfs:label "mode-property-reference" .

bacnet:name a rdf:Property ;
    rdfs:label "name" .

bacnet:new-state a rdf:Property ;
    rdfs:label "new-state" .

bacnet:node-type a bacnet:StandardProperty,
        rdf:Property ;
    rdfs:label "node-type" ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-node-type ;
    bacnet:propertyName "node-type" ;
    bacnet:propertyRef bacnet:Node_Type .

bacnet:object a rdf:Property ;
    rdfs:label "object" .

bacnet:object-property-reference a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-object-property-reference ;
    bacnet:propertyName "object-property-reference" ;
    bacnet:propertyRef bacnet:Object_Property_Reference .

bacnet:octet-string a rdf:Property ;
    rdfs:label "octet-string" .

bacnet:operation a rdf:Property ;
    rdfs:label "operation" .

bacnet:out-of-range a rdf:Property ;
    rdfs:label "out-of-range" .

bacnet:passenger-alarm a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-passenger-alarm ;
    bacnet:propertyName "passenger-alarm" ;
    bacnet:propertyRef bacnet:Passenger_Alarm .

bacnet:port-id a rdf:Property ;
    rdfs:label "port-id" .

bacnet:power a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-power ;
    bacnet:propertyName "power" ;
    bacnet:propertyRef bacnet:Power .

bacnet:program-change a bacnet:StandardProperty,
        rdf:Property ;
    rdfs:label "program-change" ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-program-change ;
    bacnet:propertyName "program-change" ;
    bacnet:propertyRef bacnet:Program_Change .

bacnet:program-state a bacnet:StandardProperty,
        rdf:Property ;
    rdfs:label "program-state" ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-program-state ;
    bacnet:propertyName "program-state" ;
    bacnet:propertyRef bacnet:Program_State .

bacnet:property-access-error a rdf:Property ;
    rdfs:label "property-access-error" .

bacnet:real-value a rdf:Property ;
    rdfs:label "real-value" .

bacnet:reason-for-halt a bacnet:StandardProperty,
        rdf:Property ;
    rdfs:label "reason-for-halt" ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-reason-for-halt ;
    bacnet:propertyName "reason-for-halt" ;
    bacnet:propertyRef bacnet:Reason_For_Halt .

bacnet:recipient-list a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-recipient-list ;
    bacnet:propertyName "recipient-list" ;
    bacnet:propertyRef bacnet:Recipient_List .

bacnet:reference a rdf:Property ;
    rdfs:label "reference" .

bacnet:security-level a rdf:Property ;
    rdfs:label "security-level" .

bacnet:signed-out-of-range a rdf:Property ;
    rdfs:label "signed-out-of-range" .

bacnet:signed-value a rdf:Property ;
    rdfs:label "signed-value" .

bacnet:silenced a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-silenced ;
    bacnet:propertyName "silenced" ;
    bacnet:propertyRef bacnet:Silenced .

bacnet:slave-address-binding a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-slave-address-binding ;
    bacnet:propertyName "slave-address-binding" ;
    bacnet:propertyRef bacnet:Slave_Address_Binding .

bacnet:slave-proxy-enable a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-slave-proxy-enable ;
    bacnet:propertyName "slave-proxy-enable" ;
    bacnet:propertyRef bacnet:Slave_Proxy_Enable .

bacnet:system-status a bacnet:StandardProperty,
        rdf:Property ;
    rdfs:label "system-status" ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-system-status ;
    bacnet:propertyName "system-status" ;
    bacnet:propertyRef bacnet:System_Status .

bacnet:trigger a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-trigger ;
    bacnet:propertyName "trigger" ;
    bacnet:propertyRef bacnet:Trigger .

bacnet:unsigned-out-of-range a rdf:Property ;
    rdfs:label "unsigned-out-of-range" .

bacnet:unsigned-range a rdf:Property ;
    rdfs:label "unsigned-range" .

bacnet:write-status a bacnet:StandardProperty,
        rdf:Property ;
    rdfs:label "write-status" ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-write-status ;
    bacnet:propertyName "write-status" ;
    bacnet:propertyRef bacnet:Write_Status .

quantitykind:Temperature a qudt:QuantityKind ;
    rdfs:label "Temperature"@en ;
    rdfs:isDefinedBy <http://qudt.org/2.1/vocab/quantitykind> .

bacnet:Accepted_Modes a bacnet:Property ;
    bacnet:propertyOf bacnet:LifeSafetyPointObject,
        bacnet:LifeSafetyZoneObject .

bacnet:Action a bacnet:Property,
        bacnet:StandardEnumerated ;
    bacnet:hasMember bacnet:Action-direct,
        bacnet:Action-reverse ;
    bacnet:propertyOf bacnet:CommandObject,
        bacnet:LoopObject .

bacnet:Adjust_Value a bacnet:Property ;
    bacnet:propertyOf bacnet:AccessZoneObject,
        bacnet:PulseConverterObject .

bacnet:Alarm_Value a bacnet:Property ;
    bacnet:propertyOf bacnet:BinaryInputObject,
        bacnet:BinaryValueObject .

bacnet:ArrayOfDeviceObjectPropertyReference a sh:NodeShape ;
    rdfs:comment "Array Of Device Object Property Reference" ;
    rdfs:subClassOf bacnet:Array ;
    sh:property [ sh:node bacnet:DeviceObjectPropertyReference ;
            sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] .

bacnet:Auto_Slave_Discovery a bacnet:Property ;
    bacnet:propertyOf bacnet:DeviceObject,
        bacnet:NetworkPortObject .

bacnet:Blink_Warn_Enable a bacnet:Property ;
    bacnet:propertyOf bacnet:BinaryLightingOutputObject,
        bacnet:LightingOutputObject .

bacnet:COV_Resubscription_Interval a bacnet:Property ;
    bacnet:propertyOf bacnet:GlobalGroupObject,
        bacnet:TrendLogObject .

bacnet:Client_COV_Increment a bacnet:Property ;
    bacnet:propertyOf bacnet:GlobalGroupObject,
        bacnet:TrendLogObject .

bacnet:Egress_Active a bacnet:Property ;
    bacnet:propertyOf bacnet:BinaryLightingOutputObject,
        bacnet:LightingOutputObject .

bacnet:Egress_Time a bacnet:Property ;
    bacnet:propertyOf bacnet:BinaryLightingOutputObject,
        bacnet:LightingOutputObject .

bacnet:Elevator_Group a bacnet:Property ;
    bacnet:propertyOf bacnet:EscalatorObject,
        bacnet:LiftObject .

bacnet:Energy_Meter a bacnet:Property ;
    bacnet:propertyOf bacnet:EscalatorObject,
        bacnet:LiftObject .

bacnet:Energy_Meter_Ref a bacnet:Property ;
    bacnet:propertyOf bacnet:EscalatorObject,
        bacnet:LiftObject .

bacnet:Expiration_Time a bacnet:Property ;
    bacnet:propertyOf bacnet:AccessCredentialObject,
        bacnet:TimerObject .

bacnet:Fault_Signals a bacnet:Property ;
    bacnet:propertyOf bacnet:EscalatorObject,
        bacnet:LiftObject .

bacnet:Floor_Number a bacnet:Property ;
    bacnet:propertyOf bacnet:LifeSafetyPointObject,
        bacnet:LifeSafetyZoneObject .

bacnet:Group_Members a bacnet:Property ;
    bacnet:propertyOf bacnet:ElevatorGroupObject,
        bacnet:GlobalGroupObject .

bacnet:Installation_ID a bacnet:Property ;
    bacnet:propertyOf bacnet:EscalatorObject,
        bacnet:LiftObject .

bacnet:Is_UTC a bacnet:Property ;
    bacnet:propertyOf bacnet:DateTimePatternValueObject,
        bacnet:DateTimeValueObject .

bacnet:Issue_Confirmed_Notifications a bacnet:Property ;
    bacnet:propertyOf bacnet:AuditLogObject,
        bacnet:AuditReporterObject .

bacnet:Life_Safety_Alarm_Values a bacnet:Property ;
    bacnet:propertyOf bacnet:LifeSafetyPointObject,
        bacnet:LifeSafetyZoneObject .

bacnet:ListOfAccessEvent a sh:NodeShape ;
    rdfs:comment "List Of Access Event" ;
    rdfs:subClassOf bacnet:List ;
    sh:property [ sh:datatype xsd:string ;
            sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] .

bacnet:ListOfDoorAlarmState a sh:NodeShape ;
    rdfs:comment "List Of Door Alarm State" ;
    rdfs:subClassOf bacnet:List ;
    sh:property [ sh:datatype xsd:string ;
            sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] .

bacnet:Log_Device_Object_Property a bacnet:Property ;
    bacnet:propertyOf bacnet:TrendLogMultipleObject,
        bacnet:TrendLogObject .

bacnet:Log_Interval a bacnet:Property ;
    bacnet:propertyOf bacnet:TrendLogMultipleObject,
        bacnet:TrendLogObject .

bacnet:Logging_Type a bacnet:Property ;
    bacnet:propertyOf bacnet:TrendLogMultipleObject,
        bacnet:TrendLogObject .

bacnet:Manual_Slave_Address_Binding a bacnet:Property ;
    bacnet:propertyOf bacnet:DeviceObject,
        bacnet:NetworkPortObject .

bacnet:Max_Info_Frames a bacnet:Property ;
    bacnet:propertyOf bacnet:DeviceObject,
        bacnet:NetworkPortObject .

bacnet:Max_Master a bacnet:Property ;
    bacnet:propertyOf bacnet:DeviceObject,
        bacnet:NetworkPortObject .

bacnet:Minimum_Off_Time a bacnet:Property ;
    bacnet:propertyOf bacnet:BinaryOutputObject,
        bacnet:BinaryValueObject .

bacnet:Minimum_On_Time a bacnet:Property ;
    bacnet:propertyOf bacnet:BinaryOutputObject,
        bacnet:BinaryValueObject .

bacnet:Mode a bacnet:Property ;
    bacnet:propertyOf bacnet:LifeSafetyPointObject,
        bacnet:LifeSafetyZoneObject .

bacnet:Object_Property_Reference a bacnet:Property ;
    bacnet:propertyOf bacnet:AveragingObject,
        bacnet:EventEnrollmentObject .

bacnet:Operation_Expected a bacnet:Property ;
    bacnet:propertyOf bacnet:LifeSafetyPointObject,
        bacnet:LifeSafetyZoneObject .

bacnet:OptionalProperty a rdf:Property ;
    rdfs:comment "The property is optional." ;
    rdfs:subPropertyOf bacnet:StandardProperty .

bacnet:Passenger_Alarm a bacnet:Property ;
    bacnet:propertyOf bacnet:EscalatorObject,
        bacnet:LiftObject .

bacnet:Power a bacnet:Property ;
    bacnet:propertyOf bacnet:BinaryLightingOutputObject,
        bacnet:LightingOutputObject .

bacnet:Recipient_List a bacnet:Property ;
    bacnet:propertyOf bacnet:NotificationClassObject,
        bacnet:NotificationForwarderObject .

bacnet:SequenceOfLifeSafetyState a sh:NodeShape ;
    rdfs:comment "Sequence Of Life Safety State" ;
    sh:property [ sh:datatype xsd:string ;
            sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] .

bacnet:Silenced a bacnet:Property ;
    bacnet:propertyOf bacnet:LifeSafetyPointObject,
        bacnet:LifeSafetyZoneObject .

bacnet:Slave_Address_Binding a bacnet:Property ;
    bacnet:propertyOf bacnet:DeviceObject,
        bacnet:NetworkPortObject .

bacnet:Slave_Proxy_Enable a bacnet:Property ;
    bacnet:propertyOf bacnet:DeviceObject,
        bacnet:NetworkPortObject .

bacnet:Trigger a bacnet:Property ;
    bacnet:propertyOf bacnet:TrendLogMultipleObject,
        bacnet:TrendLogObject .

bacnet:active-text a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-active-text ;
    bacnet:propertyName "active-text" ;
    bacnet:propertyRef bacnet:Active_Text .

bacnet:alarm-value a bacnet:StandardProperty,
        rdf:Property ;
    rdfs:label "alarm-value" ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-alarm-value ;
    bacnet:propertyName "alarm-value" ;
    bacnet:propertyRef bacnet:Alarm_Value .

bacnet:align-intervals a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-align-intervals ;
    bacnet:propertyName "align-intervals" ;
    bacnet:propertyRef bacnet:Align_Intervals .

bacnet:boolean-value a rdf:Property ;
    rdfs:label "boolean-value" .

bacnet:change-of-state-count a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-change-of-state-count ;
    bacnet:propertyName "change-of-state-count" ;
    bacnet:propertyRef bacnet:Change_Of_State_Count .

bacnet:change-of-state-time a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-change-of-state-time ;
    bacnet:propertyName "change-of-state-time" ;
    bacnet:propertyRef bacnet:Change_Of_State_Time .

bacnet:door-status a bacnet:StandardProperty,
        rdf:Property ;
    rdfs:label "door-status" ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-door-status ;
    bacnet:propertyName "door-status" ;
    bacnet:propertyRef bacnet:Door_Status .

bacnet:enum a rdf:Property ;
    rdfs:label "enum" .

bacnet:enumVendor a rdf:Property ;
    rdfs:comment "A reference to the vendor that defines an extension to a standard enumeration." ;
    rdfs:domain bacnet:Enumerated ;
    rdfs:range bacnet:Vendor .

bacnet:enumerated a rdf:Property ;
    rdfs:label "enumerated" .

bacnet:event-type a bacnet:StandardProperty,
        rdf:Property ;
    rdfs:label "event-type" ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-event-type ;
    bacnet:propertyName "event-type" ;
    bacnet:propertyRef bacnet:Event_Type .

bacnet:expiration-time a bacnet:StandardProperty,
        rdf:Property ;
    rdfs:label "expiration-time" ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-expiration-time ;
    bacnet:propertyName "expiration-time" ;
    bacnet:propertyRef bacnet:Expiration_Time .

bacnet:group-iD a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-group-iD ;
    bacnet:propertyName "group-iD" ;
    bacnet:propertyRef bacnet:Group_ID .

bacnet:inactive-text a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-inactive-text ;
    bacnet:propertyName "inactive-text" ;
    bacnet:propertyRef bacnet:Inactive_Text .

bacnet:interval-offset a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-interval-offset ;
    bacnet:propertyName "interval-offset" ;
    bacnet:propertyRef bacnet:Interval_Offset .

bacnet:last-notify-record a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-last-notify-record ;
    bacnet:propertyName "last-notify-record" ;
    bacnet:propertyRef bacnet:Last_Notify_Record .

bacnet:lighting-command a bacnet:StandardProperty,
        rdf:Property ;
    rdfs:label "lighting-command" ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-lighting-command ;
    bacnet:propertyName "lighting-command" ;
    bacnet:propertyRef bacnet:Lighting_Command .

bacnet:list-of-fault-values a rdf:Property ;
    rdfs:label "list-of-fault-values" .

bacnet:list-of-object-property-references a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-list-of-object-property-references ;
    bacnet:propertyName "list-of-object-property-references" ;
    bacnet:propertyRef bacnet:List_Of_Object_Property_References .

bacnet:log-datum a rdf:Property ;
    rdfs:label "log-datum" .

bacnet:maintenance-required a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-maintenance-required ;
    bacnet:propertyName "maintenance-required" ;
    bacnet:propertyRef bacnet:Maintenance_Required .

bacnet:null-value a rdf:Property ;
    rdfs:label "null-value" .

bacnet:number-of-states a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-number-of-states ;
    bacnet:propertyName "number-of-states" ;
    bacnet:propertyRef bacnet:Number_Of_States .

bacnet:objectidentifier a rdf:Property ;
    rdfs:label "objectidentifier" .

bacnet:octet a rdf:Property ;
    rdfs:label "octet" .

bacnet:operation-expected a bacnet:StandardProperty,
        rdf:Property ;
    rdfs:label "operation-expected" ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-operation-expected ;
    bacnet:propertyName "operation-expected" ;
    bacnet:propertyRef bacnet:Operation_Expected .

bacnet:parameters a rdf:Property ;
    rdfs:label "parameters" .

bacnet:records-since-notification a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-records-since-notification ;
    bacnet:propertyName "records-since-notification" ;
    bacnet:propertyRef bacnet:Records_Since_Notification .

bacnet:setpoint-reference a bacnet:StandardProperty,
        rdf:Property ;
    rdfs:label "setpoint-reference" ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-setpoint-reference ;
    bacnet:propertyName "setpoint-reference" ;
    bacnet:propertyRef bacnet:Setpoint_Reference .

bacnet:state-text a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-state-text ;
    bacnet:propertyName "state-text" ;
    bacnet:propertyRef bacnet:State_Text .

bacnet:stop-time a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-stop-time ;
    bacnet:propertyName "stop-time" ;
    bacnet:propertyRef bacnet:Stop_Time .

bacnet:stop-when-full a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-stop-when-full ;
    bacnet:propertyName "stop-when-full" ;
    bacnet:propertyRef bacnet:Stop_When_Full .

bacnet:time-of-state-count-reset a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-time-of-state-count-reset ;
    bacnet:propertyName "time-of-state-count-reset" ;
    bacnet:propertyRef bacnet:Time_Of_State_Count_Reset .

bacnet:time-remaining a rdf:Property ;
    rdfs:label "time-remaining" .

bacnet:unsigned-value a rdf:Property ;
    rdfs:label "unsigned-value" .

bacnet:update-interval a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-update-interval ;
    bacnet:propertyName "update-interval" ;
    bacnet:propertyRef bacnet:Update_Interval .

bacnet:update-time a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-update-time ;
    bacnet:propertyName "update-time" ;
    bacnet:propertyRef bacnet:Update_Time .

bacnet:Active_Text a bacnet:Property ;
    bacnet:propertyOf bacnet:BinaryInputObject,
        bacnet:BinaryOutputObject,
        bacnet:BinaryValueObject .

bacnet:Align_Intervals a bacnet:Property ;
    bacnet:propertyOf bacnet:DeviceObject,
        bacnet:TrendLogMultipleObject,
        bacnet:TrendLogObject .

bacnet:ArrayOfDeviceObjectReference a sh:NodeShape ;
    rdfs:comment "Array Of Device Object Reference" ;
    rdfs:subClassOf bacnet:Array ;
    sh:property [ sh:node bacnet:DeviceObjectReference ;
            sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] .

bacnet:ArrayOfObjectIdentifier a sh:NodeShape ;
    rdfs:comment "Array Of Object Identifier" ;
    rdfs:subClassOf bacnet:Array ;
    sh:property [ sh:datatype xsd:string ;
            sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] .

bacnet:Change_Of_State_Count a bacnet:Property ;
    bacnet:propertyOf bacnet:BinaryInputObject,
        bacnet:BinaryOutputObject,
        bacnet:BinaryValueObject .

bacnet:Change_Of_State_Time a bacnet:Property ;
    bacnet:propertyOf bacnet:BinaryInputObject,
        bacnet:BinaryOutputObject,
        bacnet:BinaryValueObject .

bacnet:Group_ID a bacnet:Property ;
    bacnet:propertyOf bacnet:ElevatorGroupObject,
        bacnet:EscalatorObject,
        bacnet:LiftObject .

bacnet:Inactive_Text a bacnet:Property ;
    bacnet:propertyOf bacnet:BinaryInputObject,
        bacnet:BinaryOutputObject,
        bacnet:BinaryValueObject .

bacnet:Interval_Offset a bacnet:Property ;
    bacnet:propertyOf bacnet:DeviceObject,
        bacnet:TrendLogMultipleObject,
        bacnet:TrendLogObject .

bacnet:Last_Notify_Record a bacnet:Property ;
    bacnet:propertyOf bacnet:EventLogObject,
        bacnet:TrendLogMultipleObject,
        bacnet:TrendLogObject .

bacnet:ListOfRecipient a sh:NodeShape ;
    rdfs:comment "List Of Recipient" ;
    rdfs:subClassOf bacnet:List ;
    sh:property [ sh:node bacnet:Recipient ;
            sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] .

bacnet:List_Of_Object_Property_References a bacnet:Property ;
    bacnet:propertyOf bacnet:ChannelObject,
        bacnet:ScheduleObject,
        bacnet:TimerObject .

bacnet:Maintenance_Required a bacnet:Property ;
    bacnet:propertyOf bacnet:AccessDoorObject,
        bacnet:LifeSafetyPointObject,
        bacnet:LifeSafetyZoneObject .

bacnet:Notification_Threshold a bacnet:Property ;
    bacnet:propertyOf bacnet:EventLogObject,
        bacnet:TrendLogMultipleObject,
        bacnet:TrendLogObject .

bacnet:Number_Of_States a bacnet:Property ;
    bacnet:propertyOf bacnet:MultiStateInputObject,
        bacnet:MultiStateOutputObject,
        bacnet:MultiStateValueObject .

bacnet:Polarity a bacnet:Property,
        bacnet:StandardEnumerated ;
    bacnet:hasMember bacnet:Polarity-normal,
        bacnet:Polarity-reverse ;
    bacnet:propertyOf bacnet:BinaryInputObject,
        bacnet:BinaryLightingOutputObject,
        bacnet:BinaryOutputObject .

bacnet:ReadableProperty a rdf:Property ;
    rdfs:comment "The property is required to be present and readable using BACnet services." ;
    rdfs:subPropertyOf bacnet:StandardProperty .

bacnet:Records_Since_Notification a bacnet:Property ;
    bacnet:propertyOf bacnet:EventLogObject,
        bacnet:TrendLogMultipleObject,
        bacnet:TrendLogObject .

bacnet:State_Text a bacnet:Property ;
    bacnet:propertyOf bacnet:MultiStateInputObject,
        bacnet:MultiStateOutputObject,
        bacnet:MultiStateValueObject .

bacnet:Stop_Time a bacnet:Property ;
    bacnet:propertyOf bacnet:EventLogObject,
        bacnet:TrendLogMultipleObject,
        bacnet:TrendLogObject .

bacnet:Stop_When_Full a bacnet:Property ;
    bacnet:propertyOf bacnet:EventLogObject,
        bacnet:TrendLogMultipleObject,
        bacnet:TrendLogObject .

bacnet:Time_Of_State_Count_Reset a bacnet:Property ;
    bacnet:propertyOf bacnet:BinaryInputObject,
        bacnet:BinaryOutputObject,
        bacnet:BinaryValueObject .

bacnet:Update_Interval a bacnet:Property ;
    bacnet:propertyOf bacnet:AnalogInputObject,
        bacnet:GlobalGroupObject,
        bacnet:LoopObject .

bacnet:Update_Time a bacnet:Property ;
    bacnet:propertyOf bacnet:CredentialDataInputObject,
        bacnet:PulseConverterObject,
        bacnet:TimerObject .

bacnet:action a bacnet:StandardProperty,
        rdf:Property ;
    rdfs:label "action" ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-action ;
    bacnet:propertyName "action" ;
    bacnet:propertyRef bacnet:Action .

bacnet:bitstring a rdf:Property ;
    rdfs:label "bitstring" .

bacnet:buffer-size a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-buffer-size ;
    bacnet:propertyName "buffer-size" ;
    bacnet:propertyRef bacnet:Buffer_Size .

bacnet:character-string a rdf:Property ;
    rdfs:label "character-string" .

bacnet:elapsed-active-time a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-elapsed-active-time ;
    bacnet:propertyName "elapsed-active-time" ;
    bacnet:propertyRef bacnet:Elapsed_Active_Time .

bacnet:exceeded-limit a rdf:Property ;
    rdfs:label "exceeded-limit" .

bacnet:global-identifier a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-global-identifier ;
    bacnet:propertyName "global-identifier" ;
    bacnet:propertyRef bacnet:Global_Identifier .

bacnet:log-buffer a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-log-buffer ;
    bacnet:propertyName "log-buffer" ;
    bacnet:propertyRef bacnet:Log_Buffer .

bacnet:log-status a rdf:Property ;
    rdfs:label "log-status" .

bacnet:mac-address a bacnet:StandardProperty,
        rdf:Property ;
    rdfs:label "mac-address" ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-mac-address ;
    bacnet:propertyName "mac-address" ;
    bacnet:propertyRef bacnet:MAC_Address .

bacnet:member-of a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-member-of ;
    bacnet:propertyName "member-of" ;
    bacnet:propertyRef bacnet:Member_Of .

bacnet:network-number a bacnet:StandardProperty,
        rdf:Property ;
    rdfs:label "network-number" ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-network-number ;
    bacnet:propertyName "network-number" ;
    bacnet:propertyRef bacnet:Network_Number .

bacnet:none a rdf:Property ;
    rdfs:label "none" .

bacnet:notification-threshold a bacnet:StandardProperty,
        rdf:Property ;
    rdfs:label "notification-threshold" ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-notification-threshold ;
    bacnet:propertyName "notification-threshold" ;
    bacnet:propertyRef bacnet:Notification_Threshold .

bacnet:polarity a bacnet:StandardProperty,
        rdf:Property ;
    rdfs:label "polarity" ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-polarity ;
    bacnet:propertyName "polarity" ;
    bacnet:propertyRef bacnet:Polarity .

bacnet:property-value a rdf:Property ;
    rdfs:label "property-value" .

bacnet:start-time a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-start-time ;
    bacnet:propertyName "start-time" ;
    bacnet:propertyRef bacnet:Start_Time .

bacnet:time-change a rdf:Property ;
    rdfs:label "time-change" .

bacnet:time-of-active-time-reset a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-time-of-active-time-reset ;
    bacnet:propertyName "time-of-active-time-reset" ;
    bacnet:propertyRef bacnet:Time_Of_Active_Time_Reset .

bacnet:total-record-count a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-total-record-count ;
    bacnet:propertyName "total-record-count" ;
    bacnet:propertyRef bacnet:Total_Record_Count .

bacnet:tracking-value a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-tracking-value ;
    bacnet:propertyName "tracking-value" ;
    bacnet:propertyRef bacnet:Tracking_Value .

bacnet:vendor-id a rdf:Property ;
    rdfs:label "vendor-id" .

bacnet:ArrayOfUnsigned a sh:NodeShape ;
    rdfs:comment "Array Of Unsigned" ;
    rdfs:subClassOf bacnet:Array ;
    sh:property [ sh:datatype xsd:nonNegativeInteger ;
            sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] .

bacnet:Buffer_Size a bacnet:Property ;
    bacnet:propertyOf bacnet:AuditLogObject,
        bacnet:EventLogObject,
        bacnet:TrendLogMultipleObject,
        bacnet:TrendLogObject .

bacnet:Elapsed_Active_Time a bacnet:Property ;
    bacnet:propertyOf bacnet:BinaryInputObject,
        bacnet:BinaryLightingOutputObject,
        bacnet:BinaryOutputObject,
        bacnet:BinaryValueObject .

bacnet:Feedback_Value a bacnet:Property ;
    bacnet:propertyOf bacnet:BinaryLightingOutputObject,
        bacnet:BinaryOutputObject,
        bacnet:LightingOutputObject,
        bacnet:MultiStateOutputObject .

bacnet:Global_Identifier a bacnet:Property ;
    bacnet:propertyOf bacnet:AccessCredentialObject,
        bacnet:AccessRightsObject,
        bacnet:AccessUserObject,
        bacnet:AccessZoneObject .

bacnet:ListOfAddressBinding a sh:NodeShape ;
    rdfs:comment "List Of Address Binding" ;
    rdfs:subClassOf bacnet:List ;
    sh:property [ sh:node bacnet:AddressBinding ;
            sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] .

bacnet:ListOfUnsigned a sh:NodeShape ;
    rdfs:comment "List Of Unsigned" ;
    rdfs:subClassOf bacnet:List ;
    sh:property [ sh:datatype xsd:nonNegativeInteger ;
            sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] .

bacnet:Log_Buffer a bacnet:Property ;
    bacnet:propertyOf bacnet:AuditLogObject,
        bacnet:EventLogObject,
        bacnet:TrendLogMultipleObject,
        bacnet:TrendLogObject .

bacnet:Member_Of a bacnet:Property ;
    bacnet:propertyOf bacnet:AccessUserObject,
        bacnet:AuditLogObject,
        bacnet:LifeSafetyPointObject,
        bacnet:LifeSafetyZoneObject .

bacnet:Start_Time a bacnet:Property ;
    bacnet:propertyOf bacnet:EventLogObject,
        bacnet:LoadControlObject,
        bacnet:TrendLogMultipleObject,
        bacnet:TrendLogObject .

bacnet:Time_Of_Active_Time_Reset a bacnet:Property ;
    bacnet:propertyOf bacnet:BinaryInputObject,
        bacnet:BinaryLightingOutputObject,
        bacnet:BinaryOutputObject,
        bacnet:BinaryValueObject .

bacnet:Total_Record_Count a bacnet:Property ;
    bacnet:propertyOf bacnet:AuditLogObject,
        bacnet:EventLogObject,
        bacnet:TrendLogMultipleObject,
        bacnet:TrendLogObject .

bacnet:Tracking_Value a bacnet:Property ;
    bacnet:propertyOf bacnet:LifeSafetyPointObject,
        bacnet:LifeSafetyZoneObject,
        bacnet:LiftObject,
        bacnet:LightingOutputObject .

bacnet:date a rdf:Property ;
    rdfs:label "date" .

bacnet:device-identifier a rdf:Property ;
    rdfs:label "device-identifier" .

bacnet:exceeding-value a rdf:Property ;
    rdfs:label "exceeding-value" .

bacnet:feedback-value a bacnet:StandardProperty,
        rdf:Property ;
    rdfs:label "feedback-value" ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-feedback-value ;
    bacnet:propertyName "feedback-value" ;
    bacnet:propertyRef bacnet:Feedback_Value .

bacnet:floor-number a bacnet:StandardProperty,
        rdf:Property ;
    rdfs:label "floor-number" ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-floor-number ;
    bacnet:propertyName "floor-number" ;
    bacnet:propertyRef bacnet:Floor_Number .

bacnet:hasMember a rdf:Property,
        owl:FunctionalObjectProperty ;
    rdfs:comment "The membership relationship between a bit string and a bit.",
        "The membership relationship between an enumeration name, value and the enumerated type." ;
    rdfs:domain bacnet:Bit ;
    rdfs:range bacnet:BitString .

bacnet:priority a bacnet:StandardProperty,
        rdf:Property ;
    rdfs:label "priority" ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-priority ;
    bacnet:propertyName "priority" ;
    bacnet:propertyRef bacnet:Priority .

bacnet:priority-for-writing a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-priority-for-writing ;
    bacnet:propertyName "priority-for-writing" ;
    bacnet:propertyRef bacnet:Priority_For_Writing .

bacnet:process-identifier a bacnet:StandardProperty,
        rdf:Property ;
    rdfs:label "process-identifier" ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-process-identifier ;
    bacnet:propertyName "process-identifier" ;
    bacnet:propertyRef bacnet:Process_Identifier .

bacnet:recipient a rdf:Property ;
    rdfs:label "recipient" .

bacnet:record-count a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-record-count ;
    bacnet:propertyName "record-count" ;
    bacnet:propertyRef bacnet:Record_Count .

bacnet:timestamp a rdf:Property ;
    rdfs:label "timestamp" .

bacnet:unsigned a rdf:Property ;
    rdfs:label "unsigned" .

bacnet:value a rdf:Property ;
    rdfs:label "value" .

bacnet:ListOfLifeSafetyState a sh:NodeShape ;
    rdfs:comment "List Of Life Safety State" ;
    rdfs:subClassOf bacnet:List ;
    sh:property [ sh:datatype xsd:string ;
            sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] .

bacnet:Priority_For_Writing a bacnet:Property ;
    bacnet:propertyOf bacnet:AccessPointObject,
        bacnet:LoopObject,
        bacnet:ScheduleObject,
        bacnet:StagingObject,
        bacnet:TimerObject .

bacnet:Record_Count a bacnet:Property ;
    bacnet:propertyOf bacnet:AuditLogObject,
        bacnet:EventLogObject,
        bacnet:FileObject,
        bacnet:TrendLogMultipleObject,
        bacnet:TrendLogObject .

bacnet:access-event a bacnet:StandardProperty,
        rdf:Property ;
    rdfs:label "access-event" ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-access-event ;
    bacnet:propertyName "access-event" ;
    bacnet:propertyRef bacnet:Access_Event .

bacnet:boolean a rdf:Property ;
    rdfs:label "boolean" .

bacnet:double a rdf:Property ;
    rdfs:label "double" .

bacnet:fault-high-limit a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-fault-high-limit ;
    bacnet:propertyName "fault-high-limit" ;
    bacnet:propertyRef bacnet:Fault_High_Limit .

bacnet:fault-low-limit a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-fault-low-limit ;
    bacnet:propertyName "fault-low-limit" ;
    bacnet:propertyRef bacnet:Fault_Low_Limit .

bacnet:fault-values a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-fault-values ;
    bacnet:propertyName "fault-values" ;
    bacnet:propertyRef bacnet:Fault_Values .

bacnet:integer a rdf:Property ;
    rdfs:label "integer" .

bacnet:interface-value a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-interface-value ;
    bacnet:propertyName "interface-value" ;
    bacnet:propertyRef bacnet:Interface_Value .

bacnet:issue-confirmed-notifications a bacnet:StandardProperty,
        rdf:Property ;
    rdfs:label "issue-confirmed-notifications" ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-issue-confirmed-notifications ;
    bacnet:propertyName "issue-confirmed-notifications" ;
    bacnet:propertyRef bacnet:Issue_Confirmed_Notifications .

bacnet:time a rdf:Property ;
    rdfs:label "time" .

bacnet:Enable a bacnet:Property ;
    bacnet:propertyOf bacnet:AccessRightsObject,
        bacnet:AuditLogObject,
        bacnet:EventLogObject,
        bacnet:LoadControlObject,
        bacnet:TrendLogMultipleObject,
        bacnet:TrendLogObject .

bacnet:Fault_High_Limit a bacnet:Property ;
    bacnet:propertyOf bacnet:AccumulatorObject,
        bacnet:AnalogInputObject,
        bacnet:AnalogValueObject,
        bacnet:IntegerValueObject,
        bacnet:LargeAnalogValueObject,
        bacnet:PositiveIntegerValueObject .

bacnet:Fault_Low_Limit a bacnet:Property ;
    bacnet:propertyOf bacnet:AccumulatorObject,
        bacnet:AnalogInputObject,
        bacnet:AnalogValueObject,
        bacnet:IntegerValueObject,
        bacnet:LargeAnalogValueObject,
        bacnet:PositiveIntegerValueObject .

bacnet:Fault_Values a bacnet:Property ;
    bacnet:propertyOf bacnet:AccessDoorObject,
        bacnet:CharacterStringValueObject,
        bacnet:LifeSafetyPointObject,
        bacnet:LifeSafetyZoneObject,
        bacnet:MultiStateInputObject,
        bacnet:MultiStateValueObject .

bacnet:Interface_Value a bacnet:Property ;
    bacnet:propertyOf bacnet:AnalogInputObject,
        bacnet:AnalogOutputObject,
        bacnet:BinaryInputObject,
        bacnet:BinaryOutputObject,
        bacnet:MultiStateInputObject,
        bacnet:MultiStateOutputObject .

bacnet:property-array-index a rdf:Property ;
    rdfs:label "property-array-index" .

bacnet:real a rdf:Property ;
    rdfs:label "real" .

bacnet:Resolution a bacnet:Property ;
    bacnet:propertyOf bacnet:AnalogInputObject,
        bacnet:AnalogOutputObject,
        bacnet:AnalogValueObject,
        bacnet:IntegerValueObject,
        bacnet:LargeAnalogValueObject,
        bacnet:PositiveIntegerValueObject,
        bacnet:TimerObject .

bacnet:enable a bacnet:StandardProperty,
        rdf:Property ;
    rdfs:label "enable" ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-enable ;
    bacnet:propertyName "enable" ;
    bacnet:propertyRef bacnet:Enable .

bacnet:limit-enable a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-limit-enable ;
    bacnet:propertyName "limit-enable" ;
    bacnet:propertyRef bacnet:Limit_Enable .

bacnet:property-identifier a rdf:Property ;
    rdfs:label "property-identifier" .

bacnet:resolution a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-resolution ;
    bacnet:propertyName "resolution" ;
    bacnet:propertyRef bacnet:Resolution .

bacnet:Deadband a bacnet:Property ;
    bacnet:propertyOf bacnet:AnalogInputObject,
        bacnet:AnalogOutputObject,
        bacnet:AnalogValueObject,
        bacnet:IntegerValueObject,
        bacnet:LargeAnalogValueObject,
        bacnet:LoopObject,
        bacnet:PositiveIntegerValueObject,
        bacnet:PulseConverterObject .

bacnet:High_Limit a bacnet:Property ;
    bacnet:propertyOf bacnet:AccumulatorObject,
        bacnet:AnalogInputObject,
        bacnet:AnalogOutputObject,
        bacnet:AnalogValueObject,
        bacnet:IntegerValueObject,
        bacnet:LargeAnalogValueObject,
        bacnet:PositiveIntegerValueObject,
        bacnet:PulseConverterObject .

bacnet:Limit_Enable a bacnet:Property ;
    bacnet:propertyOf bacnet:AccumulatorObject,
        bacnet:AnalogInputObject,
        bacnet:AnalogOutputObject,
        bacnet:AnalogValueObject,
        bacnet:IntegerValueObject,
        bacnet:LargeAnalogValueObject,
        bacnet:PositiveIntegerValueObject,
        bacnet:PulseConverterObject .

bacnet:ListOfDeviceObjectReference a sh:NodeShape ;
    rdfs:comment "List Of Device Object Reference" ;
    rdfs:subClassOf bacnet:List ;
    sh:property [ sh:node bacnet:DeviceObjectReference ;
            sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] .

bacnet:Low_Limit a bacnet:Property ;
    bacnet:propertyOf bacnet:AccumulatorObject,
        bacnet:AnalogInputObject,
        bacnet:AnalogOutputObject,
        bacnet:AnalogValueObject,
        bacnet:IntegerValueObject,
        bacnet:LargeAnalogValueObject,
        bacnet:PositiveIntegerValueObject,
        bacnet:PulseConverterObject .

bacnet:Min_Pres_Value a bacnet:Property ;
    bacnet:propertyOf bacnet:AnalogInputObject,
        bacnet:AnalogOutputObject,
        bacnet:AnalogValueObject,
        bacnet:IntegerValueObject,
        bacnet:LargeAnalogValueObject,
        bacnet:PositiveIntegerValueObject,
        bacnet:StagingObject,
        bacnet:TimerObject .

bacnet:alarm-values a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-alarm-values ;
    bacnet:propertyName "alarm-values" ;
    bacnet:propertyRef bacnet:Alarm_Values .

bacnet:device-type a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-device-type ;
    bacnet:propertyName "device-type" ;
    bacnet:propertyRef bacnet:Device_Type .

bacnet:min-pres-value a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-min-pres-value ;
    bacnet:propertyName "min-pres-value" ;
    bacnet:propertyRef bacnet:Min_Pres_Value .

bacnet:Alarm_Values a bacnet:Property ;
    bacnet:propertyOf bacnet:AccessDoorObject,
        bacnet:AccessZoneObject,
        bacnet:BitStringValueObject,
        bacnet:CharacterStringValueObject,
        bacnet:LifeSafetyPointObject,
        bacnet:LifeSafetyZoneObject,
        bacnet:MultiStateInputObject,
        bacnet:MultiStateValueObject,
        bacnet:TimerObject .

bacnet:Device_Type a bacnet:Property ;
    bacnet:propertyOf bacnet:AccumulatorObject,
        bacnet:AnalogInputObject,
        bacnet:AnalogOutputObject,
        bacnet:BinaryInputObject,
        bacnet:BinaryOutputObject,
        bacnet:LifeSafetyPointObject,
        bacnet:LifeSafetyZoneObject,
        bacnet:MultiStateInputObject,
        bacnet:MultiStateOutputObject .

bacnet:Max_Pres_Value a bacnet:Property ;
    bacnet:propertyOf bacnet:AccumulatorObject,
        bacnet:AnalogInputObject,
        bacnet:AnalogOutputObject,
        bacnet:AnalogValueObject,
        bacnet:IntegerValueObject,
        bacnet:LargeAnalogValueObject,
        bacnet:PositiveIntegerValueObject,
        bacnet:StagingObject,
        bacnet:TimerObject .

bacnet:max-pres-value a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-max-pres-value ;
    bacnet:propertyName "max-pres-value" ;
    bacnet:propertyRef bacnet:Max_Pres_Value .

bacnet:object-identifier a bacnet:StandardProperty,
        rdf:Property ;
    rdfs:label "object-identifier" ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-object-identifier ;
    bacnet:propertyName "object-identifier" ;
    bacnet:propertyOf bacnet:Object ;
    bacnet:propertyRef bacnet:Object_Identifier ;
    rdfs:subPropertyOf bacnet:ReadableProperty .

bacnet:COV_Increment a bacnet:Property ;
    bacnet:propertyOf bacnet:AnalogInputObject,
        bacnet:AnalogOutputObject,
        bacnet:AnalogValueObject,
        bacnet:IntegerValueObject,
        bacnet:LargeAnalogValueObject,
        bacnet:LightingOutputObject,
        bacnet:LoopObject,
        bacnet:PositiveIntegerValueObject,
        bacnet:PulseConverterObject,
        bacnet:StagingObject .

bacnet:Units a bacnet:Property ;
    bacnet:propertyOf bacnet:AccumulatorObject,
        bacnet:AnalogInputObject,
        bacnet:AnalogOutputObject,
        bacnet:AnalogValueObject,
        bacnet:IntegerValueObject,
        bacnet:LargeAnalogValueObject,
        bacnet:LifeSafetyPointObject,
        bacnet:PositiveIntegerValueObject,
        bacnet:PulseConverterObject,
        bacnet:StagingObject .

bacnet:null a rdf:Property ;
    rdfs:label "null" .

bacnet:units a bacnet:StandardProperty,
        rdf:Property ;
    rdfs:label "units" ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-units ;
    bacnet:propertyName "units" ;
    bacnet:propertyRef bacnet:Units .

bacnet:cov-increment a bacnet:StandardProperty,
        rdf:Property ;
    rdfs:label "cov-increment" ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-cov-increment ;
    bacnet:propertyName "cov-increment" ;
    bacnet:propertyRef bacnet:COV_Increment .

bacnet:high-limit a bacnet:StandardProperty,
        rdf:Property ;
    rdfs:label "high-limit" ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-high-limit ;
    bacnet:propertyName "high-limit" ;
    bacnet:propertyRef bacnet:High_Limit .

bacnet:low-limit a bacnet:StandardProperty,
        rdf:Property ;
    rdfs:label "low-limit" ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-low-limit ;
    bacnet:propertyName "low-limit" ;
    bacnet:propertyRef bacnet:Low_Limit .

bacnet:hasNode a rdf:Property ;
    rdf:comment "The relationship between a device or a network and one or more nodes." ;
    rdfs:range bacnet:Node .

bacnet:deadband a bacnet:StandardProperty,
        rdf:Property ;
    rdfs:label "deadband" ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-deadband ;
    bacnet:propertyName "deadband" ;
    bacnet:propertyRef bacnet:Deadband .

bacnet:current-command-priority a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-current-command-priority ;
    bacnet:propertyName "current-command-priority" ;
    bacnet:propertyRef bacnet:Current_Command_Priority .

bacnet:ArrayOfValueSource a sh:NodeShape ;
    rdfs:comment "Array Of Value Source" ;
    rdfs:subClassOf bacnet:Array ;
    sh:property [ sh:node bacnet:ValueSource ;
            sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] .

bacnet:Current_Command_Priority a bacnet:Property ;
    bacnet:propertyOf bacnet:AccessDoorObject,
        bacnet:AnalogOutputObject,
        bacnet:AnalogValueObject,
        bacnet:BinaryLightingOutputObject,
        bacnet:BinaryOutputObject,
        bacnet:BinaryValueObject,
        bacnet:BitStringValueObject,
        bacnet:CharacterStringValueObject,
        bacnet:DatePatternValueObject,
        bacnet:DateTimePatternValueObject,
        bacnet:DateTimeValueObject,
        bacnet:DateValueObject,
        bacnet:IntegerValueObject,
        bacnet:LargeAnalogValueObject,
        bacnet:LightingOutputObject,
        bacnet:MultiStateOutputObject,
        bacnet:OctetStringValueObject,
        bacnet:PositiveIntegerValueObject,
        bacnet:TimePatternValueObject,
        bacnet:TimeValueObject .

bacnet:PriorityArray a sh:NodeShape ;
    rdfs:comment "Priority Array" ;
    rdfs:subClassOf bacnet:Array ;
    sh:property [ sh:node bacnet:PriorityValue ;
            sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] .

bacnet:command-time-array a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-command-time-array ;
    bacnet:propertyName "command-time-array" ;
    bacnet:propertyRef bacnet:Command_Time_Array .

bacnet:last-command-time a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-last-command-time ;
    bacnet:propertyName "last-command-time" ;
    bacnet:propertyRef bacnet:Last_Command_Time .

bacnet:priority-array a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-priority-array ;
    bacnet:propertyName "priority-array" ;
    bacnet:propertyRef bacnet:Priority_Array .

bacnet:relinquish-default a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-relinquish-default ;
    bacnet:propertyName "relinquish-default" ;
    bacnet:propertyRef bacnet:Relinquish_Default .

bacnet:value-source-array a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-value-source-array ;
    bacnet:propertyName "value-source-array" ;
    bacnet:propertyRef bacnet:Value_Source_Array .

bacnet:Command_Time_Array a bacnet:Property ;
    bacnet:propertyOf bacnet:AccessDoorObject,
        bacnet:AnalogOutputObject,
        bacnet:AnalogValueObject,
        bacnet:BinaryLightingOutputObject,
        bacnet:BinaryOutputObject,
        bacnet:BinaryValueObject,
        bacnet:BitStringValueObject,
        bacnet:CharacterStringValueObject,
        bacnet:DatePatternValueObject,
        bacnet:DateTimePatternValueObject,
        bacnet:DateTimeValueObject,
        bacnet:DateValueObject,
        bacnet:IntegerValueObject,
        bacnet:LargeAnalogValueObject,
        bacnet:LightingOutputObject,
        bacnet:MultiStateOutputObject,
        bacnet:MultiStateValueObject,
        bacnet:OctetStringValueObject,
        bacnet:PositiveIntegerValueObject,
        bacnet:TimePatternValueObject,
        bacnet:TimeValueObject .

bacnet:Last_Command_Time a bacnet:Property ;
    bacnet:propertyOf bacnet:AccessDoorObject,
        bacnet:AnalogOutputObject,
        bacnet:AnalogValueObject,
        bacnet:BinaryLightingOutputObject,
        bacnet:BinaryOutputObject,
        bacnet:BinaryValueObject,
        bacnet:BitStringValueObject,
        bacnet:CharacterStringValueObject,
        bacnet:DatePatternValueObject,
        bacnet:DateTimePatternValueObject,
        bacnet:DateTimeValueObject,
        bacnet:DateValueObject,
        bacnet:IntegerValueObject,
        bacnet:LargeAnalogValueObject,
        bacnet:LightingOutputObject,
        bacnet:MultiStateOutputObject,
        bacnet:MultiStateValueObject,
        bacnet:OctetStringValueObject,
        bacnet:PositiveIntegerValueObject,
        bacnet:TimePatternValueObject,
        bacnet:TimeValueObject .

bacnet:Priority_Array a bacnet:Property ;
    bacnet:propertyOf bacnet:AccessDoorObject,
        bacnet:AnalogOutputObject,
        bacnet:AnalogValueObject,
        bacnet:BinaryLightingOutputObject,
        bacnet:BinaryOutputObject,
        bacnet:BinaryValueObject,
        bacnet:BitStringValueObject,
        bacnet:CharacterStringValueObject,
        bacnet:DatePatternValueObject,
        bacnet:DateTimePatternValueObject,
        bacnet:DateTimeValueObject,
        bacnet:DateValueObject,
        bacnet:IntegerValueObject,
        bacnet:LargeAnalogValueObject,
        bacnet:LightingOutputObject,
        bacnet:MultiStateOutputObject,
        bacnet:MultiStateValueObject,
        bacnet:OctetStringValueObject,
        bacnet:PositiveIntegerValueObject,
        bacnet:TimePatternValueObject,
        bacnet:TimeValueObject .

bacnet:Relinquish_Default a bacnet:Property ;
    bacnet:propertyOf bacnet:AccessDoorObject,
        bacnet:AnalogOutputObject,
        bacnet:AnalogValueObject,
        bacnet:BinaryLightingOutputObject,
        bacnet:BinaryOutputObject,
        bacnet:BinaryValueObject,
        bacnet:BitStringValueObject,
        bacnet:CharacterStringValueObject,
        bacnet:DatePatternValueObject,
        bacnet:DateTimePatternValueObject,
        bacnet:DateTimeValueObject,
        bacnet:DateValueObject,
        bacnet:IntegerValueObject,
        bacnet:LargeAnalogValueObject,
        bacnet:LightingOutputObject,
        bacnet:MultiStateOutputObject,
        bacnet:MultiStateValueObject,
        bacnet:OctetStringValueObject,
        bacnet:PositiveIntegerValueObject,
        bacnet:TimePatternValueObject,
        bacnet:TimeValueObject .

bacnet:Value_Source_Array a bacnet:Property ;
    bacnet:propertyOf bacnet:AccessDoorObject,
        bacnet:AnalogOutputObject,
        bacnet:AnalogValueObject,
        bacnet:BinaryLightingOutputObject,
        bacnet:BinaryOutputObject,
        bacnet:BinaryValueObject,
        bacnet:BitStringValueObject,
        bacnet:CharacterStringValueObject,
        bacnet:DatePatternValueObject,
        bacnet:DateTimePatternValueObject,
        bacnet:DateTimeValueObject,
        bacnet:DateValueObject,
        bacnet:IntegerValueObject,
        bacnet:LargeAnalogValueObject,
        bacnet:LightingOutputObject,
        bacnet:MultiStateOutputObject,
        bacnet:MultiStateValueObject,
        bacnet:OctetStringValueObject,
        bacnet:PositiveIntegerValueObject,
        bacnet:TimePatternValueObject,
        bacnet:TimeValueObject .

bacnet:auditable-priority-filter a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-auditable-priority-filter ;
    bacnet:propertyName "auditable-priority-filter" ;
    bacnet:propertyRef bacnet:Auditable_Priority_Filter .

bacnet:Auditable_Priority_Filter a bacnet:Property ;
    bacnet:propertyOf bacnet:AccessDoorObject,
        bacnet:AnalogOutputObject,
        bacnet:AnalogValueObject,
        bacnet:AuditReporterObject,
        bacnet:BinaryLightingOutputObject,
        bacnet:BinaryOutputObject,
        bacnet:BinaryValueObject,
        bacnet:BitStringValueObject,
        bacnet:ChannelObject,
        bacnet:CharacterStringValueObject,
        bacnet:DatePatternValueObject,
        bacnet:DateTimePatternValueObject,
        bacnet:DateTimeValueObject,
        bacnet:DateValueObject,
        bacnet:IntegerValueObject,
        bacnet:LargeAnalogValueObject,
        bacnet:LightingOutputObject,
        bacnet:MultiStateOutputObject,
        bacnet:MultiStateValueObject,
        bacnet:OctetStringValueObject,
        bacnet:PositiveIntegerValueObject,
        bacnet:TimePatternValueObject,
        bacnet:TimeValueObject .

bacnet:Time_Delay a bacnet:Property ;
    bacnet:propertyOf bacnet:AccessDoorObject,
        bacnet:AccessZoneObject,
        bacnet:AccumulatorObject,
        bacnet:AnalogInputObject,
        bacnet:AnalogOutputObject,
        bacnet:AnalogValueObject,
        bacnet:BinaryInputObject,
        bacnet:BinaryOutputObject,
        bacnet:BinaryValueObject,
        bacnet:BitStringValueObject,
        bacnet:CharacterStringValueObject,
        bacnet:EscalatorObject,
        bacnet:GlobalGroupObject,
        bacnet:IntegerValueObject,
        bacnet:LargeAnalogValueObject,
        bacnet:LifeSafetyPointObject,
        bacnet:LifeSafetyZoneObject,
        bacnet:LiftObject,
        bacnet:LoadControlObject,
        bacnet:LoopObject,
        bacnet:MultiStateInputObject,
        bacnet:MultiStateOutputObject,
        bacnet:MultiStateValueObject,
        bacnet:PositiveIntegerValueObject,
        bacnet:PulseConverterObject,
        bacnet:TimerObject .

bacnet:time-delay-normal a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-time-delay-normal ;
    bacnet:propertyName "time-delay-normal" ;
    bacnet:propertyRef bacnet:Time_Delay_Normal .

bacnet:value-source a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-value-source ;
    bacnet:propertyName "value-source" ;
    bacnet:propertyRef bacnet:Value_Source .

bacnet:Time_Delay_Normal a bacnet:Property ;
    bacnet:propertyOf bacnet:AccessDoorObject,
        bacnet:AccessZoneObject,
        bacnet:AccumulatorObject,
        bacnet:AnalogInputObject,
        bacnet:AnalogOutputObject,
        bacnet:AnalogValueObject,
        bacnet:BinaryInputObject,
        bacnet:BinaryOutputObject,
        bacnet:BinaryValueObject,
        bacnet:BitStringValueObject,
        bacnet:CharacterStringValueObject,
        bacnet:EscalatorObject,
        bacnet:EventEnrollmentObject,
        bacnet:GlobalGroupObject,
        bacnet:IntegerValueObject,
        bacnet:LargeAnalogValueObject,
        bacnet:LifeSafetyPointObject,
        bacnet:LifeSafetyZoneObject,
        bacnet:LiftObject,
        bacnet:LoadControlObject,
        bacnet:LoopObject,
        bacnet:MultiStateInputObject,
        bacnet:MultiStateOutputObject,
        bacnet:MultiStateValueObject,
        bacnet:PositiveIntegerValueObject,
        bacnet:PulseConverterObject,
        bacnet:TimerObject .

bacnet:Value_Source a bacnet:Property ;
    bacnet:propertyOf bacnet:AccessDoorObject,
        bacnet:AnalogOutputObject,
        bacnet:AnalogValueObject,
        bacnet:BinaryLightingOutputObject,
        bacnet:BinaryOutputObject,
        bacnet:BinaryValueObject,
        bacnet:BitStringValueObject,
        bacnet:ChannelObject,
        bacnet:CharacterStringValueObject,
        bacnet:CommandObject,
        bacnet:DatePatternValueObject,
        bacnet:DateTimePatternValueObject,
        bacnet:DateTimeValueObject,
        bacnet:DateValueObject,
        bacnet:IntegerValueObject,
        bacnet:LargeAnalogValueObject,
        bacnet:LifeSafetyPointObject,
        bacnet:LifeSafetyZoneObject,
        bacnet:LightingOutputObject,
        bacnet:LoadControlObject,
        bacnet:MultiStateOutputObject,
        bacnet:MultiStateValueObject,
        bacnet:OctetStringValueObject,
        bacnet:PositiveIntegerValueObject,
        bacnet:StagingObject,
        bacnet:TimePatternValueObject,
        bacnet:TimeValueObject .

bacnet:event-algorithm-inhibit a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-event-algorithm-inhibit ;
    bacnet:propertyName "event-algorithm-inhibit" ;
    bacnet:propertyRef bacnet:Event_Algorithm_Inhibit .

bacnet:event-algorithm-inhibit-ref a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-event-algorithm-inhibit-ref ;
    bacnet:propertyName "event-algorithm-inhibit-ref" ;
    bacnet:propertyRef bacnet:Event_Algorithm_Inhibit_Ref .

bacnet:Event_Algorithm_Inhibit a bacnet:Property ;
    bacnet:propertyOf bacnet:AccessDoorObject,
        bacnet:AccessPointObject,
        bacnet:AccessZoneObject,
        bacnet:AccumulatorObject,
        bacnet:AlertEnrollmentObject,
        bacnet:AnalogInputObject,
        bacnet:AnalogOutputObject,
        bacnet:AnalogValueObject,
        bacnet:BinaryInputObject,
        bacnet:BinaryOutputObject,
        bacnet:BinaryValueObject,
        bacnet:BitStringValueObject,
        bacnet:CharacterStringValueObject,
        bacnet:EscalatorObject,
        bacnet:EventEnrollmentObject,
        bacnet:EventLogObject,
        bacnet:GlobalGroupObject,
        bacnet:IntegerValueObject,
        bacnet:LargeAnalogValueObject,
        bacnet:LifeSafetyPointObject,
        bacnet:LifeSafetyZoneObject,
        bacnet:LiftObject,
        bacnet:LoadControlObject,
        bacnet:LoopObject,
        bacnet:MultiStateInputObject,
        bacnet:MultiStateOutputObject,
        bacnet:MultiStateValueObject,
        bacnet:PositiveIntegerValueObject,
        bacnet:PulseConverterObject,
        bacnet:TimerObject,
        bacnet:TrendLogMultipleObject,
        bacnet:TrendLogObject .

bacnet:Event_Algorithm_Inhibit_Ref a bacnet:Property ;
    bacnet:propertyOf bacnet:AccessDoorObject,
        bacnet:AccessPointObject,
        bacnet:AccessZoneObject,
        bacnet:AccumulatorObject,
        bacnet:AlertEnrollmentObject,
        bacnet:AnalogInputObject,
        bacnet:AnalogOutputObject,
        bacnet:AnalogValueObject,
        bacnet:BinaryInputObject,
        bacnet:BinaryOutputObject,
        bacnet:BinaryValueObject,
        bacnet:BitStringValueObject,
        bacnet:CharacterStringValueObject,
        bacnet:EscalatorObject,
        bacnet:EventEnrollmentObject,
        bacnet:EventLogObject,
        bacnet:GlobalGroupObject,
        bacnet:IntegerValueObject,
        bacnet:LargeAnalogValueObject,
        bacnet:LifeSafetyPointObject,
        bacnet:LifeSafetyZoneObject,
        bacnet:LiftObject,
        bacnet:LoadControlObject,
        bacnet:LoopObject,
        bacnet:MultiStateInputObject,
        bacnet:MultiStateOutputObject,
        bacnet:MultiStateValueObject,
        bacnet:PositiveIntegerValueObject,
        bacnet:PulseConverterObject,
        bacnet:TimerObject,
        bacnet:TrendLogMultipleObject,
        bacnet:TrendLogObject .

bacnet:time-delay a bacnet:StandardProperty,
        rdf:Property ;
    rdfs:label "time-delay" ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-time-delay ;
    bacnet:propertyName "time-delay" ;
    bacnet:propertyRef bacnet:Time_Delay .

bacnet:Present_Value a bacnet:Property ;
    bacnet:propertyOf bacnet:AccessDoorObject,
        bacnet:AccumulatorObject,
        bacnet:AlertEnrollmentObject,
        bacnet:AnalogInputObject,
        bacnet:AnalogOutputObject,
        bacnet:AnalogValueObject,
        bacnet:BinaryInputObject,
        bacnet:BinaryLightingOutputObject,
        bacnet:BinaryOutputObject,
        bacnet:BinaryValueObject,
        bacnet:BitStringValueObject,
        bacnet:CalendarObject,
        bacnet:ChannelObject,
        bacnet:CharacterStringValueObject,
        bacnet:CommandObject,
        bacnet:CredentialDataInputObject,
        bacnet:DatePatternValueObject,
        bacnet:DateTimePatternValueObject,
        bacnet:DateTimeValueObject,
        bacnet:DateValueObject,
        bacnet:GlobalGroupObject,
        bacnet:GroupObject,
        bacnet:IntegerValueObject,
        bacnet:LargeAnalogValueObject,
        bacnet:LifeSafetyPointObject,
        bacnet:LifeSafetyZoneObject,
        bacnet:LightingOutputObject,
        bacnet:LoadControlObject,
        bacnet:LoopObject,
        bacnet:MultiStateInputObject,
        bacnet:MultiStateOutputObject,
        bacnet:MultiStateValueObject,
        bacnet:OctetStringValueObject,
        bacnet:PositiveIntegerValueObject,
        bacnet:PulseConverterObject,
        bacnet:ScheduleObject,
        bacnet:StagingObject,
        bacnet:TimePatternValueObject,
        bacnet:TimeValueObject,
        bacnet:TimerObject .

bacnet:out-of-service a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-out-of-service ;
    bacnet:propertyName "out-of-service" ;
    bacnet:propertyRef bacnet:Out_Of_Service .

bacnet:present-value a bacnet:StandardProperty,
        rdf:Property ;
    rdfs:label "present-value" ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-present-value ;
    bacnet:propertyName "present-value" ;
    bacnet:propertyRef bacnet:Present_Value .

bacnet:Out_Of_Service a bacnet:Property ;
    bacnet:propertyOf bacnet:AccessDoorObject,
        bacnet:AccessPointObject,
        bacnet:AccessZoneObject,
        bacnet:AccumulatorObject,
        bacnet:AnalogInputObject,
        bacnet:AnalogOutputObject,
        bacnet:AnalogValueObject,
        bacnet:BinaryInputObject,
        bacnet:BinaryLightingOutputObject,
        bacnet:BinaryOutputObject,
        bacnet:BinaryValueObject,
        bacnet:BitStringValueObject,
        bacnet:ChannelObject,
        bacnet:CharacterStringValueObject,
        bacnet:CredentialDataInputObject,
        bacnet:DatePatternValueObject,
        bacnet:DateTimePatternValueObject,
        bacnet:DateTimeValueObject,
        bacnet:DateValueObject,
        bacnet:EscalatorObject,
        bacnet:GlobalGroupObject,
        bacnet:IntegerValueObject,
        bacnet:LargeAnalogValueObject,
        bacnet:LifeSafetyPointObject,
        bacnet:LifeSafetyZoneObject,
        bacnet:LiftObject,
        bacnet:LightingOutputObject,
        bacnet:LoopObject,
        bacnet:MultiStateInputObject,
        bacnet:MultiStateOutputObject,
        bacnet:MultiStateValueObject,
        bacnet:NetworkPortObject,
        bacnet:NotificationForwarderObject,
        bacnet:OctetStringValueObject,
        bacnet:PositiveIntegerValueObject,
        bacnet:ProgramObject,
        bacnet:PulseConverterObject,
        bacnet:ScheduleObject,
        bacnet:StagingObject,
        bacnet:TimePatternValueObject,
        bacnet:TimeValueObject,
        bacnet:TimerObject .

bacnet:Event_State a bacnet:Property ;
    bacnet:propertyOf bacnet:AccessDoorObject,
        bacnet:AccessPointObject,
        bacnet:AccessZoneObject,
        bacnet:AccumulatorObject,
        bacnet:AlertEnrollmentObject,
        bacnet:AnalogInputObject,
        bacnet:AnalogOutputObject,
        bacnet:AnalogValueObject,
        bacnet:AuditLogObject,
        bacnet:AuditReporterObject,
        bacnet:BinaryInputObject,
        bacnet:BinaryLightingOutputObject,
        bacnet:BinaryOutputObject,
        bacnet:BinaryValueObject,
        bacnet:BitStringValueObject,
        bacnet:ChannelObject,
        bacnet:CharacterStringValueObject,
        bacnet:CommandObject,
        bacnet:DatePatternValueObject,
        bacnet:DateTimePatternValueObject,
        bacnet:DateTimeValueObject,
        bacnet:DateValueObject,
        bacnet:DeviceObject,
        bacnet:EscalatorObject,
        bacnet:EventEnrollmentObject,
        bacnet:EventLogObject,
        bacnet:GlobalGroupObject,
        bacnet:IntegerValueObject,
        bacnet:LargeAnalogValueObject,
        bacnet:LifeSafetyPointObject,
        bacnet:LifeSafetyZoneObject,
        bacnet:LiftObject,
        bacnet:LoadControlObject,
        bacnet:LoopObject,
        bacnet:MultiStateInputObject,
        bacnet:MultiStateOutputObject,
        bacnet:MultiStateValueObject,
        bacnet:NetworkPortObject,
        bacnet:NotificationClassObject,
        bacnet:OctetStringValueObject,
        bacnet:PositiveIntegerValueObject,
        bacnet:PulseConverterObject,
        bacnet:ScheduleObject,
        bacnet:StagingObject,
        bacnet:TimePatternValueObject,
        bacnet:TimeValueObject,
        bacnet:TimerObject,
        bacnet:TrendLogMultipleObject,
        bacnet:TrendLogObject .

bacnet:acked-transitions a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-acked-transitions ;
    bacnet:propertyName "acked-transitions" ;
    bacnet:propertyRef bacnet:Acked_Transitions .

bacnet:event-detection-enable a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-event-detection-enable ;
    bacnet:propertyName "event-detection-enable" ;
    bacnet:propertyRef bacnet:Event_Detection_Enable .

bacnet:event-enable a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-event-enable ;
    bacnet:propertyName "event-enable" ;
    bacnet:propertyRef bacnet:Event_Enable .

bacnet:event-message-texts a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-event-message-texts ;
    bacnet:propertyName "event-message-texts" ;
    bacnet:propertyRef bacnet:Event_Message_Texts .

bacnet:event-message-texts-config a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-event-message-texts-config ;
    bacnet:propertyName "event-message-texts-config" ;
    bacnet:propertyRef bacnet:Event_Message_Texts_Config .

bacnet:event-state a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-event-state ;
    bacnet:propertyName "event-state" ;
    bacnet:propertyRef bacnet:Event_State .

bacnet:event-time-stamps a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-event-time-stamps ;
    bacnet:propertyName "event-time-stamps" ;
    bacnet:propertyRef bacnet:Event_Time_Stamps .

bacnet:Acked_Transitions a bacnet:Property ;
    bacnet:propertyOf bacnet:AccessDoorObject,
        bacnet:AccessPointObject,
        bacnet:AccessZoneObject,
        bacnet:AccumulatorObject,
        bacnet:AlertEnrollmentObject,
        bacnet:AnalogInputObject,
        bacnet:AnalogOutputObject,
        bacnet:AnalogValueObject,
        bacnet:AuditLogObject,
        bacnet:AuditReporterObject,
        bacnet:BinaryInputObject,
        bacnet:BinaryLightingOutputObject,
        bacnet:BinaryOutputObject,
        bacnet:BinaryValueObject,
        bacnet:BitStringValueObject,
        bacnet:ChannelObject,
        bacnet:CharacterStringValueObject,
        bacnet:CommandObject,
        bacnet:CredentialDataInputObject,
        bacnet:DatePatternValueObject,
        bacnet:DateTimePatternValueObject,
        bacnet:DateTimeValueObject,
        bacnet:DateValueObject,
        bacnet:DeviceObject,
        bacnet:EscalatorObject,
        bacnet:EventEnrollmentObject,
        bacnet:EventLogObject,
        bacnet:GlobalGroupObject,
        bacnet:IntegerValueObject,
        bacnet:LargeAnalogValueObject,
        bacnet:LifeSafetyPointObject,
        bacnet:LifeSafetyZoneObject,
        bacnet:LiftObject,
        bacnet:LoadControlObject,
        bacnet:LoopObject,
        bacnet:MultiStateInputObject,
        bacnet:MultiStateOutputObject,
        bacnet:MultiStateValueObject,
        bacnet:NetworkPortObject,
        bacnet:NotificationClassObject,
        bacnet:PositiveIntegerValueObject,
        bacnet:ProgramObject,
        bacnet:PulseConverterObject,
        bacnet:ScheduleObject,
        bacnet:StagingObject,
        bacnet:TimePatternValueObject,
        bacnet:TimeValueObject,
        bacnet:TimerObject,
        bacnet:TrendLogMultipleObject,
        bacnet:TrendLogObject .

bacnet:Event_Detection_Enable a bacnet:Property ;
    bacnet:propertyOf bacnet:AccessDoorObject,
        bacnet:AccessPointObject,
        bacnet:AccessZoneObject,
        bacnet:AccumulatorObject,
        bacnet:AlertEnrollmentObject,
        bacnet:AnalogInputObject,
        bacnet:AnalogOutputObject,
        bacnet:AnalogValueObject,
        bacnet:AuditLogObject,
        bacnet:AuditReporterObject,
        bacnet:BinaryInputObject,
        bacnet:BinaryLightingOutputObject,
        bacnet:BinaryOutputObject,
        bacnet:BinaryValueObject,
        bacnet:BitStringValueObject,
        bacnet:ChannelObject,
        bacnet:CharacterStringValueObject,
        bacnet:CommandObject,
        bacnet:CredentialDataInputObject,
        bacnet:DatePatternValueObject,
        bacnet:DateTimePatternValueObject,
        bacnet:DateTimeValueObject,
        bacnet:DateValueObject,
        bacnet:DeviceObject,
        bacnet:EscalatorObject,
        bacnet:EventEnrollmentObject,
        bacnet:EventLogObject,
        bacnet:GlobalGroupObject,
        bacnet:IntegerValueObject,
        bacnet:LargeAnalogValueObject,
        bacnet:LifeSafetyPointObject,
        bacnet:LifeSafetyZoneObject,
        bacnet:LiftObject,
        bacnet:LoadControlObject,
        bacnet:LoopObject,
        bacnet:MultiStateInputObject,
        bacnet:MultiStateOutputObject,
        bacnet:MultiStateValueObject,
        bacnet:NetworkPortObject,
        bacnet:NotificationClassObject,
        bacnet:PositiveIntegerValueObject,
        bacnet:ProgramObject,
        bacnet:PulseConverterObject,
        bacnet:ScheduleObject,
        bacnet:StagingObject,
        bacnet:TimePatternValueObject,
        bacnet:TimeValueObject,
        bacnet:TimerObject,
        bacnet:TrendLogMultipleObject,
        bacnet:TrendLogObject .

bacnet:Event_Enable a bacnet:Property ;
    bacnet:propertyOf bacnet:AccessDoorObject,
        bacnet:AccessPointObject,
        bacnet:AccessZoneObject,
        bacnet:AccumulatorObject,
        bacnet:AlertEnrollmentObject,
        bacnet:AnalogInputObject,
        bacnet:AnalogOutputObject,
        bacnet:AnalogValueObject,
        bacnet:AuditLogObject,
        bacnet:AuditReporterObject,
        bacnet:BinaryInputObject,
        bacnet:BinaryLightingOutputObject,
        bacnet:BinaryOutputObject,
        bacnet:BinaryValueObject,
        bacnet:BitStringValueObject,
        bacnet:ChannelObject,
        bacnet:CharacterStringValueObject,
        bacnet:CommandObject,
        bacnet:CredentialDataInputObject,
        bacnet:DatePatternValueObject,
        bacnet:DateTimePatternValueObject,
        bacnet:DateTimeValueObject,
        bacnet:DateValueObject,
        bacnet:DeviceObject,
        bacnet:EscalatorObject,
        bacnet:EventEnrollmentObject,
        bacnet:EventLogObject,
        bacnet:GlobalGroupObject,
        bacnet:IntegerValueObject,
        bacnet:LargeAnalogValueObject,
        bacnet:LifeSafetyPointObject,
        bacnet:LifeSafetyZoneObject,
        bacnet:LiftObject,
        bacnet:LoadControlObject,
        bacnet:LoopObject,
        bacnet:MultiStateInputObject,
        bacnet:MultiStateOutputObject,
        bacnet:MultiStateValueObject,
        bacnet:NetworkPortObject,
        bacnet:NotificationClassObject,
        bacnet:PositiveIntegerValueObject,
        bacnet:ProgramObject,
        bacnet:PulseConverterObject,
        bacnet:ScheduleObject,
        bacnet:StagingObject,
        bacnet:TimePatternValueObject,
        bacnet:TimeValueObject,
        bacnet:TimerObject,
        bacnet:TrendLogMultipleObject,
        bacnet:TrendLogObject .

bacnet:Event_Message_Texts a bacnet:Property ;
    bacnet:propertyOf bacnet:AccessDoorObject,
        bacnet:AccessPointObject,
        bacnet:AccessZoneObject,
        bacnet:AccumulatorObject,
        bacnet:AlertEnrollmentObject,
        bacnet:AnalogInputObject,
        bacnet:AnalogOutputObject,
        bacnet:AnalogValueObject,
        bacnet:AuditLogObject,
        bacnet:AuditReporterObject,
        bacnet:BinaryInputObject,
        bacnet:BinaryLightingOutputObject,
        bacnet:BinaryOutputObject,
        bacnet:BinaryValueObject,
        bacnet:BitStringValueObject,
        bacnet:ChannelObject,
        bacnet:CharacterStringValueObject,
        bacnet:CommandObject,
        bacnet:CredentialDataInputObject,
        bacnet:DatePatternValueObject,
        bacnet:DateTimePatternValueObject,
        bacnet:DateTimeValueObject,
        bacnet:DateValueObject,
        bacnet:DeviceObject,
        bacnet:EscalatorObject,
        bacnet:EventEnrollmentObject,
        bacnet:EventLogObject,
        bacnet:GlobalGroupObject,
        bacnet:IntegerValueObject,
        bacnet:LargeAnalogValueObject,
        bacnet:LifeSafetyPointObject,
        bacnet:LifeSafetyZoneObject,
        bacnet:LiftObject,
        bacnet:LoadControlObject,
        bacnet:LoopObject,
        bacnet:MultiStateInputObject,
        bacnet:MultiStateOutputObject,
        bacnet:MultiStateValueObject,
        bacnet:NetworkPortObject,
        bacnet:NotificationClassObject,
        bacnet:PositiveIntegerValueObject,
        bacnet:ProgramObject,
        bacnet:PulseConverterObject,
        bacnet:ScheduleObject,
        bacnet:StagingObject,
        bacnet:TimePatternValueObject,
        bacnet:TimeValueObject,
        bacnet:TimerObject,
        bacnet:TrendLogMultipleObject,
        bacnet:TrendLogObject .

bacnet:Event_Message_Texts_Config a bacnet:Property ;
    bacnet:propertyOf bacnet:AccessDoorObject,
        bacnet:AccessPointObject,
        bacnet:AccessZoneObject,
        bacnet:AccumulatorObject,
        bacnet:AlertEnrollmentObject,
        bacnet:AnalogInputObject,
        bacnet:AnalogOutputObject,
        bacnet:AnalogValueObject,
        bacnet:AuditLogObject,
        bacnet:AuditReporterObject,
        bacnet:BinaryInputObject,
        bacnet:BinaryLightingOutputObject,
        bacnet:BinaryOutputObject,
        bacnet:BinaryValueObject,
        bacnet:BitStringValueObject,
        bacnet:ChannelObject,
        bacnet:CharacterStringValueObject,
        bacnet:CommandObject,
        bacnet:CredentialDataInputObject,
        bacnet:DatePatternValueObject,
        bacnet:DateTimePatternValueObject,
        bacnet:DateTimeValueObject,
        bacnet:DateValueObject,
        bacnet:DeviceObject,
        bacnet:EscalatorObject,
        bacnet:EventEnrollmentObject,
        bacnet:EventLogObject,
        bacnet:GlobalGroupObject,
        bacnet:IntegerValueObject,
        bacnet:LargeAnalogValueObject,
        bacnet:LifeSafetyPointObject,
        bacnet:LifeSafetyZoneObject,
        bacnet:LiftObject,
        bacnet:LoadControlObject,
        bacnet:LoopObject,
        bacnet:MultiStateInputObject,
        bacnet:MultiStateOutputObject,
        bacnet:MultiStateValueObject,
        bacnet:NetworkPortObject,
        bacnet:NotificationClassObject,
        bacnet:PositiveIntegerValueObject,
        bacnet:ProgramObject,
        bacnet:PulseConverterObject,
        bacnet:ScheduleObject,
        bacnet:StagingObject,
        bacnet:TimePatternValueObject,
        bacnet:TimeValueObject,
        bacnet:TimerObject,
        bacnet:TrendLogMultipleObject,
        bacnet:TrendLogObject .

bacnet:Event_Time_Stamps a bacnet:Property ;
    bacnet:propertyOf bacnet:AccessDoorObject,
        bacnet:AccessPointObject,
        bacnet:AccessZoneObject,
        bacnet:AccumulatorObject,
        bacnet:AlertEnrollmentObject,
        bacnet:AnalogInputObject,
        bacnet:AnalogOutputObject,
        bacnet:AnalogValueObject,
        bacnet:AuditLogObject,
        bacnet:AuditReporterObject,
        bacnet:BinaryInputObject,
        bacnet:BinaryLightingOutputObject,
        bacnet:BinaryOutputObject,
        bacnet:BinaryValueObject,
        bacnet:BitStringValueObject,
        bacnet:ChannelObject,
        bacnet:CharacterStringValueObject,
        bacnet:CommandObject,
        bacnet:CredentialDataInputObject,
        bacnet:DatePatternValueObject,
        bacnet:DateTimePatternValueObject,
        bacnet:DateTimeValueObject,
        bacnet:DateValueObject,
        bacnet:DeviceObject,
        bacnet:EscalatorObject,
        bacnet:EventEnrollmentObject,
        bacnet:EventLogObject,
        bacnet:GlobalGroupObject,
        bacnet:IntegerValueObject,
        bacnet:LargeAnalogValueObject,
        bacnet:LifeSafetyPointObject,
        bacnet:LifeSafetyZoneObject,
        bacnet:LiftObject,
        bacnet:LoadControlObject,
        bacnet:LoopObject,
        bacnet:MultiStateInputObject,
        bacnet:MultiStateOutputObject,
        bacnet:MultiStateValueObject,
        bacnet:NetworkPortObject,
        bacnet:NotificationClassObject,
        bacnet:PositiveIntegerValueObject,
        bacnet:ProgramObject,
        bacnet:PulseConverterObject,
        bacnet:ScheduleObject,
        bacnet:StagingObject,
        bacnet:TimePatternValueObject,
        bacnet:TimeValueObject,
        bacnet:TimerObject,
        bacnet:TrendLogMultipleObject,
        bacnet:TrendLogObject .

bacnet:Notification_Class a bacnet:Property ;
    bacnet:propertyOf bacnet:AccessDoorObject,
        bacnet:AccessPointObject,
        bacnet:AccessZoneObject,
        bacnet:AccumulatorObject,
        bacnet:AlertEnrollmentObject,
        bacnet:AnalogInputObject,
        bacnet:AnalogOutputObject,
        bacnet:AnalogValueObject,
        bacnet:AuditLogObject,
        bacnet:AuditReporterObject,
        bacnet:BinaryInputObject,
        bacnet:BinaryLightingOutputObject,
        bacnet:BinaryOutputObject,
        bacnet:BinaryValueObject,
        bacnet:BitStringValueObject,
        bacnet:ChannelObject,
        bacnet:CharacterStringValueObject,
        bacnet:CommandObject,
        bacnet:CredentialDataInputObject,
        bacnet:DatePatternValueObject,
        bacnet:DateTimePatternValueObject,
        bacnet:DateTimeValueObject,
        bacnet:DateValueObject,
        bacnet:DeviceObject,
        bacnet:EscalatorObject,
        bacnet:EventEnrollmentObject,
        bacnet:EventLogObject,
        bacnet:GlobalGroupObject,
        bacnet:IntegerValueObject,
        bacnet:LargeAnalogValueObject,
        bacnet:LifeSafetyPointObject,
        bacnet:LifeSafetyZoneObject,
        bacnet:LiftObject,
        bacnet:LoadControlObject,
        bacnet:LoopObject,
        bacnet:MultiStateInputObject,
        bacnet:MultiStateOutputObject,
        bacnet:MultiStateValueObject,
        bacnet:NetworkPortObject,
        bacnet:NotificationClassObject,
        bacnet:PositiveIntegerValueObject,
        bacnet:ProgramObject,
        bacnet:PulseConverterObject,
        bacnet:ScheduleObject,
        bacnet:StagingObject,
        bacnet:TimePatternValueObject,
        bacnet:TimeValueObject,
        bacnet:TimerObject,
        bacnet:TrendLogMultipleObject,
        bacnet:TrendLogObject .

bacnet:Notify_Type a bacnet:Property ;
    bacnet:propertyOf bacnet:AccessDoorObject,
        bacnet:AccessPointObject,
        bacnet:AccessZoneObject,
        bacnet:AccumulatorObject,
        bacnet:AlertEnrollmentObject,
        bacnet:AnalogInputObject,
        bacnet:AnalogOutputObject,
        bacnet:AnalogValueObject,
        bacnet:AuditLogObject,
        bacnet:AuditReporterObject,
        bacnet:BinaryInputObject,
        bacnet:BinaryLightingOutputObject,
        bacnet:BinaryOutputObject,
        bacnet:BinaryValueObject,
        bacnet:BitStringValueObject,
        bacnet:ChannelObject,
        bacnet:CharacterStringValueObject,
        bacnet:CommandObject,
        bacnet:CredentialDataInputObject,
        bacnet:DatePatternValueObject,
        bacnet:DateTimePatternValueObject,
        bacnet:DateTimeValueObject,
        bacnet:DateValueObject,
        bacnet:DeviceObject,
        bacnet:EscalatorObject,
        bacnet:EventEnrollmentObject,
        bacnet:EventLogObject,
        bacnet:GlobalGroupObject,
        bacnet:IntegerValueObject,
        bacnet:LargeAnalogValueObject,
        bacnet:LifeSafetyPointObject,
        bacnet:LifeSafetyZoneObject,
        bacnet:LiftObject,
        bacnet:LoadControlObject,
        bacnet:LoopObject,
        bacnet:MultiStateInputObject,
        bacnet:MultiStateOutputObject,
        bacnet:MultiStateValueObject,
        bacnet:NetworkPortObject,
        bacnet:NotificationClassObject,
        bacnet:PositiveIntegerValueObject,
        bacnet:ProgramObject,
        bacnet:PulseConverterObject,
        bacnet:ScheduleObject,
        bacnet:StagingObject,
        bacnet:TimePatternValueObject,
        bacnet:TimeValueObject,
        bacnet:TimerObject,
        bacnet:TrendLogMultipleObject,
        bacnet:TrendLogObject .

bacnet:notification-class a bacnet:StandardProperty,
        rdf:Property ;
    rdfs:label "notification-class" ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-notification-class ;
    bacnet:propertyName "notification-class" ;
    bacnet:propertyRef bacnet:Notification_Class .

bacnet:notify-type a bacnet:StandardProperty,
        rdf:Property ;
    rdfs:label "notify-type" ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-notify-type ;
    bacnet:propertyName "notify-type" ;
    bacnet:propertyRef bacnet:Notify_Type .

bacnet:reliability-evaluation-inhibit a bacnet:StandardProperty ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-reliability-evaluation-inhibit ;
    bacnet:propertyName "reliability-evaluation-inhibit" ;
    bacnet:propertyRef bacnet:Reliability_Evaluation_Inhibit .

bacnet:Reliability_Evaluation_Inhibit a bacnet:Property ;
    bacnet:propertyOf bacnet:AccessCredentialObject,
        bacnet:AccessDoorObject,
        bacnet:AccessPointObject,
        bacnet:AccessRightsObject,
        bacnet:AccessUserObject,
        bacnet:AccessZoneObject,
        bacnet:AccumulatorObject,
        bacnet:AnalogInputObject,
        bacnet:AnalogOutputObject,
        bacnet:AnalogValueObject,
        bacnet:AuditLogObject,
        bacnet:AuditReporterObject,
        bacnet:BinaryInputObject,
        bacnet:BinaryLightingOutputObject,
        bacnet:BinaryOutputObject,
        bacnet:BinaryValueObject,
        bacnet:BitStringValueObject,
        bacnet:ChannelObject,
        bacnet:CharacterStringValueObject,
        bacnet:CommandObject,
        bacnet:CredentialDataInputObject,
        bacnet:DatePatternValueObject,
        bacnet:DateTimePatternValueObject,
        bacnet:DateTimeValueObject,
        bacnet:DateValueObject,
        bacnet:DeviceObject,
        bacnet:EscalatorObject,
        bacnet:EventEnrollmentObject,
        bacnet:EventLogObject,
        bacnet:GlobalGroupObject,
        bacnet:IntegerValueObject,
        bacnet:LargeAnalogValueObject,
        bacnet:LifeSafetyPointObject,
        bacnet:LifeSafetyZoneObject,
        bacnet:LiftObject,
        bacnet:LightingOutputObject,
        bacnet:LoadControlObject,
        bacnet:LoopObject,
        bacnet:MultiStateInputObject,
        bacnet:MultiStateOutputObject,
        bacnet:MultiStateValueObject,
        bacnet:NetworkPortObject,
        bacnet:NotificationClassObject,
        bacnet:NotificationForwarderObject,
        bacnet:PositiveIntegerValueObject,
        bacnet:ProgramObject,
        bacnet:PulseConverterObject,
        bacnet:ScheduleObject,
        bacnet:StagingObject,
        bacnet:TimePatternValueObject,
        bacnet:TimerObject,
        bacnet:TrendLogMultipleObject,
        bacnet:TrendLogObject .

bacnet:Reliability a bacnet:ExtendedEnumerated,
        bacnet:Property,
        bacnet:StandardEnumerated ;
    bacnet:enumVendorMaximum "65535"^^xsd:nonNegativeInteger ;
    bacnet:enumVendorMinimum "64"^^xsd:nonNegativeInteger ;
    bacnet:hasMember bacnet:Reliability-activation-failure,
        bacnet:Reliability-communication-failure,
        bacnet:Reliability-configuration-error,
        bacnet:Reliability-faults-listed,
        bacnet:Reliability-lamp-failure,
        bacnet:Reliability-member-fault,
        bacnet:Reliability-monitored-object-fault,
        bacnet:Reliability-multi-state-fault,
        bacnet:Reliability-no-fault-detected,
        bacnet:Reliability-no-output,
        bacnet:Reliability-no-sensor,
        bacnet:Reliability-open-loop,
        bacnet:Reliability-over-range,
        bacnet:Reliability-process-error,
        bacnet:Reliability-proprietary-command-failure,
        bacnet:Reliability-referenced-object-fault,
        bacnet:Reliability-renew-dhcp-failure,
        bacnet:Reliability-renew-fd-registration-failure,
        bacnet:Reliability-restart-auto-negotiation-failure,
        bacnet:Reliability-restart-failure,
        bacnet:Reliability-shorted-loop,
        bacnet:Reliability-tripped,
        bacnet:Reliability-under-range,
        bacnet:Reliability-unreliable-other ;
    bacnet:propertyOf bacnet:AccessCredentialObject,
        bacnet:AccessDoorObject,
        bacnet:AccessPointObject,
        bacnet:AccessRightsObject,
        bacnet:AccessUserObject,
        bacnet:AccessZoneObject,
        bacnet:AccumulatorObject,
        bacnet:AnalogInputObject,
        bacnet:AnalogOutputObject,
        bacnet:AnalogValueObject,
        bacnet:AuditLogObject,
        bacnet:AuditReporterObject,
        bacnet:BinaryInputObject,
        bacnet:BinaryLightingOutputObject,
        bacnet:BinaryOutputObject,
        bacnet:BinaryValueObject,
        bacnet:BitStringValueObject,
        bacnet:ChannelObject,
        bacnet:CharacterStringValueObject,
        bacnet:CommandObject,
        bacnet:CredentialDataInputObject,
        bacnet:DatePatternValueObject,
        bacnet:DateTimePatternValueObject,
        bacnet:DateTimeValueObject,
        bacnet:DateValueObject,
        bacnet:DeviceObject,
        bacnet:EscalatorObject,
        bacnet:EventEnrollmentObject,
        bacnet:EventLogObject,
        bacnet:GlobalGroupObject,
        bacnet:IntegerValueObject,
        bacnet:LargeAnalogValueObject,
        bacnet:LifeSafetyPointObject,
        bacnet:LifeSafetyZoneObject,
        bacnet:LiftObject,
        bacnet:LightingOutputObject,
        bacnet:LoadControlObject,
        bacnet:LoopObject,
        bacnet:MultiStateInputObject,
        bacnet:MultiStateOutputObject,
        bacnet:MultiStateValueObject,
        bacnet:NetworkPortObject,
        bacnet:NotificationClassObject,
        bacnet:NotificationForwarderObject,
        bacnet:OctetStringValueObject,
        bacnet:PositiveIntegerValueObject,
        bacnet:ProgramObject,
        bacnet:PulseConverterObject,
        bacnet:ScheduleObject,
        bacnet:StagingObject,
        bacnet:TimePatternValueObject,
        bacnet:TimeValueObject,
        bacnet:TimerObject,
        bacnet:TrendLogMultipleObject,
        bacnet:TrendLogObject .

bacnet:Status_Flags a bacnet:Property ;
    bacnet:propertyOf bacnet:AccessCredentialObject,
        bacnet:AccessDoorObject,
        bacnet:AccessPointObject,
        bacnet:AccessRightsObject,
        bacnet:AccessUserObject,
        bacnet:AccessZoneObject,
        bacnet:AccumulatorObject,
        bacnet:AnalogInputObject,
        bacnet:AnalogOutputObject,
        bacnet:AnalogValueObject,
        bacnet:AuditLogObject,
        bacnet:AuditReporterObject,
        bacnet:BinaryInputObject,
        bacnet:BinaryLightingOutputObject,
        bacnet:BinaryOutputObject,
        bacnet:BinaryValueObject,
        bacnet:BitStringValueObject,
        bacnet:ChannelObject,
        bacnet:CharacterStringValueObject,
        bacnet:CommandObject,
        bacnet:CredentialDataInputObject,
        bacnet:DatePatternValueObject,
        bacnet:DateTimePatternValueObject,
        bacnet:DateTimeValueObject,
        bacnet:DateValueObject,
        bacnet:DeviceObject,
        bacnet:EscalatorObject,
        bacnet:EventEnrollmentObject,
        bacnet:EventLogObject,
        bacnet:GlobalGroupObject,
        bacnet:IntegerValueObject,
        bacnet:LargeAnalogValueObject,
        bacnet:LifeSafetyPointObject,
        bacnet:LifeSafetyZoneObject,
        bacnet:LiftObject,
        bacnet:LightingOutputObject,
        bacnet:LoadControlObject,
        bacnet:LoopObject,
        bacnet:MultiStateInputObject,
        bacnet:MultiStateOutputObject,
        bacnet:MultiStateValueObject,
        bacnet:NetworkPortObject,
        bacnet:NotificationClassObject,
        bacnet:NotificationForwarderObject,
        bacnet:OctetStringValueObject,
        bacnet:PositiveIntegerValueObject,
        bacnet:ProgramObject,
        bacnet:PulseConverterObject,
        bacnet:ScheduleObject,
        bacnet:StagingObject,
        bacnet:TimePatternValueObject,
        bacnet:TimeValueObject,
        bacnet:TimerObject,
        bacnet:TrendLogMultipleObject,
        bacnet:TrendLogObject .

bacnet:reliability a bacnet:StandardProperty,
        rdf:Property ;
    rdfs:label "reliability" ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-reliability ;
    bacnet:propertyName "reliability" ;
    bacnet:propertyRef bacnet:Reliability .

bacnet:object-type a bacnet:StandardProperty,
        rdf:Property ;
    rdfs:label "object-type" ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-object-type ;
    bacnet:propertyName "object-type" ;
    bacnet:propertyOf bacnet:Object ;
    bacnet:propertyRef bacnet:Object_Type ;
    rdfs:subPropertyOf bacnet:ReadableProperty .

bacnet:ArrayOfTimeStamp a sh:NodeShape ;
    rdfs:comment "Array Of Time Stamp" ;
    rdfs:subClassOf bacnet:Array ;
    sh:property [ sh:node bacnet:TimeStamp ;
            sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ],
        [ sh:node bacnet:TimeStamp ;
            sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] .

bacnet:status-flags a bacnet:StandardProperty,
        rdf:Property ;
    rdfs:label "status-flags" ;
    bacnet:propertyEnum bacnet:PropertyIdentifier-status-flags ;
    bacnet:propertyName "status-flags" ;
    bacnet:propertyRef bacnet:Status_Flags .

bacnet:ArrayOfCharacterString a sh:NodeShape ;
    rdfs:comment "Array Of Character String" ;
    rdfs:subClassOf bacnet:Array ;
    sh:property [ sh:datatype xsd:string ;
            sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ],
        [ sh:datatype xsd:string ;
            sh:path ( [ sh:zeroOrMorePath rdf:rest ] rdf:first ) ] .

bacnet:Property a rdf:Property ;
    rdfs:comment "The class of BACnet properties." ;
    sh:property [ sh:datatype bacnet:Enumeration ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path bacnet:propertyEnum ],
        [ sh:minCount 1 ;
            sh:path bacnet:propertyOf ] .

bacnet:StandardProperty a rdf:Property ;
    rdfs:subPropertyOf bacnet:Property .
