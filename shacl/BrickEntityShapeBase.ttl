@prefix brick: <https://brickschema.org/schema/Brick#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix bsh: <https://brickschema.org/schema/BrickShape#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix unit: <http://qudt.org/vocab/unit/> .
@prefix vcard: <http://www.w3.org/2006/vcard/ns#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .


bsh:LocationShape a sh:NodeShape ;
    sh:targetClass brick:Location ;
    sh:and (
        [sh:not [ sh:class brick:Point ] ; sh:message "Location is an exclusive top class." ]
        [sh:not [ sh:class brick:Equipment ] ; sh:message "Location is an exclusive top class." ]
        [sh:not [ sh:class brick:Substance ] ; sh:message "Location is an exclusive top class." ]
        [sh:not [ sh:class brick:Quantity ] ; sh:message "Location is an exclusive top class." ]
    );
    sh:property [
        sh:path brick:hasPart;
        sh:class brick:Location;
        sh:message "A Location's parts should be always Locations."
    ];
    sh:property [
        sh:path brick:isPartOf;
        sh:class brick:Location;
        sh:message "A Location's parts should be always Locations."
    ];
    sh:property [
        sh:path brick:isFedBy;
        sh:class brick:Equipment;
        sh:message "Locations can be fed only by other Equipment."
    ];
    sh:property [
        sh:path brick:hasPoint;
        sh:class brick:Point;
        sh:message "A Location may have associated Points"
    ];
    .

bsh:EquipmentShape a sh:NodeShape ;
    sh:targetClass brick:Equipment ;
    sh:message "Equipment is an exclusive top class." ;
    sh:and (
        [sh:not [ sh:class brick:Point ] ; sh:message "Equipment is an exclusive top class." ]
        [sh:not [ sh:class brick:Location ] ; sh:message "Equipment is an exclusive top class." ]
        [sh:not [ sh:class brick:Substance ] ; sh:message "Equipment is an exclusive top class." ]
        [sh:not [ sh:class brick:Quantity ] ; sh:message "Equipment is an exclusive top class." ]
    );
    sh:property [
        sh:path brick:hasPart;
        sh:class brick:Equipment;
        sh:message "A piece of Equipment's parts should be always other Equipment."
    ];
    sh:property [
        sh:path brick:isPartOf;
        sh:class brick:Equipment;
        sh:message "A piece of Equipment's parts should be always other Equipment."
    ];
    sh:property [
        sh:path brick:hasLocation;
        sh:class brick:Location;
        sh:message "A piece of Equipment can be located only at a Location"
    ];
    sh:property [
        sh:path brick:feeds;
        sh:or (
            [ sh:class brick:Equipment ]
            [ sh:class brick:Location ]
        ) ;
        sh:message "A piece of Equipment can be located at a Location"
    ];
    sh:property [
        sh:path brick:hasPoint;
        sh:class brick:Point;
        sh:message "A piece of Equipment may have associated Points"
    ];
    .

bsh:PointShape a sh:NodeShape;
    sh:targetClass brick:Point;
    sh:and (
        [sh:not [ sh:class brick:Equipment ] ; sh:message "Point is an exclusive top class." ]
        [sh:not [ sh:class brick:Location ] ; sh:message "Point is an exclusive top class." ]
        [sh:not [ sh:class brick:Substance ] ; sh:message "Point is an exclusive top class." ]
        [sh:not [ sh:class brick:Quantity ] ; sh:message "Point is an exclusive top class." ]
    );
    sh:message "Point is an exclusive top class." ;
    sh:property [
        sh:path brick:isPointOf;
        sh:or (
            [ sh:class brick:Location ]
            [ sh:class brick:Equipment ]
        );
        sh:message "A Point can be associated with Locations or Equipment."
    ];
    .

bsh:hasLocationShape a sh:Nodeshape;
    sh:targetSubjectsOf brick:hasLocation;
    sh:not [
        sh:class brick:Point;
    ];
    sh:message "Points are a virtual concept and always belonging to a physical device, represented by Equipment. Thus, it cannot have a Location alone."
    .
