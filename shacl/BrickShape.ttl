@prefix brick: <https://brickschema.org/schema/Brick#> .
@prefix bsh: <https://brickschema.org/schema/BrickShape#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

bsh:hasHotColdDeck a sh:NodeShape ;
    sh:property [ sh:message "DDAHU must have a brick:Hot_Deck" ;
            sh:path brick:hasPart ;
            sh:qualifiedMaxCount 1 ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:class brick:Hot_Deck ] ;
            sh:qualifiedValueShapesDisjoint true ],
        [ sh:message "DDAHU must have a brick:Cold_Deck" ;
            sh:path brick:hasPart ;
            sh:qualifiedMaxCount 1 ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:class brick:Cold_Deck ] ;
            sh:qualifiedValueShapesDisjoint true ] ;
    sh:targetClass brick:DDAHU .

bsh:hasLocationShape a sh:NodeShape ;
    sh:message "Points are a virtual concept and always belonging to a physical device, represented by Equipment. Thus, it cannot have a Location alone." ;
    sh:not [ sh:class brick:Point ] ;
    sh:targetSubjectsOf brick:hasLocation .

brick:Collection a sh:NodeShape ;
    sh:and ( [ sh:message "Collection is an exclusive top class." ;
                sh:not [ sh:class brick:Equipment ] ] [ sh:message "Collection is an exclusive top class." ;
                sh:not [ sh:class brick:Location ] ] [ sh:message "Collection is an exclusive top class." ;
                sh:not [ sh:class brick:Substance ] ] [ sh:message "Collection is an exclusive top class." ;
                sh:not [ sh:class brick:Quantity ] ] [ sh:message "Collection is an exclusive top class." ;
                sh:not [ sh:class brick:Point ] ] ) ;
    sh:message "Collection is an exclusive top class." ;
    sh:property [ sh:message "A Collection can be associated with Equipments, Locations, Points, and other Collections." ;
            sh:or ( [ sh:class brick:Equipment ] [ sh:class brick:Location ] [ sh:class brick:Point ] [ sh:class brick:Collection ] ) ;
            sh:path brick:hasPart ] .

brick:Point a sh:NodeShape ;
    sh:and ( [ sh:message "Point is an exclusive top class." ;
                sh:not [ sh:class brick:Equipment ] ] [ sh:message "Point is an exclusive top class." ;
                sh:not [ sh:class brick:Location ] ] [ sh:message "Point is an exclusive top class." ;
                sh:not [ sh:class brick:Substance ] ] [ sh:message "Point is an exclusive top class." ;
                sh:not [ sh:class brick:Quantity ] ] [ sh:message "Point is an exclusive top class." ;
                sh:not [ sh:class brick:Collection ] ] ) ;
    sh:message "Point is an exclusive top class." ;
    sh:property [ sh:message "A point can be associated with Locations or Equipment." ;
            sh:or ( [ sh:class brick:Location ] [ sh:class brick:Equipment ] ) ;
            sh:path brick:isPointOf ] .

brick:Equipment a sh:NodeShape ;
    sh:and ( [ sh:message "Equipment is an exclusive top class." ;
                sh:not [ sh:class brick:Point ] ] [ sh:message "Equipment is an exclusive top class." ;
                sh:not [ sh:class brick:Location ] ] [ sh:message "Equipment is an exclusive top class." ;
                sh:not [ sh:class brick:Substance ] ] [ sh:message "Equipment is an exclusive top class." ;
                sh:not [ sh:class brick:Quantity ] ] [ sh:message "Equipment is an exclusive top class." ;
                sh:not [ sh:class brick:Collection ] ] ) ;
    sh:message "Equipment is an exclusive top class." ;
    sh:property [ sh:class brick:Equipment ;
            sh:message "A piece of Equipment's parts should be always other Equipment." ;
            sh:path brick:hasPart ],
        [ sh:message "Equipment can be part of a Collection, System or other Equipment." ;
            sh:or ( [ sh:class brick:System ] [ sh:class brick:Equipment ] [ sh:class brick:Collection ] ) ;
            sh:path brick:isPartOf ],
        [ sh:class brick:Location ;
            sh:message "A piece of Equipment can be located only at a Location" ;
            sh:path brick:hasLocation ],
        [ sh:message "A piece of Equipment can feed a Equipment or Location." ;
            sh:or ( [ sh:class brick:Equipment ] [ sh:class brick:Location ] ) ;
            sh:path brick:feeds ],
        [ sh:class brick:Point ;
            sh:message "A piece of Equipment may have associated Points" ;
            sh:path brick:hasPoint ] .

brick:Location a sh:NodeShape ;
    sh:and ( [ sh:message "Location is an exclusive top class." ;
                sh:not [ sh:class brick:Point ] ] [ sh:message "Location is an exclusive top class." ;
                sh:not [ sh:class brick:Equipment ] ] [ sh:message "Location is an exclusive top class." ;
                sh:not [ sh:class brick:Substance ] ] [ sh:message "Location is an exclusive top class." ;
                sh:not [ sh:class brick:Quantity ] ] [ sh:message "Location is an exclusive top class." ;
                sh:not [ sh:class brick:Collection ] ] ) ;
    sh:message "Location is an exclusive top class." ;
    sh:property [ sh:class brick:Location ;
            sh:message "A Location's parts should be always Locations." ;
            sh:path brick:hasPart ],
        [ sh:class brick:Location ;
            sh:message "A Location's parts should be always Locations." ;
            sh:path brick:isPartOf ],
        [ sh:class brick:Equipment ;
            sh:message "Locations can be fed only by other Equipment." ;
            sh:path brick:isFedBy ],
        [ sh:class brick:Point ;
            sh:message "A Location may have associated Points" ;
            sh:path brick:hasPoint ] .
