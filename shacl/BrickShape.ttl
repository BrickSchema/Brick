@prefix brick: <https://brickschema.org/schema/Brick#> .
@prefix bsh: <https://brickschema.org/schema/BrickShape#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix unit: <http://qudt.org/vocab/unit/> .
@prefix vcard: <http://www.w3.org/2006/vcard/ns#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

bsh:EquipmentShape a sh:NodeShape ;
    sh:and ( [ sh:message "Equipment is an exclusive top class." ;
                sh:not [ sh:class brick:Point ] ] [ sh:message "Equipment is an exclusive top class." ;
                sh:not [ sh:class brick:Location ] ] [ sh:message "Equipment is an exclusive top class." ;
                sh:not [ sh:class brick:Substance ] ] [ sh:message "Equipment is an exclusive top class." ;
                sh:not [ sh:class brick:Quantity ] ] ) ;
    sh:message "Equipment is an exclusive top class." ;
    sh:or ( sh:property [ sh:class brick:System ;
                sh:message "Equipment can be part of a System or other Equipment" ;
                sh:path brick:isPartOf ] sh:property [ sh:class brick:Equipment ;
                sh:message "Equipment can be part of a System or other Equipment" ;
                sh:path brick:isPartOf ] ),
        ( sh:property [ sh:class brick:Equipment ;
                sh:message "A piece of Equipment can feed a Equipment" ;
                sh:path brick:feeds ] sh:property [ sh:class brick:Location ;
                sh:message "A piece of Equipment can feed a Location" ;
                sh:path brick:feeds ] ) ;
    sh:property [ sh:class brick:Equipment ;
            sh:message "A piece of Equipment's parts should be always other Equipment." ;
            sh:path brick:hasPart ],
        [ sh:class brick:Location ;
            sh:message "A piece of Equipment can be located only at a Location" ;
            sh:path brick:hasLocation ],
        [ sh:class brick:Point ;
            sh:message "A piece of Equipment may have associated Points" ;
            sh:path brick:hasPoint ] ;
    sh:targetClass brick:Equipment .

bsh:LocationShape a sh:NodeShape ;
    sh:and ( [ sh:message "Location is an exclusive top class." ;
                sh:not [ sh:class brick:Point ] ] [ sh:message "Location is an exclusive top class." ;
                sh:not [ sh:class brick:Equipment ] ] [ sh:message "Location is an exclusive top class." ;
                sh:not [ sh:class brick:Substance ] ] [ sh:message "Location is an exclusive top class." ;
                sh:not [ sh:class brick:Quantity ] ] ) ;
    sh:property [ sh:class brick:Location ;
            sh:message "A Location's parts should be always Locations." ;
            sh:path brick:hasPart ],
        [ sh:class brick:Location ;
            sh:message "A Location's parts should be always Locations." ;
            sh:path brick:isPartOf ],
        [ sh:class brick:Equipment ;
            sh:message "Locations can be fed only by other Equipment." ;
            sh:path brick:isFedBy ],
        [ sh:class brick:Point ;
            sh:message "A Location may have associated Points" ;
            sh:path brick:hasPoint ] ;
    sh:targetClass brick:Location .

bsh:PointShape a sh:NodeShape ;
    sh:and ( [ sh:message "Point is an exclusive top class." ;
                sh:not [ sh:class brick:Equipment ] ] [ sh:message "Point is an exclusive top class." ;
                sh:not [ sh:class brick:Location ] ] [ sh:message "Point is an exclusive top class." ;
                sh:not [ sh:class brick:Substance ] ] [ sh:message "Point is an exclusive top class." ;
                sh:not [ sh:class brick:Quantity ] ] ) ;
    sh:message "Point is an exclusive top class." ;
    sh:or ( sh:property [ sh:class brick:Location ;
                sh:message "A point can be associated with Locations or Equipment" ;
                sh:path brick:isPointOf ] sh:property [ sh:class brick:Equipment ;
                sh:message "A point can be associated with Locations or Equipment" ;
                sh:path brick:isPointOf ] ) ;
    sh:targetClass brick:Point .

bsh:hasAddressDomainShape a sh:NodeShape ;
    sh:class brick:Building ;
    sh:message "Property hasAddress has subject with incorrect type" ;
    sh:targetSubjectsOf brick:hasAddress .

bsh:hasAddressRangeShape a sh:NodeShape ;
    sh:property [ sh:class vcard:Address ;
            sh:message "Property hasAddress has object with incorrect type" ;
            sh:path brick:hasAddress ] ;
    sh:targetSubjectsOf brick:hasAddress .

bsh:hasAssociatedTagDomainShape a sh:NodeShape ;
    sh:class owl:Class ;
    sh:message "Property hasAssociatedTag has subject with incorrect type" ;
    sh:targetSubjectsOf brick:hasAssociatedTag .

bsh:hasAssociatedTagRangeShape a sh:NodeShape ;
    sh:property [ sh:class brick:Tag ;
            sh:message "Property hasAssociatedTag has object with incorrect type" ;
            sh:path brick:hasAssociatedTag ] ;
    sh:targetSubjectsOf brick:hasAssociatedTag .

bsh:hasInputSubstanceRangeShape a sh:NodeShape ;
    sh:property [ sh:class brick:Substance ;
            sh:message "Property hasInputSubstance has object with incorrect type" ;
            sh:path brick:hasInputSubstance ] ;
    sh:targetSubjectsOf brick:hasInputSubstance .

bsh:hasLocationRangeShape a sh:NodeShape ;
    sh:property [ sh:class brick:Location ;
            sh:message "Property hasLocation has object with incorrect type" ;
            sh:path brick:hasLocation ] ;
    sh:targetSubjectsOf brick:hasLocation .

bsh:hasLocationShape a sh:Nodeshape ;
    sh:message "Points are a virtual concept and always belonging to a physical device, represented by Equipment. Thus, it cannot have a Location alone." ;
    sh:not [ sh:class brick:Point ] ;
    sh:targetSubjectsOf brick:hasLocation .

bsh:hasOutputSubstanceRangeShape a sh:NodeShape ;
    sh:property [ sh:class brick:Substance ;
            sh:message "Property hasOutputSubstance has object with incorrect type" ;
            sh:path brick:hasOutputSubstance ] ;
    sh:targetSubjectsOf brick:hasOutputSubstance .

bsh:hasPointRangeShape a sh:NodeShape ;
    sh:property [ sh:class brick:Point ;
            sh:message "Property hasPoint has object with incorrect type" ;
            sh:path brick:hasPoint ] ;
    sh:targetSubjectsOf brick:hasPoint .

bsh:hasTagRangeShape a sh:NodeShape ;
    sh:property [ sh:class brick:Tag ;
            sh:message "Property hasTag has object with incorrect type" ;
            sh:path brick:hasTag ] ;
    sh:targetSubjectsOf brick:hasTag .

bsh:hasTimeseriesIdDomainShape a sh:NodeShape ;
    sh:class brick:TimeseriesReference ;
    sh:message "Property hasTimeseriesId has subject with incorrect type" ;
    sh:targetSubjectsOf brick:hasTimeseriesId .

bsh:hasTimeseriesIdRangeShape a sh:NodeShape ;
    sh:property [ sh:class xsd:string ;
            sh:message "Property hasTimeseriesId has object with incorrect type" ;
            sh:path brick:hasTimeseriesId ] ;
    sh:targetSubjectsOf brick:hasTimeseriesId .

bsh:hasUnitRangeShape a sh:NodeShape ;
    sh:property [ sh:class unit:Unit ;
            sh:message "Property hasUnit has object with incorrect type" ;
            sh:path brick:hasUnit ] ;
    sh:targetSubjectsOf brick:hasUnit .

bsh:isAssociatedWithDomainShape a sh:NodeShape ;
    sh:class brick:Tag ;
    sh:message "Property isAssociatedWith has subject with incorrect type" ;
    sh:targetSubjectsOf brick:isAssociatedWith .

bsh:isAssociatedWithRangeShape a sh:NodeShape ;
    sh:property [ sh:class owl:Class ;
            sh:message "Property isAssociatedWith has object with incorrect type" ;
            sh:path brick:isAssociatedWith ] ;
    sh:targetSubjectsOf brick:isAssociatedWith .

bsh:isLocationOfDomainShape a sh:NodeShape ;
    sh:class brick:Location ;
    sh:message "Property isLocationOf has subject with incorrect type" ;
    sh:targetSubjectsOf brick:isLocationOf .

bsh:isMeasuredByDomainShape a sh:NodeShape ;
    sh:class brick:Measurable ;
    sh:message "Property isMeasuredBy has subject with incorrect type" ;
    sh:targetSubjectsOf brick:isMeasuredBy .

bsh:isMeasuredByRangeShape a sh:NodeShape ;
    sh:property [ sh:class brick:Point ;
            sh:message "Property isMeasuredBy has object with incorrect type" ;
            sh:path brick:isMeasuredBy ] ;
    sh:targetSubjectsOf brick:isMeasuredBy .

bsh:isPointOfDomainShape a sh:NodeShape ;
    sh:class brick:Point ;
    sh:message "Property isPointOf has subject with incorrect type" ;
    sh:targetSubjectsOf brick:isPointOf .

bsh:isRegulatedByDomainShape a sh:NodeShape ;
    sh:class brick:Substance ;
    sh:message "Property isRegulatedBy has subject with incorrect type" ;
    sh:targetSubjectsOf brick:isRegulatedBy .

bsh:isRegulatedByRangeShape a sh:NodeShape ;
    sh:property [ sh:class brick:Equipment ;
            sh:message "Property isRegulatedBy has object with incorrect type" ;
            sh:path brick:isRegulatedBy ] ;
    sh:targetSubjectsOf brick:isRegulatedBy .

bsh:isTagOfDomainShape a sh:NodeShape ;
    sh:class brick:Tag ;
    sh:message "Property isTagOf has subject with incorrect type" ;
    sh:targetSubjectsOf brick:isTagOf .

bsh:measuresDomainShape a sh:NodeShape ;
    sh:class brick:Point ;
    sh:message "Property measures has subject with incorrect type" ;
    sh:targetSubjectsOf brick:measures .

bsh:measuresRangeShape a sh:NodeShape ;
    sh:property [ sh:class brick:Measurable ;
            sh:message "Property measures has object with incorrect type" ;
            sh:path brick:measures ] ;
    sh:targetSubjectsOf brick:measures .

bsh:regulatesDomainShape a sh:NodeShape ;
    sh:class brick:Equipment ;
    sh:message "Property regulates has subject with incorrect type" ;
    sh:targetSubjectsOf brick:regulates .

bsh:regulatesRangeShape a sh:NodeShape ;
    sh:property [ sh:class brick:Substance ;
            sh:message "Property regulates has object with incorrect type" ;
            sh:path brick:regulates ] ;
    sh:targetSubjectsOf brick:regulates .

bsh:storedAtDomainShape a sh:NodeShape ;
    sh:class brick:TimeseriesReference ;
    sh:message "Property storedAt has subject with incorrect type" ;
    sh:targetSubjectsOf brick:storedAt .

bsh:timeseriesDomainShape a sh:NodeShape ;
    sh:class brick:Point ;
    sh:message "Property timeseries has subject with incorrect type" ;
    sh:targetSubjectsOf brick:timeseries .

bsh:timeseriesRangeShape a sh:NodeShape ;
    sh:property [ sh:class brick:TimeseriesReference ;
            sh:message "Property timeseries has object with incorrect type" ;
            sh:path brick:timeseries ] ;
    sh:targetSubjectsOf brick:timeseries .
